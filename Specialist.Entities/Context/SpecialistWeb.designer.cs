#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Specialist.Entities.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SpecialistWeb")]
	public partial class SpecialistWebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMarketingActionStudent(MarketingActionStudent instance);
    partial void UpdateMarketingActionStudent(MarketingActionStudent instance);
    partial void DeleteMarketingActionStudent(MarketingActionStudent instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertCustomSection(CustomSection instance);
    partial void UpdateCustomSection(CustomSection instance);
    partial void DeleteCustomSection(CustomSection instance);
    partial void InsertCustomSectionType(CustomSectionType instance);
    partial void UpdateCustomSectionType(CustomSectionType instance);
    partial void DeleteCustomSectionType(CustomSectionType instance);
    partial void InsertDiscountAuthorizationType(DiscountAuthorizationType instance);
    partial void UpdateDiscountAuthorizationType(DiscountAuthorizationType instance);
    partial void DeleteDiscountAuthorizationType(DiscountAuthorizationType instance);
    partial void InsertDiscountCity(DiscountCity instance);
    partial void UpdateDiscountCity(DiscountCity instance);
    partial void DeleteDiscountCity(DiscountCity instance);
    partial void InsertDiscountComplex(DiscountComplex instance);
    partial void UpdateDiscountComplex(DiscountComplex instance);
    partial void DeleteDiscountComplex(DiscountComplex instance);
    partial void InsertDiscountCustomerType(DiscountCustomerType instance);
    partial void UpdateDiscountCustomerType(DiscountCustomerType instance);
    partial void DeleteDiscountCustomerType(DiscountCustomerType instance);
    partial void InsertDiscountGraduateCourse(DiscountGraduateCourse instance);
    partial void UpdateDiscountGraduateCourse(DiscountGraduateCourse instance);
    partial void DeleteDiscountGraduateCourse(DiscountGraduateCourse instance);
    partial void InsertDiscountPersonCategory(DiscountPersonCategory instance);
    partial void UpdateDiscountPersonCategory(DiscountPersonCategory instance);
    partial void DeleteDiscountPersonCategory(DiscountPersonCategory instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertMarketingAction(MarketingAction instance);
    partial void UpdateMarketingAction(MarketingAction instance);
    partial void DeleteMarketingAction(MarketingAction instance);
    partial void InsertPersonCategory(PersonCategory instance);
    partial void UpdatePersonCategory(PersonCategory instance);
    partial void DeletePersonCategory(PersonCategory instance);
    partial void InsertPresent(Present instance);
    partial void UpdatePresent(Present instance);
    partial void DeletePresent(Present instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertOrderExam(OrderExam instance);
    partial void UpdateOrderExam(OrderExam instance);
    partial void DeleteOrderExam(OrderExam instance);
    partial void InsertUserMessage(UserMessage instance);
    partial void UpdateUserMessage(UserMessage instance);
    partial void DeleteUserMessage(UserMessage instance);
    partial void InsertMessageSection(MessageSection instance);
    partial void UpdateMessageSection(MessageSection instance);
    partial void DeleteMessageSection(MessageSection instance);
    partial void InsertSiteObjectRelation(SiteObjectRelation instance);
    partial void UpdateSiteObjectRelation(SiteObjectRelation instance);
    partial void DeleteSiteObjectRelation(SiteObjectRelation instance);
    partial void InsertSiteObject(SiteObject instance);
    partial void UpdateSiteObject(SiteObject instance);
    partial void DeleteSiteObject(SiteObject instance);
    partial void InsertNews(News instance);
    partial void UpdateNews(News instance);
    partial void DeleteNews(News instance);
    partial void InsertSimplePageRelation(SimplePageRelation instance);
    partial void UpdateSimplePageRelation(SimplePageRelation instance);
    partial void DeleteSimplePageRelation(SimplePageRelation instance);
    partial void InsertSimplePage(SimplePage instance);
    partial void UpdateSimplePage(SimplePage instance);
    partial void DeleteSimplePage(SimplePage instance);
    partial void InsertResponse(Response instance);
    partial void UpdateResponse(Response instance);
    partial void DeleteResponse(Response instance);
    partial void InsertRawQuestionnaire(RawQuestionnaire instance);
    partial void UpdateRawQuestionnaire(RawQuestionnaire instance);
    partial void DeleteRawQuestionnaire(RawQuestionnaire instance);
    partial void InsertPollOption(PollOption instance);
    partial void UpdatePollOption(PollOption instance);
    partial void DeletePollOption(PollOption instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertSuccessStory(SuccessStory instance);
    partial void UpdateSuccessStory(SuccessStory instance);
    partial void DeleteSuccessStory(SuccessStory instance);
    partial void InsertCourseFile(CourseFile instance);
    partial void UpdateCourseFile(CourseFile instance);
    partial void DeleteCourseFile(CourseFile instance);
    partial void InsertGroupFile(GroupFile instance);
    partial void UpdateGroupFile(GroupFile instance);
    partial void DeleteGroupFile(GroupFile instance);
    partial void InsertUserFile(UserFile instance);
    partial void UpdateUserFile(UserFile instance);
    partial void DeleteUserFile(UserFile instance);
    partial void InsertVacancy(Vacancy instance);
    partial void UpdateVacancy(Vacancy instance);
    partial void DeleteVacancy(Vacancy instance);
    partial void InsertCompetition(Competition instance);
    partial void UpdateCompetition(Competition instance);
    partial void DeleteCompetition(Competition instance);
    partial void InsertUserCompetition(UserCompetition instance);
    partial void UpdateUserCompetition(UserCompetition instance);
    partial void DeleteUserCompetition(UserCompetition instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertOrgResponse(OrgResponse instance);
    partial void UpdateOrgResponse(OrgResponse instance);
    partial void DeleteOrgResponse(OrgResponse instance);
    partial void InsertOrgProject(OrgProject instance);
    partial void UpdateOrgProject(OrgProject instance);
    partial void DeleteOrgProject(OrgProject instance);
    partial void InsertUserWork(UserWork instance);
    partial void UpdateUserWork(UserWork instance);
    partial void DeleteUserWork(UserWork instance);
    partial void InsertUserWorkSection(UserWorkSection instance);
    partial void UpdateUserWorkSection(UserWorkSection instance);
    partial void DeleteUserWorkSection(UserWorkSection instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertSiteTerm(SiteTerm instance);
    partial void UpdateSiteTerm(SiteTerm instance);
    partial void DeleteSiteTerm(SiteTerm instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertIpAddress(IpAddress instance);
    partial void UpdateIpAddress(IpAddress instance);
    partial void DeleteIpAddress(IpAddress instance);
    partial void InsertAdvice(Advice instance);
    partial void UpdateAdvice(Advice instance);
    partial void DeleteAdvice(Advice instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertGuide(Guide instance);
    partial void UpdateGuide(Guide instance);
    partial void DeleteGuide(Guide instance);
    partial void InsertMailTemplate(MailTemplate instance);
    partial void UpdateMailTemplate(MailTemplate instance);
    partial void DeleteMailTemplate(MailTemplate instance);
    partial void InsertPageMeta(PageMeta instance);
    partial void UpdatePageMeta(PageMeta instance);
    partial void DeletePageMeta(PageMeta instance);
    partial void InsertOrgVacancy(OrgVacancy instance);
    partial void UpdateOrgVacancy(OrgVacancy instance);
    partial void DeleteOrgVacancy(OrgVacancy instance);
    partial void InsertResume(Resume instance);
    partial void UpdateResume(Resume instance);
    partial void DeleteResume(Resume instance);
    partial void InsertUsefulInformation(UsefulInformation instance);
    partial void UpdateUsefulInformation(UsefulInformation instance);
    partial void DeleteUsefulInformation(UsefulInformation instance);
    partial void InsertOrderExtras(OrderExtras instance);
    partial void UpdateOrderExtras(OrderExtras instance);
    partial void DeleteOrderExtras(OrderExtras instance);
    partial void InsertYdBannerPhrase(YdBannerPhrase instance);
    partial void UpdateYdBannerPhrase(YdBannerPhrase instance);
    partial void DeleteYdBannerPhrase(YdBannerPhrase instance);
    partial void InsertVideoCategory(VideoCategory instance);
    partial void UpdateVideoCategory(VideoCategory instance);
    partial void DeleteVideoCategory(VideoCategory instance);
    partial void InsertEntityStudySet(EntityStudySet instance);
    partial void UpdateEntityStudySet(EntityStudySet instance);
    partial void DeleteEntityStudySet(EntityStudySet instance);
    partial void InsertHtmlBlock(HtmlBlock instance);
    partial void UpdateHtmlBlock(HtmlBlock instance);
    partial void DeleteHtmlBlock(HtmlBlock instance);
    partial void InsertUserCourseInfo(UserCourseInfo instance);
    partial void UpdateUserCourseInfo(UserCourseInfo instance);
    partial void DeleteUserCourseInfo(UserCourseInfo instance);
    partial void InsertImageMeta(ImageMeta instance);
    partial void UpdateImageMeta(ImageMeta instance);
    partial void DeleteImageMeta(ImageMeta instance);
    partial void InsertCityInfo(CityInfo instance);
    partial void UpdateCityInfo(CityInfo instance);
    partial void DeleteCityInfo(CityInfo instance);
    partial void InsertSimpleValue(SimpleValue instance);
    partial void UpdateSimpleValue(SimpleValue instance);
    partial void DeleteSimpleValue(SimpleValue instance);
    partial void InsertCompanyFile(CompanyFile instance);
    partial void UpdateCompanyFile(CompanyFile instance);
    partial void DeleteCompanyFile(CompanyFile instance);
    partial void InsertLectureFile(LectureFile instance);
    partial void UpdateLectureFile(LectureFile instance);
    partial void DeleteLectureFile(LectureFile instance);
    partial void InsertGroupData(GroupData instance);
    partial void UpdateGroupData(GroupData instance);
    partial void DeleteGroupData(GroupData instance);
    partial void InsertSberbankOrder(SberbankOrder instance);
    partial void UpdateSberbankOrder(SberbankOrder instance);
    partial void DeleteSberbankOrder(SberbankOrder instance);
    partial void InsertAlbumVideo(AlbumVideo instance);
    partial void UpdateAlbumVideo(AlbumVideo instance);
    partial void DeleteAlbumVideo(AlbumVideo instance);
    #endregion
		
		public SpecialistWebDataContext() : 
				base(global::Specialist.Entities.Properties.Settings.Default.SpecialistWebConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistWebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistWebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistWebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistWebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MarketingActionStudent> MarketingActionStudents
		{
			get
			{
				return this.GetTable<MarketingActionStudent>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<CustomSection> CustomSections
		{
			get
			{
				return this.GetTable<CustomSection>();
			}
		}
		
		public System.Data.Linq.Table<CustomSectionType> CustomSectionTypes
		{
			get
			{
				return this.GetTable<CustomSectionType>();
			}
		}
		
		public System.Data.Linq.Table<DiscountAuthorizationType> DiscountAuthorizationTypes
		{
			get
			{
				return this.GetTable<DiscountAuthorizationType>();
			}
		}
		
		public System.Data.Linq.Table<DiscountCity> DiscountCities
		{
			get
			{
				return this.GetTable<DiscountCity>();
			}
		}
		
		public System.Data.Linq.Table<DiscountComplex> DiscountComplexes
		{
			get
			{
				return this.GetTable<DiscountComplex>();
			}
		}
		
		public System.Data.Linq.Table<DiscountCustomerType> DiscountCustomerTypes
		{
			get
			{
				return this.GetTable<DiscountCustomerType>();
			}
		}
		
		public System.Data.Linq.Table<DiscountGraduateCourse> DiscountGraduateCourses
		{
			get
			{
				return this.GetTable<DiscountGraduateCourse>();
			}
		}
		
		public System.Data.Linq.Table<DiscountPersonCategory> DiscountPersonCategories
		{
			get
			{
				return this.GetTable<DiscountPersonCategory>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<MarketingAction> MarketingActions
		{
			get
			{
				return this.GetTable<MarketingAction>();
			}
		}
		
		public System.Data.Linq.Table<PersonCategory> PersonCategories
		{
			get
			{
				return this.GetTable<PersonCategory>();
			}
		}
		
		public System.Data.Linq.Table<Present> Presents
		{
			get
			{
				return this.GetTable<Present>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<OrderExam> OrderExams
		{
			get
			{
				return this.GetTable<OrderExam>();
			}
		}
		
		public System.Data.Linq.Table<UserMessage> UserMessages
		{
			get
			{
				return this.GetTable<UserMessage>();
			}
		}
		
		public System.Data.Linq.Table<MessageSection> MessageSections
		{
			get
			{
				return this.GetTable<MessageSection>();
			}
		}
		
		public System.Data.Linq.Table<SiteObjectRelation> SiteObjectRelations
		{
			get
			{
				return this.GetTable<SiteObjectRelation>();
			}
		}
		
		public System.Data.Linq.Table<SiteObject> SiteObjects
		{
			get
			{
				return this.GetTable<SiteObject>();
			}
		}
		
		public System.Data.Linq.Table<News> News
		{
			get
			{
				return this.GetTable<News>();
			}
		}
		
		public System.Data.Linq.Table<SimplePageRelation> SimplePageRelations
		{
			get
			{
				return this.GetTable<SimplePageRelation>();
			}
		}
		
		public System.Data.Linq.Table<SimplePage> SimplePages
		{
			get
			{
				return this.GetTable<SimplePage>();
			}
		}
		
		public System.Data.Linq.Table<Response> Responses
		{
			get
			{
				return this.GetTable<Response>();
			}
		}
		
		public System.Data.Linq.Table<RawQuestionnaire> RawQuestionnaires
		{
			get
			{
				return this.GetTable<RawQuestionnaire>();
			}
		}
		
		public System.Data.Linq.Table<PollOption> PollOptions
		{
			get
			{
				return this.GetTable<PollOption>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<SuccessStory> SuccessStories
		{
			get
			{
				return this.GetTable<SuccessStory>();
			}
		}
		
		public System.Data.Linq.Table<CourseFile> CourseFiles
		{
			get
			{
				return this.GetTable<CourseFile>();
			}
		}
		
		public System.Data.Linq.Table<GroupFile> GroupFiles
		{
			get
			{
				return this.GetTable<GroupFile>();
			}
		}
		
		public System.Data.Linq.Table<UserFile> UserFiles
		{
			get
			{
				return this.GetTable<UserFile>();
			}
		}
		
		public System.Data.Linq.Table<Vacancy> Vacancies
		{
			get
			{
				return this.GetTable<Vacancy>();
			}
		}
		
		public System.Data.Linq.Table<Competition> Competitions
		{
			get
			{
				return this.GetTable<Competition>();
			}
		}
		
		public System.Data.Linq.Table<UserCompetition> UserCompetitions
		{
			get
			{
				return this.GetTable<UserCompetition>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<OrgResponse> OrgResponses
		{
			get
			{
				return this.GetTable<OrgResponse>();
			}
		}
		
		public System.Data.Linq.Table<OrgProject> OrgProjects
		{
			get
			{
				return this.GetTable<OrgProject>();
			}
		}
		
		public System.Data.Linq.Table<UserWork> UserWorks
		{
			get
			{
				return this.GetTable<UserWork>();
			}
		}
		
		public System.Data.Linq.Table<UserWorkSection> UserWorkSections
		{
			get
			{
				return this.GetTable<UserWorkSection>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<SiteTerm> SiteTerms
		{
			get
			{
				return this.GetTable<SiteTerm>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<IpAddress> IpAddresses
		{
			get
			{
				return this.GetTable<IpAddress>();
			}
		}
		
		public System.Data.Linq.Table<Advice> Advices
		{
			get
			{
				return this.GetTable<Advice>();
			}
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<Guide> Guides
		{
			get
			{
				return this.GetTable<Guide>();
			}
		}
		
		public System.Data.Linq.Table<MailTemplate> MailTemplates
		{
			get
			{
				return this.GetTable<MailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<PageMeta> PageMetas
		{
			get
			{
				return this.GetTable<PageMeta>();
			}
		}
		
		public System.Data.Linq.Table<OrgVacancy> OrgVacancies
		{
			get
			{
				return this.GetTable<OrgVacancy>();
			}
		}
		
		public System.Data.Linq.Table<Resume> Resumes
		{
			get
			{
				return this.GetTable<Resume>();
			}
		}
		
		public System.Data.Linq.Table<UsefulInformation> UsefulInformations
		{
			get
			{
				return this.GetTable<UsefulInformation>();
			}
		}
		
		public System.Data.Linq.Table<OrderExtras> OrderExtras
		{
			get
			{
				return this.GetTable<OrderExtras>();
			}
		}
		
		public System.Data.Linq.Table<YdBannerPhrase> YdBannerPhrases
		{
			get
			{
				return this.GetTable<YdBannerPhrase>();
			}
		}
		
		public System.Data.Linq.Table<VideoCategory> VideoCategories
		{
			get
			{
				return this.GetTable<VideoCategory>();
			}
		}
		
		public System.Data.Linq.Table<EntityStudySet> EntityStudySets
		{
			get
			{
				return this.GetTable<EntityStudySet>();
			}
		}
		
		public System.Data.Linq.Table<HtmlBlock> HtmlBlocks
		{
			get
			{
				return this.GetTable<HtmlBlock>();
			}
		}
		
		public System.Data.Linq.Table<UserCourseInfo> UserCourseInfos
		{
			get
			{
				return this.GetTable<UserCourseInfo>();
			}
		}
		
		public System.Data.Linq.Table<ImageMeta> ImageMetas
		{
			get
			{
				return this.GetTable<ImageMeta>();
			}
		}
		
		public System.Data.Linq.Table<CityInfo> CityInfos
		{
			get
			{
				return this.GetTable<CityInfo>();
			}
		}
		
		public System.Data.Linq.Table<SimpleValue> SimpleValues
		{
			get
			{
				return this.GetTable<SimpleValue>();
			}
		}
		
		public System.Data.Linq.Table<CompanyFile> CompanyFiles
		{
			get
			{
				return this.GetTable<CompanyFile>();
			}
		}
		
		public System.Data.Linq.Table<LectureFile> LectureFiles
		{
			get
			{
				return this.GetTable<LectureFile>();
			}
		}
		
		public System.Data.Linq.Table<GroupData> GroupDatas
		{
			get
			{
				return this.GetTable<GroupData>();
			}
		}
		
		public System.Data.Linq.Table<SberbankOrder> SberbankOrders
		{
			get
			{
				return this.GetTable<SberbankOrder>();
			}
		}
		
		public System.Data.Linq.Table<AlbumVideo> AlbumVideos
		{
			get
			{
				return this.GetTable<AlbumVideo>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SpecialistWeb.dbo.GetNewID", IsComposable=true)]
		public System.Nullable<System.Guid> GetNewID()
		{
			return ((System.Nullable<System.Guid>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SpecialistWeb.dbo.SplitContains", IsComposable=true)]
		public System.Nullable<bool> SplitContains([global::System.Data.Linq.Mapping.ParameterAttribute(Name="String", DbType="VarChar(MAX)")] string @string, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item", DbType="VarChar(MAX)")] string item)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @string, item).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspCheckPromoCode")]
		public ISingleResult<uspCheckPromoCodeResult> uspCheckPromoCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PromoCode", DbType="VarChar(30)")] string promoCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Course_TC", DbType="VarChar(50)")] string course_TC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), promoCode, course_TC);
			return ((ISingleResult<uspCheckPromoCodeResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tMarketingActionStudents")]
	public partial class MarketingActionStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarketingActionStudent_ID;
		
		private int _MarketingAction_ID;
		
		private decimal _Student_ID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<MarketingAction> _MarketingAction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingActionStudent_IDChanging(int value);
    partial void OnMarketingActionStudent_IDChanged();
    partial void OnMarketingAction_IDChanging(int value);
    partial void OnMarketingAction_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public MarketingActionStudent()
		{
			this._MarketingAction = default(EntityRef<MarketingAction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingActionStudent_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarketingActionStudent_ID
		{
			get
			{
				return this._MarketingActionStudent_ID;
			}
			set
			{
				if ((this._MarketingActionStudent_ID != value))
				{
					this.OnMarketingActionStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._MarketingActionStudent_ID = value;
					this.SendPropertyChanged("MarketingActionStudent_ID");
					this.OnMarketingActionStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingAction_ID", DbType="Int NOT NULL")]
		public int MarketingAction_ID
		{
			get
			{
				return this._MarketingAction_ID;
			}
			set
			{
				if ((this._MarketingAction_ID != value))
				{
					if (this._MarketingAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketingAction_IDChanging(value);
					this.SendPropertyChanging();
					this._MarketingAction_ID = value;
					this.SendPropertyChanged("MarketingAction_ID");
					this.OnMarketingAction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketingAction_MarketingActionStudent", Storage="_MarketingAction", ThisKey="MarketingAction_ID", OtherKey="MarketingAction_ID", IsForeignKey=true)]
		public MarketingAction MarketingAction
		{
			get
			{
				return this._MarketingAction.Entity;
			}
			set
			{
				MarketingAction previousValue = this._MarketingAction.Entity;
				if (((previousValue != value) 
							|| (this._MarketingAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarketingAction.Entity = null;
						previousValue.MarketingActionStudents.Remove(this);
					}
					this._MarketingAction.Entity = value;
					if ((value != null))
					{
						value.MarketingActionStudents.Add(this);
						this._MarketingAction_ID = value.MarketingAction_ID;
					}
					else
					{
						this._MarketingAction_ID = default(int);
					}
					this.SendPropertyChanged("MarketingAction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tCustomerTypes")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerType_TC;
		
		private string _Name;
		
		private EntitySet<DiscountCustomerType> _DiscountCustomerTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerType_TCChanging(string value);
    partial void OnCustomerType_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CustomerType()
		{
			this._DiscountCustomerTypes = new EntitySet<DiscountCustomerType>(new Action<DiscountCustomerType>(this.attach_DiscountCustomerTypes), new Action<DiscountCustomerType>(this.detach_DiscountCustomerTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerType_TC
		{
			get
			{
				return this._CustomerType_TC;
			}
			set
			{
				if ((this._CustomerType_TC != value))
				{
					this.OnCustomerType_TCChanging(value);
					this.SendPropertyChanging();
					this._CustomerType_TC = value;
					this.SendPropertyChanged("CustomerType_TC");
					this.OnCustomerType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_DiscountCustomerType", Storage="_DiscountCustomerTypes", ThisKey="CustomerType_TC", OtherKey="CustomerType_TC")]
		public EntitySet<DiscountCustomerType> DiscountCustomerTypes
		{
			get
			{
				return this._DiscountCustomerTypes;
			}
			set
			{
				this._DiscountCustomerTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiscountCustomerTypes(DiscountCustomerType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_DiscountCustomerTypes(DiscountCustomerType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tCustomSections")]
	public partial class CustomSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomSection_ID;
		
		private int _CustomSectionType_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private string _Description;
		
		private EntityRef<CustomSectionType> _CustomSectionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomSection_IDChanging(int value);
    partial void OnCustomSection_IDChanged();
    partial void OnCustomSectionType_IDChanging(int value);
    partial void OnCustomSectionType_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CustomSection()
		{
			this._CustomSectionType = default(EntityRef<CustomSectionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSection_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomSection_ID
		{
			get
			{
				return this._CustomSection_ID;
			}
			set
			{
				if ((this._CustomSection_ID != value))
				{
					this.OnCustomSection_IDChanging(value);
					this.SendPropertyChanging();
					this._CustomSection_ID = value;
					this.SendPropertyChanged("CustomSection_ID");
					this.OnCustomSection_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSectionType_ID", DbType="Int NOT NULL")]
		public int CustomSectionType_ID
		{
			get
			{
				return this._CustomSectionType_ID;
			}
			set
			{
				if ((this._CustomSectionType_ID != value))
				{
					if (this._CustomSectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomSectionType_IDChanging(value);
					this.SendPropertyChanging();
					this._CustomSectionType_ID = value;
					this.SendPropertyChanged("CustomSectionType_ID");
					this.OnCustomSectionType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomSectionType_CustomSection", Storage="_CustomSectionType", ThisKey="CustomSectionType_ID", OtherKey="CustomSectionType_ID", IsForeignKey=true)]
		public CustomSectionType CustomSectionType
		{
			get
			{
				return this._CustomSectionType.Entity;
			}
			set
			{
				CustomSectionType previousValue = this._CustomSectionType.Entity;
				if (((previousValue != value) 
							|| (this._CustomSectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomSectionType.Entity = null;
						previousValue.CustomSections.Remove(this);
					}
					this._CustomSectionType.Entity = value;
					if ((value != null))
					{
						value.CustomSections.Add(this);
						this._CustomSectionType_ID = value.CustomSectionType_ID;
					}
					else
					{
						this._CustomSectionType_ID = default(int);
					}
					this.SendPropertyChanged("CustomSectionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tCustomSectionTypes")]
	public partial class CustomSectionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomSectionType_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private EntitySet<CustomSection> _CustomSections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomSectionType_IDChanging(int value);
    partial void OnCustomSectionType_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    #endregion
		
		public CustomSectionType()
		{
			this._CustomSections = new EntitySet<CustomSection>(new Action<CustomSection>(this.attach_CustomSections), new Action<CustomSection>(this.detach_CustomSections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomSectionType_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomSectionType_ID
		{
			get
			{
				return this._CustomSectionType_ID;
			}
			set
			{
				if ((this._CustomSectionType_ID != value))
				{
					this.OnCustomSectionType_IDChanging(value);
					this.SendPropertyChanging();
					this._CustomSectionType_ID = value;
					this.SendPropertyChanged("CustomSectionType_ID");
					this.OnCustomSectionType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomSectionType_CustomSection", Storage="_CustomSections", ThisKey="CustomSectionType_ID", OtherKey="CustomSectionType_ID")]
		public EntitySet<CustomSection> CustomSections
		{
			get
			{
				return this._CustomSections;
			}
			set
			{
				this._CustomSections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomSections(CustomSection entity)
		{
			this.SendPropertyChanging();
			entity.CustomSectionType = this;
		}
		
		private void detach_CustomSections(CustomSection entity)
		{
			this.SendPropertyChanging();
			entity.CustomSectionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountAuthorizationTypes")]
	public partial class DiscountAuthorizationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountAuthorizationType_ID;
		
		private int _Discount_ID;
		
		private string _AuthorizationType_TC;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountAuthorizationType_IDChanging(int value);
    partial void OnDiscountAuthorizationType_IDChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnAuthorizationType_TCChanging(string value);
    partial void OnAuthorizationType_TCChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountAuthorizationType()
		{
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAuthorizationType_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountAuthorizationType_ID
		{
			get
			{
				return this._DiscountAuthorizationType_ID;
			}
			set
			{
				if ((this._DiscountAuthorizationType_ID != value))
				{
					this.OnDiscountAuthorizationType_IDChanging(value);
					this.SendPropertyChanging();
					this._DiscountAuthorizationType_ID = value;
					this.SendPropertyChanged("DiscountAuthorizationType_ID");
					this.OnDiscountAuthorizationType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AuthorizationType_TC
		{
			get
			{
				return this._AuthorizationType_TC;
			}
			set
			{
				if ((this._AuthorizationType_TC != value))
				{
					this.OnAuthorizationType_TCChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationType_TC = value;
					this.SendPropertyChanged("AuthorizationType_TC");
					this.OnAuthorizationType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountAuthorizationType", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountAuthorizationTypes.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountAuthorizationTypes.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountCities")]
	public partial class DiscountCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountCity_ID;
		
		private string _City_TC;
		
		private int _Discount_ID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountCity_IDChanging(int value);
    partial void OnDiscountCity_IDChanged();
    partial void OnCity_TCChanging(string value);
    partial void OnCity_TCChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountCity()
		{
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCity_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountCity_ID
		{
			get
			{
				return this._DiscountCity_ID;
			}
			set
			{
				if ((this._DiscountCity_ID != value))
				{
					this.OnDiscountCity_IDChanging(value);
					this.SendPropertyChanging();
					this._DiscountCity_ID = value;
					this.SendPropertyChanged("DiscountCity_ID");
					this.OnDiscountCity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City_TC
		{
			get
			{
				return this._City_TC;
			}
			set
			{
				if ((this._City_TC != value))
				{
					this.OnCity_TCChanging(value);
					this.SendPropertyChanging();
					this._City_TC = value;
					this.SendPropertyChanged("City_TC");
					this.OnCity_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountCity", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountCities.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountCities.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountComplexes")]
	public partial class DiscountComplex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountComplex_ID;
		
		private int _Discount_ID;
		
		private string _Complex_TC;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountComplex_IDChanging(int value);
    partial void OnDiscountComplex_IDChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnComplex_TCChanging(string value);
    partial void OnComplex_TCChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountComplex()
		{
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountComplex_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountComplex_ID
		{
			get
			{
				return this._DiscountComplex_ID;
			}
			set
			{
				if ((this._DiscountComplex_ID != value))
				{
					this.OnDiscountComplex_IDChanging(value);
					this.SendPropertyChanging();
					this._DiscountComplex_ID = value;
					this.SendPropertyChanged("DiscountComplex_ID");
					this.OnDiscountComplex_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Complex_TC
		{
			get
			{
				return this._Complex_TC;
			}
			set
			{
				if ((this._Complex_TC != value))
				{
					this.OnComplex_TCChanging(value);
					this.SendPropertyChanging();
					this._Complex_TC = value;
					this.SendPropertyChanged("Complex_TC");
					this.OnComplex_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountComplex", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountComplexes.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountComplexes.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountCustomerTypes")]
	public partial class DiscountCustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountCustomerTypes;
		
		private string _CustomerType_TC;
		
		private int _Discount_ID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<CustomerType> _CustomerType;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountCustomerTypesChanging(int value);
    partial void OnDiscountCustomerTypesChanged();
    partial void OnCustomerType_TCChanging(string value);
    partial void OnCustomerType_TCChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountCustomerType()
		{
			this._CustomerType = default(EntityRef<CustomerType>);
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCustomerTypes", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountCustomerTypes
		{
			get
			{
				return this._DiscountCustomerTypes;
			}
			set
			{
				if ((this._DiscountCustomerTypes != value))
				{
					this.OnDiscountCustomerTypesChanging(value);
					this.SendPropertyChanging();
					this._DiscountCustomerTypes = value;
					this.SendPropertyChanged("DiscountCustomerTypes");
					this.OnDiscountCustomerTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerType_TC
		{
			get
			{
				return this._CustomerType_TC;
			}
			set
			{
				if ((this._CustomerType_TC != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerType_TCChanging(value);
					this.SendPropertyChanging();
					this._CustomerType_TC = value;
					this.SendPropertyChanged("CustomerType_TC");
					this.OnCustomerType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_DiscountCustomerType", Storage="_CustomerType", ThisKey="CustomerType_TC", OtherKey="CustomerType_TC", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.DiscountCustomerTypes.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.DiscountCustomerTypes.Add(this);
						this._CustomerType_TC = value.CustomerType_TC;
					}
					else
					{
						this._CustomerType_TC = default(string);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountCustomerType", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountCustomerTypes.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountCustomerTypes.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountGraduateCourses")]
	public partial class DiscountGraduateCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountGraduateCourse_ID;
		
		private int _Discount_ID;
		
		private string _Course_TC;
		
		private bool _ForStudent;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Discount> _Discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountGraduateCourse_IDChanging(int value);
    partial void OnDiscountGraduateCourse_IDChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnForStudentChanging(bool value);
    partial void OnForStudentChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountGraduateCourse()
		{
			this._Discount = default(EntityRef<Discount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountGraduateCourse_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountGraduateCourse_ID
		{
			get
			{
				return this._DiscountGraduateCourse_ID;
			}
			set
			{
				if ((this._DiscountGraduateCourse_ID != value))
				{
					this.OnDiscountGraduateCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._DiscountGraduateCourse_ID = value;
					this.SendPropertyChanged("DiscountGraduateCourse_ID");
					this.OnDiscountGraduateCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForStudent", DbType="Bit NOT NULL")]
		public bool ForStudent
		{
			get
			{
				return this._ForStudent;
			}
			set
			{
				if ((this._ForStudent != value))
				{
					this.OnForStudentChanging(value);
					this.SendPropertyChanging();
					this._ForStudent = value;
					this.SendPropertyChanged("ForStudent");
					this.OnForStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountGraduateCourse", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountGraduateCourses.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountGraduateCourses.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscountPersonCategories")]
	public partial class DiscountPersonCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountPersonCategory_ID;
		
		private int _Discount_ID;
		
		private int _PersonCategory_ID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Discount> _Discount;
		
		private EntityRef<PersonCategory> _PersonCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountPersonCategory_IDChanging(int value);
    partial void OnDiscountPersonCategory_IDChanged();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnPersonCategory_IDChanging(int value);
    partial void OnPersonCategory_IDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public DiscountPersonCategory()
		{
			this._Discount = default(EntityRef<Discount>);
			this._PersonCategory = default(EntityRef<PersonCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPersonCategory_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountPersonCategory_ID
		{
			get
			{
				return this._DiscountPersonCategory_ID;
			}
			set
			{
				if ((this._DiscountPersonCategory_ID != value))
				{
					this.OnDiscountPersonCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._DiscountPersonCategory_ID = value;
					this.SendPropertyChanged("DiscountPersonCategory_ID");
					this.OnDiscountPersonCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", DbType="Int NOT NULL")]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					if (this._Discount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonCategory_ID", DbType="Int NOT NULL")]
		public int PersonCategory_ID
		{
			get
			{
				return this._PersonCategory_ID;
			}
			set
			{
				if ((this._PersonCategory_ID != value))
				{
					if (this._PersonCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._PersonCategory_ID = value;
					this.SendPropertyChanged("PersonCategory_ID");
					this.OnPersonCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountPersonCategory", Storage="_Discount", ThisKey="Discount_ID", OtherKey="Discount_ID", IsForeignKey=true)]
		public Discount Discount
		{
			get
			{
				return this._Discount.Entity;
			}
			set
			{
				Discount previousValue = this._Discount.Entity;
				if (((previousValue != value) 
							|| (this._Discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discount.Entity = null;
						previousValue.DiscountPersonCategories.Remove(this);
					}
					this._Discount.Entity = value;
					if ((value != null))
					{
						value.DiscountPersonCategories.Add(this);
						this._Discount_ID = value.Discount_ID;
					}
					else
					{
						this._Discount_ID = default(int);
					}
					this.SendPropertyChanged("Discount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonCategory_DiscountPersonCategory", Storage="_PersonCategory", ThisKey="PersonCategory_ID", OtherKey="PersonCategory_ID", IsForeignKey=true)]
		public PersonCategory PersonCategory
		{
			get
			{
				return this._PersonCategory.Entity;
			}
			set
			{
				PersonCategory previousValue = this._PersonCategory.Entity;
				if (((previousValue != value) 
							|| (this._PersonCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonCategory.Entity = null;
						previousValue.DiscountPersonCategories.Remove(this);
					}
					this._PersonCategory.Entity = value;
					if ((value != null))
					{
						value.DiscountPersonCategories.Add(this);
						this._PersonCategory_ID = value.PersonCategory_ID;
					}
					else
					{
						this._PersonCategory_ID = default(int);
					}
					this.SendPropertyChanged("PersonCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tDiscounts")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Discount_ID;
		
		private string _DayShift_TC;
		
		private System.Nullable<byte> _ReserveDateSpan;
		
		private System.Nullable<byte> _PercentValue;
		
		private System.Nullable<int> _MoneyValue;
		
		private System.Nullable<int> _Present_ID;
		
		private bool _IsSummable;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsWeekend;
		
		private System.Nullable<System.DateTime> _GroupDateBegin;
		
		private System.Nullable<System.DateTime> _GroupDateEnd;
		
		private bool _ForGraduate;
		
		private int _MarketingAction_ID;
		
		private System.Nullable<int> _PreviousOrderSum;
		
		private bool _ExcludeAuthorizationType;
		
		private System.Nullable<byte> _MaxPercentValue;
		
		private string _Description;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _ClabCardColor_TC;
		
		private EntitySet<DiscountAuthorizationType> _DiscountAuthorizationTypes;
		
		private EntitySet<DiscountCity> _DiscountCities;
		
		private EntitySet<DiscountComplex> _DiscountComplexes;
		
		private EntitySet<DiscountCustomerType> _DiscountCustomerTypes;
		
		private EntitySet<DiscountGraduateCourse> _DiscountGraduateCourses;
		
		private EntitySet<DiscountPersonCategory> _DiscountPersonCategories;
		
		private EntityRef<MarketingAction> _MarketingAction;
		
		private EntityRef<Present> _Present;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscount_IDChanging(int value);
    partial void OnDiscount_IDChanged();
    partial void OnDayShift_TCChanging(string value);
    partial void OnDayShift_TCChanged();
    partial void OnReserveDateSpanChanging(System.Nullable<byte> value);
    partial void OnReserveDateSpanChanged();
    partial void OnPercentValueChanging(System.Nullable<byte> value);
    partial void OnPercentValueChanged();
    partial void OnMoneyValueChanging(System.Nullable<int> value);
    partial void OnMoneyValueChanged();
    partial void OnPresent_IDChanging(System.Nullable<int> value);
    partial void OnPresent_IDChanged();
    partial void OnIsSummableChanging(bool value);
    partial void OnIsSummableChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsWeekendChanging(System.Nullable<bool> value);
    partial void OnIsWeekendChanged();
    partial void OnGroupDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnGroupDateBeginChanged();
    partial void OnGroupDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnGroupDateEndChanged();
    partial void OnForGraduateChanging(bool value);
    partial void OnForGraduateChanged();
    partial void OnMarketingAction_IDChanging(int value);
    partial void OnMarketingAction_IDChanged();
    partial void OnPreviousOrderSumChanging(System.Nullable<int> value);
    partial void OnPreviousOrderSumChanged();
    partial void OnExcludeAuthorizationTypeChanging(bool value);
    partial void OnExcludeAuthorizationTypeChanged();
    partial void OnMaxPercentValueChanging(System.Nullable<byte> value);
    partial void OnMaxPercentValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnClabCardColor_TCChanging(string value);
    partial void OnClabCardColor_TCChanged();
    #endregion
		
		public Discount()
		{
			this._DiscountAuthorizationTypes = new EntitySet<DiscountAuthorizationType>(new Action<DiscountAuthorizationType>(this.attach_DiscountAuthorizationTypes), new Action<DiscountAuthorizationType>(this.detach_DiscountAuthorizationTypes));
			this._DiscountCities = new EntitySet<DiscountCity>(new Action<DiscountCity>(this.attach_DiscountCities), new Action<DiscountCity>(this.detach_DiscountCities));
			this._DiscountComplexes = new EntitySet<DiscountComplex>(new Action<DiscountComplex>(this.attach_DiscountComplexes), new Action<DiscountComplex>(this.detach_DiscountComplexes));
			this._DiscountCustomerTypes = new EntitySet<DiscountCustomerType>(new Action<DiscountCustomerType>(this.attach_DiscountCustomerTypes), new Action<DiscountCustomerType>(this.detach_DiscountCustomerTypes));
			this._DiscountGraduateCourses = new EntitySet<DiscountGraduateCourse>(new Action<DiscountGraduateCourse>(this.attach_DiscountGraduateCourses), new Action<DiscountGraduateCourse>(this.detach_DiscountGraduateCourses));
			this._DiscountPersonCategories = new EntitySet<DiscountPersonCategory>(new Action<DiscountPersonCategory>(this.attach_DiscountPersonCategories), new Action<DiscountPersonCategory>(this.detach_DiscountPersonCategories));
			this._MarketingAction = default(EntityRef<MarketingAction>);
			this._Present = default(EntityRef<Present>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Discount_ID
		{
			get
			{
				return this._Discount_ID;
			}
			set
			{
				if ((this._Discount_ID != value))
				{
					this.OnDiscount_IDChanging(value);
					this.SendPropertyChanging();
					this._Discount_ID = value;
					this.SendPropertyChanged("Discount_ID");
					this.OnDiscount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayShift_TC", DbType="VarChar(3)")]
		public string DayShift_TC
		{
			get
			{
				return this._DayShift_TC;
			}
			set
			{
				if ((this._DayShift_TC != value))
				{
					this.OnDayShift_TCChanging(value);
					this.SendPropertyChanging();
					this._DayShift_TC = value;
					this.SendPropertyChanged("DayShift_TC");
					this.OnDayShift_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveDateSpan", DbType="TinyInt")]
		public System.Nullable<byte> ReserveDateSpan
		{
			get
			{
				return this._ReserveDateSpan;
			}
			set
			{
				if ((this._ReserveDateSpan != value))
				{
					this.OnReserveDateSpanChanging(value);
					this.SendPropertyChanging();
					this._ReserveDateSpan = value;
					this.SendPropertyChanged("ReserveDateSpan");
					this.OnReserveDateSpanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentValue", DbType="TinyInt")]
		public System.Nullable<byte> PercentValue
		{
			get
			{
				return this._PercentValue;
			}
			set
			{
				if ((this._PercentValue != value))
				{
					this.OnPercentValueChanging(value);
					this.SendPropertyChanging();
					this._PercentValue = value;
					this.SendPropertyChanged("PercentValue");
					this.OnPercentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyValue", DbType="Int")]
		public System.Nullable<int> MoneyValue
		{
			get
			{
				return this._MoneyValue;
			}
			set
			{
				if ((this._MoneyValue != value))
				{
					this.OnMoneyValueChanging(value);
					this.SendPropertyChanging();
					this._MoneyValue = value;
					this.SendPropertyChanged("MoneyValue");
					this.OnMoneyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_ID", DbType="Int")]
		public System.Nullable<int> Present_ID
		{
			get
			{
				return this._Present_ID;
			}
			set
			{
				if ((this._Present_ID != value))
				{
					if (this._Present.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPresent_IDChanging(value);
					this.SendPropertyChanging();
					this._Present_ID = value;
					this.SendPropertyChanged("Present_ID");
					this.OnPresent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSummable", DbType="Bit NOT NULL")]
		public bool IsSummable
		{
			get
			{
				return this._IsSummable;
			}
			set
			{
				if ((this._IsSummable != value))
				{
					this.OnIsSummableChanging(value);
					this.SendPropertyChanging();
					this._IsSummable = value;
					this.SendPropertyChanged("IsSummable");
					this.OnIsSummableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWeekend", DbType="Bit")]
		public System.Nullable<bool> IsWeekend
		{
			get
			{
				return this._IsWeekend;
			}
			set
			{
				if ((this._IsWeekend != value))
				{
					this.OnIsWeekendChanging(value);
					this.SendPropertyChanging();
					this._IsWeekend = value;
					this.SendPropertyChanged("IsWeekend");
					this.OnIsWeekendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDateBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> GroupDateBegin
		{
			get
			{
				return this._GroupDateBegin;
			}
			set
			{
				if ((this._GroupDateBegin != value))
				{
					this.OnGroupDateBeginChanging(value);
					this.SendPropertyChanging();
					this._GroupDateBegin = value;
					this.SendPropertyChanged("GroupDateBegin");
					this.OnGroupDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDateEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> GroupDateEnd
		{
			get
			{
				return this._GroupDateEnd;
			}
			set
			{
				if ((this._GroupDateEnd != value))
				{
					this.OnGroupDateEndChanging(value);
					this.SendPropertyChanging();
					this._GroupDateEnd = value;
					this.SendPropertyChanged("GroupDateEnd");
					this.OnGroupDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForGraduate", DbType="Bit NOT NULL")]
		public bool ForGraduate
		{
			get
			{
				return this._ForGraduate;
			}
			set
			{
				if ((this._ForGraduate != value))
				{
					this.OnForGraduateChanging(value);
					this.SendPropertyChanging();
					this._ForGraduate = value;
					this.SendPropertyChanged("ForGraduate");
					this.OnForGraduateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingAction_ID", DbType="Int NOT NULL")]
		public int MarketingAction_ID
		{
			get
			{
				return this._MarketingAction_ID;
			}
			set
			{
				if ((this._MarketingAction_ID != value))
				{
					if (this._MarketingAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketingAction_IDChanging(value);
					this.SendPropertyChanging();
					this._MarketingAction_ID = value;
					this.SendPropertyChanged("MarketingAction_ID");
					this.OnMarketingAction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousOrderSum", DbType="Int")]
		public System.Nullable<int> PreviousOrderSum
		{
			get
			{
				return this._PreviousOrderSum;
			}
			set
			{
				if ((this._PreviousOrderSum != value))
				{
					this.OnPreviousOrderSumChanging(value);
					this.SendPropertyChanging();
					this._PreviousOrderSum = value;
					this.SendPropertyChanged("PreviousOrderSum");
					this.OnPreviousOrderSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeAuthorizationType", DbType="Bit NOT NULL")]
		public bool ExcludeAuthorizationType
		{
			get
			{
				return this._ExcludeAuthorizationType;
			}
			set
			{
				if ((this._ExcludeAuthorizationType != value))
				{
					this.OnExcludeAuthorizationTypeChanging(value);
					this.SendPropertyChanging();
					this._ExcludeAuthorizationType = value;
					this.SendPropertyChanged("ExcludeAuthorizationType");
					this.OnExcludeAuthorizationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPercentValue", DbType="TinyInt")]
		public System.Nullable<byte> MaxPercentValue
		{
			get
			{
				return this._MaxPercentValue;
			}
			set
			{
				if ((this._MaxPercentValue != value))
				{
					this.OnMaxPercentValueChanging(value);
					this.SendPropertyChanging();
					this._MaxPercentValue = value;
					this.SendPropertyChanged("MaxPercentValue");
					this.OnMaxPercentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClabCardColor_TC")]
		public string ClabCardColor_TC
		{
			get
			{
				return this._ClabCardColor_TC;
			}
			set
			{
				if ((this._ClabCardColor_TC != value))
				{
					this.OnClabCardColor_TCChanging(value);
					this.SendPropertyChanging();
					this._ClabCardColor_TC = value;
					this.SendPropertyChanged("ClabCardColor_TC");
					this.OnClabCardColor_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountAuthorizationType", Storage="_DiscountAuthorizationTypes", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountAuthorizationType> DiscountAuthorizationTypes
		{
			get
			{
				return this._DiscountAuthorizationTypes;
			}
			set
			{
				this._DiscountAuthorizationTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountCity", Storage="_DiscountCities", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountCity> DiscountCities
		{
			get
			{
				return this._DiscountCities;
			}
			set
			{
				this._DiscountCities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountComplex", Storage="_DiscountComplexes", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountComplex> DiscountComplexes
		{
			get
			{
				return this._DiscountComplexes;
			}
			set
			{
				this._DiscountComplexes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountCustomerType", Storage="_DiscountCustomerTypes", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountCustomerType> DiscountCustomerTypes
		{
			get
			{
				return this._DiscountCustomerTypes;
			}
			set
			{
				this._DiscountCustomerTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountGraduateCourse", Storage="_DiscountGraduateCourses", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountGraduateCourse> DiscountGraduateCourses
		{
			get
			{
				return this._DiscountGraduateCourses;
			}
			set
			{
				this._DiscountGraduateCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discount_DiscountPersonCategory", Storage="_DiscountPersonCategories", ThisKey="Discount_ID", OtherKey="Discount_ID")]
		public EntitySet<DiscountPersonCategory> DiscountPersonCategories
		{
			get
			{
				return this._DiscountPersonCategories;
			}
			set
			{
				this._DiscountPersonCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketingAction_Discount", Storage="_MarketingAction", ThisKey="MarketingAction_ID", OtherKey="MarketingAction_ID", IsForeignKey=true)]
		public MarketingAction MarketingAction
		{
			get
			{
				return this._MarketingAction.Entity;
			}
			set
			{
				MarketingAction previousValue = this._MarketingAction.Entity;
				if (((previousValue != value) 
							|| (this._MarketingAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarketingAction.Entity = null;
						previousValue.Discounts.Remove(this);
					}
					this._MarketingAction.Entity = value;
					if ((value != null))
					{
						value.Discounts.Add(this);
						this._MarketingAction_ID = value.MarketingAction_ID;
					}
					else
					{
						this._MarketingAction_ID = default(int);
					}
					this.SendPropertyChanged("MarketingAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Present_Discount", Storage="_Present", ThisKey="Present_ID", OtherKey="Present_ID", IsForeignKey=true)]
		public Present Present
		{
			get
			{
				return this._Present.Entity;
			}
			set
			{
				Present previousValue = this._Present.Entity;
				if (((previousValue != value) 
							|| (this._Present.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Present.Entity = null;
						previousValue.Discounts.Remove(this);
					}
					this._Present.Entity = value;
					if ((value != null))
					{
						value.Discounts.Add(this);
						this._Present_ID = value.Present_ID;
					}
					else
					{
						this._Present_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Present");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiscountAuthorizationTypes(DiscountAuthorizationType entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountAuthorizationTypes(DiscountAuthorizationType entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_DiscountCities(DiscountCity entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountCities(DiscountCity entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_DiscountComplexes(DiscountComplex entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountComplexes(DiscountComplex entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_DiscountCustomerTypes(DiscountCustomerType entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountCustomerTypes(DiscountCustomerType entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_DiscountGraduateCourses(DiscountGraduateCourse entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountGraduateCourses(DiscountGraduateCourse entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
		
		private void attach_DiscountPersonCategories(DiscountPersonCategory entity)
		{
			this.SendPropertyChanging();
			entity.Discount = this;
		}
		
		private void detach_DiscountPersonCategories(DiscountPersonCategory entity)
		{
			this.SendPropertyChanging();
			entity.Discount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tMarketingActions")]
	public partial class MarketingAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarketingAction_ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _PromoCode;
		
		private string _SysName;
		
		private bool _IsAdvert;
		
		private string _UrlName;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _CourseTCList;
		
		private int _WebSortOrder;
		
		private bool _ShowOnCoursePages;
		
		private bool _IsSecret;
		
		private System.Nullable<int> _PromoCodeCount;
		
		private string _ShortDescription;
		
		private bool _IsOrg;
		
		private System.Nullable<int> _Type;
		
		private bool _IsSpecialOffer;
		
		private EntitySet<MarketingActionStudent> _MarketingActionStudents;
		
		private EntitySet<Discount> _Discounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingAction_IDChanging(int value);
    partial void OnMarketingAction_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnIsAdvertChanging(bool value);
    partial void OnIsAdvertChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnShowOnCoursePagesChanging(bool value);
    partial void OnShowOnCoursePagesChanged();
    partial void OnIsSecretChanging(bool value);
    partial void OnIsSecretChanged();
    partial void OnPromoCodeCountChanging(System.Nullable<int> value);
    partial void OnPromoCodeCountChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnIsOrgChanging(bool value);
    partial void OnIsOrgChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnIsSpecialOfferChanging(bool value);
    partial void OnIsSpecialOfferChanged();
    #endregion
		
		public MarketingAction()
		{
			this._MarketingActionStudents = new EntitySet<MarketingActionStudent>(new Action<MarketingActionStudent>(this.attach_MarketingActionStudents), new Action<MarketingActionStudent>(this.detach_MarketingActionStudents));
			this._Discounts = new EntitySet<Discount>(new Action<Discount>(this.attach_Discounts), new Action<Discount>(this.detach_Discounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingAction_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarketingAction_ID
		{
			get
			{
				return this._MarketingAction_ID;
			}
			set
			{
				if ((this._MarketingAction_ID != value))
				{
					this.OnMarketingAction_IDChanging(value);
					this.SendPropertyChanging();
					this._MarketingAction_ID = value;
					this.SendPropertyChanged("MarketingAction_ID");
					this.OnMarketingAction_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="VarChar(100)")]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(50)")]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdvert")]
		public bool IsAdvert
		{
			get
			{
				return this._IsAdvert;
			}
			set
			{
				if ((this._IsAdvert != value))
				{
					this.OnIsAdvertChanging(value);
					this.SendPropertyChanging();
					this._IsAdvert = value;
					this.SendPropertyChanged("IsAdvert");
					this.OnIsAdvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnCoursePages")]
		public bool ShowOnCoursePages
		{
			get
			{
				return this._ShowOnCoursePages;
			}
			set
			{
				if ((this._ShowOnCoursePages != value))
				{
					this.OnShowOnCoursePagesChanging(value);
					this.SendPropertyChanging();
					this._ShowOnCoursePages = value;
					this.SendPropertyChanged("ShowOnCoursePages");
					this.OnShowOnCoursePagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecret")]
		public bool IsSecret
		{
			get
			{
				return this._IsSecret;
			}
			set
			{
				if ((this._IsSecret != value))
				{
					this.OnIsSecretChanging(value);
					this.SendPropertyChanging();
					this._IsSecret = value;
					this.SendPropertyChanged("IsSecret");
					this.OnIsSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeCount")]
		public System.Nullable<int> PromoCodeCount
		{
			get
			{
				return this._PromoCodeCount;
			}
			set
			{
				if ((this._PromoCodeCount != value))
				{
					this.OnPromoCodeCountChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeCount = value;
					this.SendPropertyChanged("PromoCodeCount");
					this.OnPromoCodeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrg")]
		public bool IsOrg
		{
			get
			{
				return this._IsOrg;
			}
			set
			{
				if ((this._IsOrg != value))
				{
					this.OnIsOrgChanging(value);
					this.SendPropertyChanging();
					this._IsOrg = value;
					this.SendPropertyChanged("IsOrg");
					this.OnIsOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecialOffer")]
		public bool IsSpecialOffer
		{
			get
			{
				return this._IsSpecialOffer;
			}
			set
			{
				if ((this._IsSpecialOffer != value))
				{
					this.OnIsSpecialOfferChanging(value);
					this.SendPropertyChanging();
					this._IsSpecialOffer = value;
					this.SendPropertyChanged("IsSpecialOffer");
					this.OnIsSpecialOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketingAction_MarketingActionStudent", Storage="_MarketingActionStudents", ThisKey="MarketingAction_ID", OtherKey="MarketingAction_ID")]
		public EntitySet<MarketingActionStudent> MarketingActionStudents
		{
			get
			{
				return this._MarketingActionStudents;
			}
			set
			{
				this._MarketingActionStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarketingAction_Discount", Storage="_Discounts", ThisKey="MarketingAction_ID", OtherKey="MarketingAction_ID")]
		public EntitySet<Discount> Discounts
		{
			get
			{
				return this._Discounts;
			}
			set
			{
				this._Discounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MarketingActionStudents(MarketingActionStudent entity)
		{
			this.SendPropertyChanging();
			entity.MarketingAction = this;
		}
		
		private void detach_MarketingActionStudents(MarketingActionStudent entity)
		{
			this.SendPropertyChanging();
			entity.MarketingAction = null;
		}
		
		private void attach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.MarketingAction = this;
		}
		
		private void detach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.MarketingAction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tPersonCategories")]
	public partial class PersonCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonCategory_ID;
		
		private string _DocumentName;
		
		private string _DocumentInfo;
		
		private string _Name;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntitySet<DiscountPersonCategory> _DiscountPersonCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonCategory_IDChanging(int value);
    partial void OnPersonCategory_IDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDocumentInfoChanging(string value);
    partial void OnDocumentInfoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public PersonCategory()
		{
			this._DiscountPersonCategories = new EntitySet<DiscountPersonCategory>(new Action<DiscountPersonCategory>(this.attach_DiscountPersonCategories), new Action<DiscountPersonCategory>(this.detach_DiscountPersonCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonCategory_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonCategory_ID
		{
			get
			{
				return this._PersonCategory_ID;
			}
			set
			{
				if ((this._PersonCategory_ID != value))
				{
					this.OnPersonCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._PersonCategory_ID = value;
					this.SendPropertyChanged("PersonCategory_ID");
					this.OnPersonCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(100)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentInfo", DbType="VarChar(100)")]
		public string DocumentInfo
		{
			get
			{
				return this._DocumentInfo;
			}
			set
			{
				if ((this._DocumentInfo != value))
				{
					this.OnDocumentInfoChanging(value);
					this.SendPropertyChanging();
					this._DocumentInfo = value;
					this.SendPropertyChanged("DocumentInfo");
					this.OnDocumentInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonCategory_DiscountPersonCategory", Storage="_DiscountPersonCategories", ThisKey="PersonCategory_ID", OtherKey="PersonCategory_ID")]
		public EntitySet<DiscountPersonCategory> DiscountPersonCategories
		{
			get
			{
				return this._DiscountPersonCategories;
			}
			set
			{
				this._DiscountPersonCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiscountPersonCategories(DiscountPersonCategory entity)
		{
			this.SendPropertyChanging();
			entity.PersonCategory = this;
		}
		
		private void detach_DiscountPersonCategories(DiscountPersonCategory entity)
		{
			this.SendPropertyChanging();
			entity.PersonCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tPresents")]
	public partial class Present : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Present_ID;
		
		private string _Name;
		
		private string _Image;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntitySet<Discount> _Discounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPresent_IDChanging(int value);
    partial void OnPresent_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public Present()
		{
			this._Discounts = new EntitySet<Discount>(new Action<Discount>(this.attach_Discounts), new Action<Discount>(this.detach_Discounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Present_ID
		{
			get
			{
				return this._Present_ID;
			}
			set
			{
				if ((this._Present_ID != value))
				{
					this.OnPresent_IDChanging(value);
					this.SendPropertyChanging();
					this._Present_ID = value;
					this.SendPropertyChanged("Present_ID");
					this.OnPresent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Present_Discount", Storage="_Discounts", ThisKey="Present_ID", OtherKey="Present_ID")]
		public EntitySet<Discount> Discounts
		{
			get
			{
				return this._Discounts;
			}
			set
			{
				this._Discounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Present = this;
		}
		
		private void detach_Discounts(Discount entity)
		{
			this.SendPropertyChanging();
			entity.Present = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _OrderID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<decimal> _CompanyID;
		
		private string _PaymentType_TC;
		
		private bool _ContractSigned;
		
		private string _Manager_TC;
		
		private string _InetSource;
		
		private System.Nullable<System.DateTime> _InetSourceDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _PromoCode;
		
		private System.Guid _SessionID;
		
		private string _CustomerType;
		
		private bool _InPlan;
		
		private bool _Started;
		
		private byte _MailCount;
		
		private bool _IsGAExport;
		
		private string _OurOrg_TC;
		
		private string _FavoriteTeacher1;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<OrderExam> _OrderExams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(decimal value);
    partial void OnOrderIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<decimal> value);
    partial void OnCompanyIDChanged();
    partial void OnPaymentType_TCChanging(string value);
    partial void OnPaymentType_TCChanged();
    partial void OnContractSignedChanging(bool value);
    partial void OnContractSignedChanged();
    partial void OnManager_TCChanging(string value);
    partial void OnManager_TCChanged();
    partial void OnInetSourceChanging(string value);
    partial void OnInetSourceChanged();
    partial void OnInetSourceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInetSourceDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnSessionIDChanging(System.Guid value);
    partial void OnSessionIDChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnInPlanChanging(bool value);
    partial void OnInPlanChanged();
    partial void OnStartedChanging(bool value);
    partial void OnStartedChanged();
    partial void OnMailCountChanging(byte value);
    partial void OnMailCountChanged();
    partial void OnIsGAExportChanging(bool value);
    partial void OnIsGAExportChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnFavoriteTeacher1Changing(string value);
    partial void OnFavoriteTeacher1Changed();
    #endregion
		
		public Order()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderExams = new EntitySet<OrderExam>(new Action<OrderExam>(this.attach_OrderExams), new Action<OrderExam>(this.detach_OrderExams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType_TC", DbType="VarChar(4)")]
		public string PaymentType_TC
		{
			get
			{
				return this._PaymentType_TC;
			}
			set
			{
				if ((this._PaymentType_TC != value))
				{
					this.OnPaymentType_TCChanging(value);
					this.SendPropertyChanging();
					this._PaymentType_TC = value;
					this.SendPropertyChanged("PaymentType_TC");
					this.OnPaymentType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractSigned", DbType="Bit NOT NULL")]
		public bool ContractSigned
		{
			get
			{
				return this._ContractSigned;
			}
			set
			{
				if ((this._ContractSigned != value))
				{
					this.OnContractSignedChanging(value);
					this.SendPropertyChanging();
					this._ContractSigned = value;
					this.SendPropertyChanged("ContractSigned");
					this.OnContractSignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_TC", DbType="VarChar(50)")]
		public string Manager_TC
		{
			get
			{
				return this._Manager_TC;
			}
			set
			{
				if ((this._Manager_TC != value))
				{
					this.OnManager_TCChanging(value);
					this.SendPropertyChanging();
					this._Manager_TC = value;
					this.SendPropertyChanged("Manager_TC");
					this.OnManager_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InetSource", DbType="VarChar(50)")]
		public string InetSource
		{
			get
			{
				return this._InetSource;
			}
			set
			{
				if ((this._InetSource != value))
				{
					this.OnInetSourceChanging(value);
					this.SendPropertyChanging();
					this._InetSource = value;
					this.SendPropertyChanged("InetSource");
					this.OnInetSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InetSourceDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InetSourceDate
		{
			get
			{
				return this._InetSourceDate;
			}
			set
			{
				if ((this._InetSourceDate != value))
				{
					this.OnInetSourceDateChanging(value);
					this.SendPropertyChanging();
					this._InetSourceDate = value;
					this.SendPropertyChanged("InetSourceDate");
					this.OnInetSourceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", AutoSync=AutoSync.OnInsert, DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="VarChar(100)")]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="VarChar(10)")]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPlan", DbType="Bit NOT NULL")]
		public bool InPlan
		{
			get
			{
				return this._InPlan;
			}
			set
			{
				if ((this._InPlan != value))
				{
					this.OnInPlanChanging(value);
					this.SendPropertyChanging();
					this._InPlan = value;
					this.SendPropertyChanged("InPlan");
					this.OnInPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started")]
		public bool Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailCount")]
		public byte MailCount
		{
			get
			{
				return this._MailCount;
			}
			set
			{
				if ((this._MailCount != value))
				{
					this.OnMailCountChanging(value);
					this.SendPropertyChanging();
					this._MailCount = value;
					this.SendPropertyChanged("MailCount");
					this.OnMailCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGAExport")]
		public bool IsGAExport
		{
			get
			{
				return this._IsGAExport;
			}
			set
			{
				if ((this._IsGAExport != value))
				{
					this.OnIsGAExportChanging(value);
					this.SendPropertyChanging();
					this._IsGAExport = value;
					this.SendPropertyChanged("IsGAExport");
					this.OnIsGAExportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC")]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteTeacher1")]
		public string FavoriteTeacher1
		{
			get
			{
				return this._FavoriteTeacher1;
			}
			set
			{
				if ((this._FavoriteTeacher1 != value))
				{
					this.OnFavoriteTeacher1Changing(value);
					this.SendPropertyChanging();
					this._FavoriteTeacher1 = value;
					this.SendPropertyChanged("FavoriteTeacher1");
					this.OnFavoriteTeacher1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderExam", Storage="_OrderExams", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderExam> OrderExams
		{
			get
			{
				return this._OrderExams;
			}
			set
			{
				this._OrderExams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderExams(OrderExam entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderExams(OrderExam entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _OrderDetailID;
		
		private System.Nullable<decimal> _OrderID;
		
		private string _Course_TC;
		
		private string _Track_TC;
		
		private System.Nullable<decimal> _Group_ID;
		
		private decimal _Price;
		
		private string _PriceType_TC;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<byte> _PercentDiscount;
		
		private System.Nullable<int> _DiscountType;
		
		private System.Nullable<decimal> _MoneyDiscount;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _UserComment;
		
		private System.Nullable<decimal> _StudentInGroup_ID;
		
		private int _Count;
		
		private string _City_TC;
		
		private string _OrgStudents;
		
		private string _ReasonForLearning;
		
		private System.Nullable<int> _TestId;
		
		private string _JsonParams;
		
		private string _Notes;
		
		private System.Nullable<short> _SeatNumber;
		
		private string _SocialUrl;
		
		private string _SecondCourse_TC;
		
		private EntitySet<OrderExtras> _OrderExtras;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIDChanging(decimal value);
    partial void OnOrderDetailIDChanged();
    partial void OnOrderIDChanging(System.Nullable<decimal> value);
    partial void OnOrderIDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnTrack_TCChanging(string value);
    partial void OnTrack_TCChanged();
    partial void OnGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnGroup_IDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnPercentDiscountChanging(System.Nullable<byte> value);
    partial void OnPercentDiscountChanged();
    partial void OnDiscountTypeChanging(System.Nullable<int> value);
    partial void OnDiscountTypeChanged();
    partial void OnMoneyDiscountChanging(System.Nullable<decimal> value);
    partial void OnMoneyDiscountChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUserCommentChanging(string value);
    partial void OnUserCommentChanged();
    partial void OnStudentInGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnCity_TCChanging(string value);
    partial void OnCity_TCChanged();
    partial void OnOrgStudentsChanging(string value);
    partial void OnOrgStudentsChanged();
    partial void OnReasonForLearningChanging(string value);
    partial void OnReasonForLearningChanged();
    partial void OnUserTestIdChanging(System.Nullable<int> value);
    partial void OnUserTestIdChanged();
    partial void OnJsonParamsChanging(string value);
    partial void OnJsonParamsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSeatNumberChanging(System.Nullable<short> value);
    partial void OnSeatNumberChanged();
    partial void OnSocialUrlChanging(string value);
    partial void OnSocialUrlChanged();
    partial void OnSecondCourse_TCChanging(string value);
    partial void OnSecondCourse_TCChanged();
    #endregion
		
		public OrderDetail()
		{
			this._OrderExtras = new EntitySet<OrderExtras>(new Action<OrderExtras>(this.attach_OrderExtras), new Action<OrderExtras>(this.detach_OrderExtras));
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal OrderDetailID
		{
			get
			{
				return this._OrderDetailID;
			}
			set
			{
				if ((this._OrderDetailID != value))
				{
					this.OnOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailID = value;
					this.SendPropertyChanged("OrderDetailID");
					this.OnOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track_TC", DbType="VarChar(50)")]
		public string Track_TC
		{
			get
			{
				return this._Track_TC;
			}
			set
			{
				if ((this._Track_TC != value))
				{
					this.OnTrack_TCChanging(value);
					this.SendPropertyChanging();
					this._Track_TC = value;
					this.SendPropertyChanged("Track_TC");
					this.OnTrack_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(50)")]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentDiscount", DbType="TinyInt")]
		public System.Nullable<byte> PercentDiscount
		{
			get
			{
				return this._PercentDiscount;
			}
			set
			{
				if ((this._PercentDiscount != value))
				{
					this.OnPercentDiscountChanging(value);
					this.SendPropertyChanging();
					this._PercentDiscount = value;
					this.SendPropertyChanged("PercentDiscount");
					this.OnPercentDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="Int")]
		public System.Nullable<int> DiscountType
		{
			get
			{
				return this._DiscountType;
			}
			set
			{
				if ((this._DiscountType != value))
				{
					this.OnDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._DiscountType = value;
					this.SendPropertyChanged("DiscountType");
					this.OnDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyDiscount", DbType="Money")]
		public System.Nullable<decimal> MoneyDiscount
		{
			get
			{
				return this._MoneyDiscount;
			}
			set
			{
				if ((this._MoneyDiscount != value))
				{
					this.OnMoneyDiscountChanging(value);
					this.SendPropertyChanging();
					this._MoneyDiscount = value;
					this.SendPropertyChanged("MoneyDiscount");
					this.OnMoneyDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserComment", DbType="VarChar(1000)")]
		public string UserComment
		{
			get
			{
				return this._UserComment;
			}
			set
			{
				if ((this._UserComment != value))
				{
					this.OnUserCommentChanging(value);
					this.SendPropertyChanging();
					this._UserComment = value;
					this.SendPropertyChanged("UserComment");
					this.OnUserCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_TC", DbType="VarChar(10)")]
		public string City_TC
		{
			get
			{
				return this._City_TC;
			}
			set
			{
				if ((this._City_TC != value))
				{
					this.OnCity_TCChanging(value);
					this.SendPropertyChanging();
					this._City_TC = value;
					this.SendPropertyChanged("City_TC");
					this.OnCity_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgStudents", UpdateCheck=UpdateCheck.Never)]
		public string OrgStudents
		{
			get
			{
				return this._OrgStudents;
			}
			set
			{
				if ((this._OrgStudents != value))
				{
					this.OnOrgStudentsChanging(value);
					this.SendPropertyChanging();
					this._OrgStudents = value;
					this.SendPropertyChanged("OrgStudents");
					this.OnOrgStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonForLearning")]
		public string ReasonForLearning
		{
			get
			{
				return this._ReasonForLearning;
			}
			set
			{
				if ((this._ReasonForLearning != value))
				{
					this.OnReasonForLearningChanging(value);
					this.SendPropertyChanging();
					this._ReasonForLearning = value;
					this.SendPropertyChanged("ReasonForLearning");
					this.OnReasonForLearningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestId")]
		public System.Nullable<int> UserTestId
		{
			get
			{
				return this._TestId;
			}
			set
			{
				if ((this._TestId != value))
				{
					this.OnUserTestIdChanging(value);
					this.SendPropertyChanging();
					this._TestId = value;
					this.SendPropertyChanged("UserTestId");
					this.OnUserTestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonParams")]
		public string JsonParams
		{
			get
			{
				return this._JsonParams;
			}
			set
			{
				if ((this._JsonParams != value))
				{
					this.OnJsonParamsChanging(value);
					this.SendPropertyChanging();
					this._JsonParams = value;
					this.SendPropertyChanged("JsonParams");
					this.OnJsonParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatNumber")]
		public System.Nullable<short> SeatNumber
		{
			get
			{
				return this._SeatNumber;
			}
			set
			{
				if ((this._SeatNumber != value))
				{
					this.OnSeatNumberChanging(value);
					this.SendPropertyChanging();
					this._SeatNumber = value;
					this.SendPropertyChanged("SeatNumber");
					this.OnSeatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialUrl")]
		public string SocialUrl
		{
			get
			{
				return this._SocialUrl;
			}
			set
			{
				if ((this._SocialUrl != value))
				{
					this.OnSocialUrlChanging(value);
					this.SendPropertyChanging();
					this._SocialUrl = value;
					this.SendPropertyChanged("SocialUrl");
					this.OnSocialUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondCourse_TC")]
		public string SecondCourse_TC
		{
			get
			{
				return this._SecondCourse_TC;
			}
			set
			{
				if ((this._SecondCourse_TC != value))
				{
					this.OnSecondCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._SecondCourse_TC = value;
					this.SendPropertyChanged("SecondCourse_TC");
					this.OnSecondCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDetail_OrderExtras", Storage="_OrderExtras", ThisKey="OrderDetailID", OtherKey="OrderDetailID")]
		public EntitySet<OrderExtras> OrderExtras
		{
			get
			{
				return this._OrderExtras;
			}
			set
			{
				this._OrderExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderExtras(OrderExtras entity)
		{
			this.SendPropertyChanging();
			entity.OrderDetail = this;
		}
		
		private void detach_OrderExtras(OrderExtras entity)
		{
			this.SendPropertyChanging();
			entity.OrderDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrderExams")]
	public partial class OrderExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _OrderExamID;
		
		private decimal _OrderID;
		
		private decimal _Exam_ID;
		
		private decimal _Price;
		
		private System.Nullable<decimal> _StudentInGroup_ID;
		
		private System.Nullable<decimal> _Group_ID;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderExamIDChanging(decimal value);
    partial void OnOrderExamIDChanged();
    partial void OnOrderIDChanging(decimal value);
    partial void OnOrderIDChanged();
    partial void OnExam_IDChanging(decimal value);
    partial void OnExam_IDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStudentInGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnGroup_IDChanged();
    #endregion
		
		public OrderExam()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderExamID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal OrderExamID
		{
			get
			{
				return this._OrderExamID;
			}
			set
			{
				if ((this._OrderExamID != value))
				{
					this.OnOrderExamIDChanging(value);
					this.SendPropertyChanging();
					this._OrderExamID = value;
					this.SendPropertyChanged("OrderExamID");
					this.OnOrderExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Decimal(18,0) NOT NULL")]
		public decimal OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderExam", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderExams.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderExams.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(decimal);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserMessages")]
	public partial class UserMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserMessageID;
		
		private string _Text;
		
		private int _CreatorUserID;
		
		private System.Nullable<int> _ReceiverUserID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<long> _ParentMessageID;
		
		private System.Nullable<int> _MessageSectionID;
		
		private System.DateTime _UpdateDate;
		
		private bool _IsActive;
		
		private System.DateTime _PublishDate;
		
		private string _Title;
		
		private System.Nullable<decimal> _GroupID;
		
		private bool _IsAnswered;
		
		private EntitySet<UserMessage> _Children;
		
		private EntityRef<UserMessage> _Parent;
		
		private EntityRef<MessageSection> _MessageSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserMessageIDChanging(long value);
    partial void OnUserMessageIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCreatorUserIDChanging(int value);
    partial void OnCreatorUserIDChanged();
    partial void OnReceiverUserIDChanging(System.Nullable<int> value);
    partial void OnReceiverUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnParentMessageIDChanging(System.Nullable<long> value);
    partial void OnParentMessageIDChanged();
    partial void OnMessageSectionIDChanging(System.Nullable<int> value);
    partial void OnMessageSectionIDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGroupIDChanging(System.Nullable<decimal> value);
    partial void OnGroupIDChanged();
    partial void OnIsAnsweredChanging(bool value);
    partial void OnIsAnsweredChanged();
    #endregion
		
		public UserMessage()
		{
			this._Children = new EntitySet<UserMessage>(new Action<UserMessage>(this.attach_Children), new Action<UserMessage>(this.detach_Children));
			this._Parent = default(EntityRef<UserMessage>);
			this._MessageSection = default(EntityRef<MessageSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMessageID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UserMessageID
		{
			get
			{
				return this._UserMessageID;
			}
			set
			{
				if ((this._UserMessageID != value))
				{
					this.OnUserMessageIDChanging(value);
					this.SendPropertyChanging();
					this._UserMessageID = value;
					this.SendPropertyChanged("UserMessageID");
					this.OnUserMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int NOT NULL")]
		public int CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverUserID", DbType="Int")]
		public System.Nullable<int> ReceiverUserID
		{
			get
			{
				return this._ReceiverUserID;
			}
			set
			{
				if ((this._ReceiverUserID != value))
				{
					this.OnReceiverUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiverUserID = value;
					this.SendPropertyChanged("ReceiverUserID");
					this.OnReceiverUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMessageID", DbType="BigInt")]
		public System.Nullable<long> ParentMessageID
		{
			get
			{
				return this._ParentMessageID;
			}
			set
			{
				if ((this._ParentMessageID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMessageIDChanging(value);
					this.SendPropertyChanging();
					this._ParentMessageID = value;
					this.SendPropertyChanged("ParentMessageID");
					this.OnParentMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSectionID", DbType="Int")]
		public System.Nullable<int> MessageSectionID
		{
			get
			{
				return this._MessageSectionID;
			}
			set
			{
				if ((this._MessageSectionID != value))
				{
					if (this._MessageSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageSectionIDChanging(value);
					this.SendPropertyChanging();
					this._MessageSectionID = value;
					this.SendPropertyChanged("MessageSectionID");
					this.OnMessageSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnswered")]
		public bool IsAnswered
		{
			get
			{
				return this._IsAnswered;
			}
			set
			{
				if ((this._IsAnswered != value))
				{
					this.OnIsAnsweredChanging(value);
					this.SendPropertyChanging();
					this._IsAnswered = value;
					this.SendPropertyChanged("IsAnswered");
					this.OnIsAnsweredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMessage_UserMessage", Storage="_Children", ThisKey="UserMessageID", OtherKey="ParentMessageID")]
		public EntitySet<UserMessage> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMessage_UserMessage", Storage="_Parent", ThisKey="ParentMessageID", OtherKey="UserMessageID", IsForeignKey=true)]
		public UserMessage Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				UserMessage previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentMessageID = value.UserMessageID;
					}
					else
					{
						this._ParentMessageID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageSection_UserMessage", Storage="_MessageSection", ThisKey="MessageSectionID", OtherKey="MessageSectionID", IsForeignKey=true)]
		public MessageSection MessageSection
		{
			get
			{
				return this._MessageSection.Entity;
			}
			set
			{
				MessageSection previousValue = this._MessageSection.Entity;
				if (((previousValue != value) 
							|| (this._MessageSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageSection.Entity = null;
						previousValue.UserMessages.Remove(this);
					}
					this._MessageSection.Entity = value;
					if ((value != null))
					{
						value.UserMessages.Add(this);
						this._MessageSectionID = value.MessageSectionID;
					}
					else
					{
						this._MessageSectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MessageSection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Children(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.MessageSections")]
	public partial class MessageSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageSectionID;
		
		private System.Nullable<int> _ParentSectionID;
		
		private string _Name;
		
		private string _SysName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private EntitySet<UserMessage> _UserMessages;
		
		private EntitySet<MessageSection> _Children;
		
		private EntityRef<MessageSection> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageSectionIDChanging(int value);
    partial void OnMessageSectionIDChanged();
    partial void OnParentSectionIDChanging(System.Nullable<int> value);
    partial void OnParentSectionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MessageSection()
		{
			this._UserMessages = new EntitySet<UserMessage>(new Action<UserMessage>(this.attach_UserMessages), new Action<UserMessage>(this.detach_UserMessages));
			this._Children = new EntitySet<MessageSection>(new Action<MessageSection>(this.attach_Children), new Action<MessageSection>(this.detach_Children));
			this._Parent = default(EntityRef<MessageSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageSectionID
		{
			get
			{
				return this._MessageSectionID;
			}
			set
			{
				if ((this._MessageSectionID != value))
				{
					this.OnMessageSectionIDChanging(value);
					this.SendPropertyChanging();
					this._MessageSectionID = value;
					this.SendPropertyChanged("MessageSectionID");
					this.OnMessageSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSectionID", DbType="Int")]
		public System.Nullable<int> ParentSectionID
		{
			get
			{
				return this._ParentSectionID;
			}
			set
			{
				if ((this._ParentSectionID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentSectionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentSectionID = value;
					this.SendPropertyChanged("ParentSectionID");
					this.OnParentSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(10)")]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageSection_UserMessage", Storage="_UserMessages", ThisKey="MessageSectionID", OtherKey="MessageSectionID")]
		public EntitySet<UserMessage> UserMessages
		{
			get
			{
				return this._UserMessages;
			}
			set
			{
				this._UserMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageSection_MessageSection", Storage="_Children", ThisKey="MessageSectionID", OtherKey="ParentSectionID")]
		public EntitySet<MessageSection> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageSection_MessageSection", Storage="_Parent", ThisKey="ParentSectionID", OtherKey="MessageSectionID", IsForeignKey=true)]
		public MessageSection Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				MessageSection previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentSectionID = value.MessageSectionID;
					}
					else
					{
						this._ParentSectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserMessages(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.MessageSection = this;
		}
		
		private void detach_UserMessages(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.MessageSection = null;
		}
		
		private void attach_Children(MessageSection entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(MessageSection entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tSiteObjectRelations")]
	public partial class SiteObjectRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SiteObjectRelation_ID;
		
		private object _Object_ID;
		
		private string _ObjectType;
		
		private object _RelationObject_ID;
		
		private string _RelationObjectType;
		
		private short _RelationOrder;
		
		private EntityRef<SiteObject> _Object;
		
		private EntityRef<SiteObject> _RelationObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteObjectRelation_IDChanging(long value);
    partial void OnSiteObjectRelation_IDChanged();
    partial void OnObject_IDChanging(object value);
    partial void OnObject_IDChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnRelationObject_IDChanging(object value);
    partial void OnRelationObject_IDChanged();
    partial void OnRelationObjectTypeChanging(string value);
    partial void OnRelationObjectTypeChanged();
    partial void OnRelationOrderChanging(short value);
    partial void OnRelationOrderChanged();
    #endregion
		
		public SiteObjectRelation()
		{
			this._Object = default(EntityRef<SiteObject>);
			this._RelationObject = default(EntityRef<SiteObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteObjectRelation_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SiteObjectRelation_ID
		{
			get
			{
				return this._SiteObjectRelation_ID;
			}
			set
			{
				if ((this._SiteObjectRelation_ID != value))
				{
					this.OnSiteObjectRelation_IDChanging(value);
					this.SendPropertyChanging();
					this._SiteObjectRelation_ID = value;
					this.SendPropertyChanged("SiteObjectRelation_ID");
					this.OnSiteObjectRelation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_ID", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationObject_ID", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object RelationObject_ID
		{
			get
			{
				return this._RelationObject_ID;
			}
			set
			{
				if ((this._RelationObject_ID != value))
				{
					if (this._RelationObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationObject_IDChanging(value);
					this.SendPropertyChanging();
					this._RelationObject_ID = value;
					this.SendPropertyChanged("RelationObject_ID");
					this.OnRelationObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationObjectType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RelationObjectType
		{
			get
			{
				return this._RelationObjectType;
			}
			set
			{
				if ((this._RelationObjectType != value))
				{
					if (this._RelationObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._RelationObjectType = value;
					this.SendPropertyChanged("RelationObjectType");
					this.OnRelationObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationOrder", UpdateCheck=UpdateCheck.Never)]
		public short RelationOrder
		{
			get
			{
				return this._RelationOrder;
			}
			set
			{
				if ((this._RelationOrder != value))
				{
					this.OnRelationOrderChanging(value);
					this.SendPropertyChanging();
					this._RelationOrder = value;
					this.SendPropertyChanged("RelationOrder");
					this.OnRelationOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteObject_SiteObjectRelation", Storage="_Object", ThisKey="ObjectType,Object_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public SiteObject Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				SiteObject previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.ObjectRelations.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.ObjectRelations.Add(this);
						this._ObjectType = value.Type;
						this._Object_ID = value.ID;
					}
					else
					{
						this._ObjectType = default(string);
						this._Object_ID = default(object);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteObject_SiteObjectRelation1", Storage="_RelationObject", ThisKey="RelationObjectType,RelationObject_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public SiteObject RelationObject
		{
			get
			{
				return this._RelationObject.Entity;
			}
			set
			{
				SiteObject previousValue = this._RelationObject.Entity;
				if (((previousValue != value) 
							|| (this._RelationObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RelationObject.Entity = null;
						previousValue.RelationObjectRelations.Remove(this);
					}
					this._RelationObject.Entity = value;
					if ((value != null))
					{
						value.RelationObjectRelations.Add(this);
						this._RelationObjectType = value.Type;
						this._RelationObject_ID = value.ID;
					}
					else
					{
						this._RelationObjectType = default(string);
						this._RelationObject_ID = default(object);
					}
					this.SendPropertyChanged("RelationObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.vSiteObjects")]
	public partial class SiteObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SiteObject_ID;
		
		private string _Type;
		
		private object _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsTag;
		
		private EntitySet<SiteObjectRelation> _ObjectRelations;
		
		private EntitySet<SiteObjectRelation> _RelationObjectRelations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteObject_IDChanging(string value);
    partial void OnSiteObject_IDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIDChanging(object value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsTagChanging(System.Nullable<bool> value);
    partial void OnIsTagChanged();
    #endregion
		
		public SiteObject()
		{
			this._ObjectRelations = new EntitySet<SiteObjectRelation>(new Action<SiteObjectRelation>(this.attach_ObjectRelations), new Action<SiteObjectRelation>(this.detach_ObjectRelations));
			this._RelationObjectRelations = new EntitySet<SiteObjectRelation>(new Action<SiteObjectRelation>(this.attach_RelationObjectRelations), new Action<SiteObjectRelation>(this.detach_RelationObjectRelations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteObject_ID", DbType="VarChar(100)", IsPrimaryKey=true)]
		public string SiteObject_ID
		{
			get
			{
				return this._SiteObject_ID;
			}
			set
			{
				if ((this._SiteObject_ID != value))
				{
					this.OnSiteObject_IDChanging(value);
					this.SendPropertyChanging();
					this._SiteObject_ID = value;
					this.SendPropertyChanged("SiteObject_ID");
					this.OnSiteObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTag", DbType="Bit")]
		public System.Nullable<bool> IsTag
		{
			get
			{
				return this._IsTag;
			}
			set
			{
				if ((this._IsTag != value))
				{
					this.OnIsTagChanging(value);
					this.SendPropertyChanging();
					this._IsTag = value;
					this.SendPropertyChanged("IsTag");
					this.OnIsTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteObject_SiteObjectRelation", Storage="_ObjectRelations", ThisKey="Type,ID", OtherKey="ObjectType,Object_ID")]
		public EntitySet<SiteObjectRelation> ObjectRelations
		{
			get
			{
				return this._ObjectRelations;
			}
			set
			{
				this._ObjectRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SiteObject_SiteObjectRelation1", Storage="_RelationObjectRelations", ThisKey="Type,ID", OtherKey="RelationObjectType,RelationObject_ID")]
		public EntitySet<SiteObjectRelation> RelationObjectRelations
		{
			get
			{
				return this._RelationObjectRelations;
			}
			set
			{
				this._RelationObjectRelations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectRelations(SiteObjectRelation entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_ObjectRelations(SiteObjectRelation entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_RelationObjectRelations(SiteObjectRelation entity)
		{
			this.SendPropertyChanging();
			entity.RelationObject = this;
		}
		
		private void detach_RelationObjectRelations(SiteObjectRelation entity)
		{
			this.SendPropertyChanging();
			entity.RelationObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.News")]
	public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private string _Title;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private System.DateTime _PublishDate;
		
		private bool _ForMainPage;
		
		private byte _Type;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _SmallImage;
		
		private byte _PriorityOrder;
		
		private string _CourseTCList;
		
		private System.Nullable<System.DateTime> _MainPageDateEnd;
		
		private bool _IsHot;
		
		private bool _ShowEverywhere;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnSmallImageChanging(string value);
    partial void OnSmallImageChanged();
    partial void OnPriorityOrderChanging(byte value);
    partial void OnPriorityOrderChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnMainPageDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnMainPageDateEndChanged();
    partial void OnIsHotChanging(bool value);
    partial void OnIsHotChanged();
    partial void OnShowEverywhereChanging(bool value);
    partial void OnShowEverywhereChanged();
    #endregion
		
		public News()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage", DbType="Bit NOT NULL")]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallImage")]
		public string SmallImage
		{
			get
			{
				return this._SmallImage;
			}
			set
			{
				if ((this._SmallImage != value))
				{
					this.OnSmallImageChanging(value);
					this.SendPropertyChanging();
					this._SmallImage = value;
					this.SendPropertyChanged("SmallImage");
					this.OnSmallImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityOrder", UpdateCheck=UpdateCheck.Never)]
		public byte PriorityOrder
		{
			get
			{
				return this._PriorityOrder;
			}
			set
			{
				if ((this._PriorityOrder != value))
				{
					this.OnPriorityOrderChanging(value);
					this.SendPropertyChanging();
					this._PriorityOrder = value;
					this.SendPropertyChanged("PriorityOrder");
					this.OnPriorityOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPageDateEnd")]
		public System.Nullable<System.DateTime> MainPageDateEnd
		{
			get
			{
				return this._MainPageDateEnd;
			}
			set
			{
				if ((this._MainPageDateEnd != value))
				{
					this.OnMainPageDateEndChanging(value);
					this.SendPropertyChanging();
					this._MainPageDateEnd = value;
					this.SendPropertyChanged("MainPageDateEnd");
					this.OnMainPageDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHot")]
		public bool IsHot
		{
			get
			{
				return this._IsHot;
			}
			set
			{
				if ((this._IsHot != value))
				{
					this.OnIsHotChanging(value);
					this.SendPropertyChanging();
					this._IsHot = value;
					this.SendPropertyChanged("IsHot");
					this.OnIsHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowEverywhere")]
		public bool ShowEverywhere
		{
			get
			{
				return this._ShowEverywhere;
			}
			set
			{
				if ((this._ShowEverywhere != value))
				{
					this.OnShowEverywhereChanging(value);
					this.SendPropertyChanging();
					this._ShowEverywhere = value;
					this.SendPropertyChanged("ShowEverywhere");
					this.OnShowEverywhereChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.SimplePageRelations")]
	public partial class SimplePageRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SimplePageRelationID;
		
		private int _ParentPageID;
		
		private System.Nullable<int> _SimplePageID;
		
		private bool _IsMainParent;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<SimplePage> _ParentPage;
		
		private EntityRef<SimplePage> _SimplePage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSimplePageRelationIDChanging(long value);
    partial void OnSimplePageRelationIDChanged();
    partial void OnParentPageIDChanging(int value);
    partial void OnParentPageIDChanged();
    partial void OnSimplePageIDChanging(System.Nullable<int> value);
    partial void OnSimplePageIDChanged();
    partial void OnIsMainParentChanging(bool value);
    partial void OnIsMainParentChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public SimplePageRelation()
		{
			this._ParentPage = default(EntityRef<SimplePage>);
			this._SimplePage = default(EntityRef<SimplePage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePageRelationID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SimplePageRelationID
		{
			get
			{
				return this._SimplePageRelationID;
			}
			set
			{
				if ((this._SimplePageRelationID != value))
				{
					this.OnSimplePageRelationIDChanging(value);
					this.SendPropertyChanging();
					this._SimplePageRelationID = value;
					this.SendPropertyChanged("SimplePageRelationID");
					this.OnSimplePageRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPageID", DbType="Int NOT NULL")]
		public int ParentPageID
		{
			get
			{
				return this._ParentPageID;
			}
			set
			{
				if ((this._ParentPageID != value))
				{
					if (this._ParentPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentPageIDChanging(value);
					this.SendPropertyChanging();
					this._ParentPageID = value;
					this.SendPropertyChanged("ParentPageID");
					this.OnParentPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePageID", DbType="Int")]
		public System.Nullable<int> SimplePageID
		{
			get
			{
				return this._SimplePageID;
			}
			set
			{
				if ((this._SimplePageID != value))
				{
					if (this._SimplePage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSimplePageIDChanging(value);
					this.SendPropertyChanging();
					this._SimplePageID = value;
					this.SendPropertyChanged("SimplePageID");
					this.OnSimplePageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainParent", DbType="Bit NOT NULL")]
		public bool IsMainParent
		{
			get
			{
				return this._IsMainParent;
			}
			set
			{
				if ((this._IsMainParent != value))
				{
					this.OnIsMainParentChanging(value);
					this.SendPropertyChanging();
					this._IsMainParent = value;
					this.SendPropertyChanged("IsMainParent");
					this.OnIsMainParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SimplePage_SimplePageRelation", Storage="_ParentPage", ThisKey="ParentPageID", OtherKey="SimplePageID", IsForeignKey=true)]
		public SimplePage ParentPage
		{
			get
			{
				return this._ParentPage.Entity;
			}
			set
			{
				SimplePage previousValue = this._ParentPage.Entity;
				if (((previousValue != value) 
							|| (this._ParentPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentPage.Entity = null;
						previousValue.ParentPageRelations.Remove(this);
					}
					this._ParentPage.Entity = value;
					if ((value != null))
					{
						value.ParentPageRelations.Add(this);
						this._ParentPageID = value.SimplePageID;
					}
					else
					{
						this._ParentPageID = default(int);
					}
					this.SendPropertyChanged("ParentPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SimplePage_SimplePageRelation1", Storage="_SimplePage", ThisKey="SimplePageID", OtherKey="SimplePageID", IsForeignKey=true)]
		public SimplePage SimplePage
		{
			get
			{
				return this._SimplePage.Entity;
			}
			set
			{
				SimplePage previousValue = this._SimplePage.Entity;
				if (((previousValue != value) 
							|| (this._SimplePage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SimplePage.Entity = null;
						previousValue.SimplePageRelations.Remove(this);
					}
					this._SimplePage.Entity = value;
					if ((value != null))
					{
						value.SimplePageRelations.Add(this);
						this._SimplePageID = value.SimplePageID;
					}
					else
					{
						this._SimplePageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SimplePage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.SimplePages")]
	public partial class SimplePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SimplePageID;
		
		private string _UrlName;
		
		private string _Title;
		
		private string _Description;
		
		private string _SysName;
		
		private int _WebSortOrder;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private bool _WithoutLink;
		
		private string _LinkText;
		
		private string _CourseTCList;
		
		private bool _UseTabs;
		
		private bool _UseAltTabs;
		
		private EntitySet<SimplePageRelation> _ParentPageRelations;
		
		private EntitySet<SimplePageRelation> _SimplePageRelations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSimplePageIDChanging(int value);
    partial void OnSimplePageIDChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnWithoutLinkChanging(bool value);
    partial void OnWithoutLinkChanged();
    partial void OnLinkTextChanging(string value);
    partial void OnLinkTextChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnUseTabsChanging(bool value);
    partial void OnUseTabsChanged();
    partial void OnUseAltTabsChanging(bool value);
    partial void OnUseAltTabsChanged();
    #endregion
		
		public SimplePage()
		{
			this._ParentPageRelations = new EntitySet<SimplePageRelation>(new Action<SimplePageRelation>(this.attach_ParentPageRelations), new Action<SimplePageRelation>(this.detach_ParentPageRelations));
			this._SimplePageRelations = new EntitySet<SimplePageRelation>(new Action<SimplePageRelation>(this.attach_SimplePageRelations), new Action<SimplePageRelation>(this.detach_SimplePageRelations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplePageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SimplePageID
		{
			get
			{
				return this._SimplePageID;
			}
			set
			{
				if ((this._SimplePageID != value))
				{
					this.OnSimplePageIDChanging(value);
					this.SendPropertyChanging();
					this._SimplePageID = value;
					this.SendPropertyChanged("SimplePageID");
					this.OnSimplePageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(Max)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(50)")]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithoutLink")]
		public bool WithoutLink
		{
			get
			{
				return this._WithoutLink;
			}
			set
			{
				if ((this._WithoutLink != value))
				{
					this.OnWithoutLinkChanging(value);
					this.SendPropertyChanging();
					this._WithoutLink = value;
					this.SendPropertyChanged("WithoutLink");
					this.OnWithoutLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkText")]
		public string LinkText
		{
			get
			{
				return this._LinkText;
			}
			set
			{
				if ((this._LinkText != value))
				{
					this.OnLinkTextChanging(value);
					this.SendPropertyChanging();
					this._LinkText = value;
					this.SendPropertyChanged("LinkText");
					this.OnLinkTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseTabs")]
		public bool UseTabs
		{
			get
			{
				return this._UseTabs;
			}
			set
			{
				if ((this._UseTabs != value))
				{
					this.OnUseTabsChanging(value);
					this.SendPropertyChanging();
					this._UseTabs = value;
					this.SendPropertyChanged("UseTabs");
					this.OnUseTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAltTabs")]
		public bool UseAltTabs
		{
			get
			{
				return this._UseAltTabs;
			}
			set
			{
				if ((this._UseAltTabs != value))
				{
					this.OnUseAltTabsChanging(value);
					this.SendPropertyChanging();
					this._UseAltTabs = value;
					this.SendPropertyChanged("UseAltTabs");
					this.OnUseAltTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SimplePage_SimplePageRelation", Storage="_ParentPageRelations", ThisKey="SimplePageID", OtherKey="ParentPageID")]
		public EntitySet<SimplePageRelation> ParentPageRelations
		{
			get
			{
				return this._ParentPageRelations;
			}
			set
			{
				this._ParentPageRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SimplePage_SimplePageRelation1", Storage="_SimplePageRelations", ThisKey="SimplePageID", OtherKey="SimplePageID")]
		public EntitySet<SimplePageRelation> SimplePageRelations
		{
			get
			{
				return this._SimplePageRelations;
			}
			set
			{
				this._SimplePageRelations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParentPageRelations(SimplePageRelation entity)
		{
			this.SendPropertyChanging();
			entity.ParentPage = this;
		}
		
		private void detach_ParentPageRelations(SimplePageRelation entity)
		{
			this.SendPropertyChanging();
			entity.ParentPage = null;
		}
		
		private void attach_SimplePageRelations(SimplePageRelation entity)
		{
			this.SendPropertyChanging();
			entity.SimplePage = this;
		}
		
		private void detach_SimplePageRelations(SimplePageRelation entity)
		{
			this.SendPropertyChanging();
			entity.SimplePage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Responses")]
	public partial class Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResponseID;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private string _Description;
		
		private string _Authors;
		
		private bool _IsActive;
		
		private byte _Rating;
		
		private System.Nullable<decimal> _RawQuestionnaireID;
		
		private string _Course_TC;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private bool _IsWebinar;
		
		private byte _Type;
		
		private string _Employee_TC;
		
		private int _Weight;
		
		private string _Complex_TC;
		
		private bool _IsIntraExtra;
		
		private bool _IsDiplom;
		
		private string _PhotoUrl;
		
		private string _SocialUrl;
		
		private EntityRef<RawQuestionnaire> _RawQuestionnaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponseIDChanging(int value);
    partial void OnResponseIDChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorsChanging(string value);
    partial void OnAuthorsChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRatingChanging(byte value);
    partial void OnRatingChanged();
    partial void OnRawQuestionnaireIDChanging(System.Nullable<decimal> value);
    partial void OnRawQuestionnaireIDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnIsWebinarChanging(bool value);
    partial void OnIsWebinarChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnComplex_TCChanging(string value);
    partial void OnComplex_TCChanged();
    partial void OnIsIntraExtraChanging(bool value);
    partial void OnIsIntraExtraChanged();
    partial void OnIsDiplomChanging(bool value);
    partial void OnIsDiplomChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnSocialUrlChanging(string value);
    partial void OnSocialUrlChanged();
    #endregion
		
		public Response()
		{
			this._RawQuestionnaire = default(EntityRef<RawQuestionnaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResponseID
		{
			get
			{
				return this._ResponseID;
			}
			set
			{
				if ((this._ResponseID != value))
				{
					this.OnResponseIDChanging(value);
					this.SendPropertyChanging();
					this._ResponseID = value;
					this.SendPropertyChanged("ResponseID");
					this.OnResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(7000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authors", DbType="VarChar(1000)")]
		public string Authors
		{
			get
			{
				return this._Authors;
			}
			set
			{
				if ((this._Authors != value))
				{
					this.OnAuthorsChanging(value);
					this.SendPropertyChanging();
					this._Authors = value;
					this.SendPropertyChanged("Authors");
					this.OnAuthorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="TinyInt NOT NULL")]
		public byte Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawQuestionnaireID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RawQuestionnaireID
		{
			get
			{
				return this._RawQuestionnaireID;
			}
			set
			{
				if ((this._RawQuestionnaireID != value))
				{
					if (this._RawQuestionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRawQuestionnaireIDChanging(value);
					this.SendPropertyChanging();
					this._RawQuestionnaireID = value;
					this.SendPropertyChanged("RawQuestionnaireID");
					this.OnRawQuestionnaireIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50)")]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebinar")]
		public bool IsWebinar
		{
			get
			{
				return this._IsWebinar;
			}
			set
			{
				if ((this._IsWebinar != value))
				{
					this.OnIsWebinarChanging(value);
					this.SendPropertyChanging();
					this._IsWebinar = value;
					this.SendPropertyChanged("IsWebinar");
					this.OnIsWebinarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_TC")]
		public string Complex_TC
		{
			get
			{
				return this._Complex_TC;
			}
			set
			{
				if ((this._Complex_TC != value))
				{
					this.OnComplex_TCChanging(value);
					this.SendPropertyChanging();
					this._Complex_TC = value;
					this.SendPropertyChanged("Complex_TC");
					this.OnComplex_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIntraExtra")]
		public bool IsIntraExtra
		{
			get
			{
				return this._IsIntraExtra;
			}
			set
			{
				if ((this._IsIntraExtra != value))
				{
					this.OnIsIntraExtraChanging(value);
					this.SendPropertyChanging();
					this._IsIntraExtra = value;
					this.SendPropertyChanged("IsIntraExtra");
					this.OnIsIntraExtraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiplom")]
		public bool IsDiplom
		{
			get
			{
				return this._IsDiplom;
			}
			set
			{
				if ((this._IsDiplom != value))
				{
					this.OnIsDiplomChanging(value);
					this.SendPropertyChanging();
					this._IsDiplom = value;
					this.SendPropertyChanged("IsDiplom");
					this.OnIsDiplomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialUrl")]
		public string SocialUrl
		{
			get
			{
				return this._SocialUrl;
			}
			set
			{
				if ((this._SocialUrl != value))
				{
					this.OnSocialUrlChanging(value);
					this.SendPropertyChanging();
					this._SocialUrl = value;
					this.SendPropertyChanged("SocialUrl");
					this.OnSocialUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawQuestionnaire_Response", Storage="_RawQuestionnaire", ThisKey="RawQuestionnaireID", OtherKey="RawQuestionnaireID", IsForeignKey=true)]
		public RawQuestionnaire RawQuestionnaire
		{
			get
			{
				return this._RawQuestionnaire.Entity;
			}
			set
			{
				RawQuestionnaire previousValue = this._RawQuestionnaire.Entity;
				if (((previousValue != value) 
							|| (this._RawQuestionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RawQuestionnaire.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._RawQuestionnaire.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._RawQuestionnaireID = value.RawQuestionnaireID;
					}
					else
					{
						this._RawQuestionnaireID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("RawQuestionnaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.RawQuestionnaires")]
	public partial class RawQuestionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _RawQuestionnaireID;
		
		private System.Nullable<decimal> _TeacherMark_ID;
		
		private System.Nullable<decimal> _Questionnaire_ID;
		
		private string _Notes;
		
		private bool _IsActive;
		
		private byte _Type;
		
		private EntitySet<Response> _Responses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRawQuestionnaireIDChanging(decimal value);
    partial void OnRawQuestionnaireIDChanged();
    partial void OnTeacherMark_IDChanging(System.Nullable<decimal> value);
    partial void OnTeacherMark_IDChanged();
    partial void OnQuestionnaire_IDChanging(System.Nullable<decimal> value);
    partial void OnQuestionnaire_IDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    #endregion
		
		public RawQuestionnaire()
		{
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawQuestionnaireID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal RawQuestionnaireID
		{
			get
			{
				return this._RawQuestionnaireID;
			}
			set
			{
				if ((this._RawQuestionnaireID != value))
				{
					this.OnRawQuestionnaireIDChanging(value);
					this.SendPropertyChanging();
					this._RawQuestionnaireID = value;
					this.SendPropertyChanged("RawQuestionnaireID");
					this.OnRawQuestionnaireIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherMark_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TeacherMark_ID
		{
			get
			{
				return this._TeacherMark_ID;
			}
			set
			{
				if ((this._TeacherMark_ID != value))
				{
					this.OnTeacherMark_IDChanging(value);
					this.SendPropertyChanging();
					this._TeacherMark_ID = value;
					this.SendPropertyChanged("TeacherMark_ID");
					this.OnTeacherMark_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Questionnaire_ID
		{
			get
			{
				return this._Questionnaire_ID;
			}
			set
			{
				if ((this._Questionnaire_ID != value))
				{
					this.OnQuestionnaire_IDChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_ID = value;
					this.SendPropertyChanged("Questionnaire_ID");
					this.OnQuestionnaire_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RawQuestionnaire_Response", Storage="_Responses", ThisKey="RawQuestionnaireID", OtherKey="RawQuestionnaireID")]
		public EntitySet<Response> Responses
		{
			get
			{
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.RawQuestionnaire = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.RawQuestionnaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.PollOptions")]
	public partial class PollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollOptionID;
		
		private string _Text;
		
		private int _PollID;
		
		private int _VoteCount;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private int _WebSortOrder;
		
		private string _Url;
		
		private string _Message;
		
		private EntityRef<Poll> _Poll;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollOptionIDChanging(int value);
    partial void OnPollOptionIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnVoteCountChanging(int value);
    partial void OnVoteCountChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public PollOption()
		{
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollOptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollOptionID
		{
			get
			{
				return this._PollOptionID;
			}
			set
			{
				if ((this._PollOptionID != value))
				{
					this.OnPollOptionIDChanging(value);
					this.SendPropertyChanging();
					this._PollOptionID = value;
					this.SendPropertyChanged("PollOptionID");
					this.OnPollOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteCount", DbType="Int NOT NULL")]
		public int VoteCount
		{
			get
			{
				return this._VoteCount;
			}
			set
			{
				if ((this._VoteCount != value))
				{
					this.OnVoteCountChanging(value);
					this.SendPropertyChanging();
					this._VoteCount = value;
					this.SendPropertyChanged("VoteCount");
					this.OnVoteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollOptions.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollOptions.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Polls")]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private bool _IsActive;
		
		private string _Name;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntitySet<PollOption> _PollOptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public Poll()
		{
			this._PollOptions = new EntitySet<PollOption>(new Action<PollOption>(this.attach_PollOptions), new Action<PollOption>(this.detach_PollOptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_PollOptions", ThisKey="PollID", OtherKey="PollID")]
		public EntitySet<PollOption> PollOptions
		{
			get
			{
				return this._PollOptions;
			}
			set
			{
				this._PollOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.SuccessStories")]
	public partial class SuccessStory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuccessStoryID;
		
		private string _Description;
		
		private System.Nullable<int> _Profession_ID;
		
		private System.Nullable<int> _UserID;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _Author;
		
		private string _Course_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuccessStoryIDChanging(int value);
    partial void OnSuccessStoryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProfession_IDChanging(System.Nullable<int> value);
    partial void OnProfession_IDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    #endregion
		
		public SuccessStory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessStoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SuccessStoryID
		{
			get
			{
				return this._SuccessStoryID;
			}
			set
			{
				if ((this._SuccessStoryID != value))
				{
					this.OnSuccessStoryIDChanging(value);
					this.SendPropertyChanging();
					this._SuccessStoryID = value;
					this.SendPropertyChanged("SuccessStoryID");
					this.OnSuccessStoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession_ID", DbType="Int")]
		public System.Nullable<int> Profession_ID
		{
			get
			{
				return this._Profession_ID;
			}
			set
			{
				if ((this._Profession_ID != value))
				{
					this.OnProfession_IDChanging(value);
					this.SendPropertyChanging();
					this._Profession_ID = value;
					this.SendPropertyChanged("Profession_ID");
					this.OnProfession_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC")]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.CourseFiles")]
	public partial class CourseFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CourseFileID;
		
		private string _Course_TC;
		
		private int _UserFileID;
		
		private EntityRef<UserFile> _UserFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseFileIDChanging(long value);
    partial void OnCourseFileIDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnUserFileIDChanging(int value);
    partial void OnUserFileIDChanged();
    #endregion
		
		public CourseFile()
		{
			this._UserFile = default(EntityRef<UserFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFileID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CourseFileID
		{
			get
			{
				return this._CourseFileID;
			}
			set
			{
				if ((this._CourseFileID != value))
				{
					this.OnCourseFileIDChanging(value);
					this.SendPropertyChanging();
					this._CourseFileID = value;
					this.SendPropertyChanged("CourseFileID");
					this.OnCourseFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFileID", DbType="Int NOT NULL")]
		public int UserFileID
		{
			get
			{
				return this._UserFileID;
			}
			set
			{
				if ((this._UserFileID != value))
				{
					if (this._UserFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserFileIDChanging(value);
					this.SendPropertyChanging();
					this._UserFileID = value;
					this.SendPropertyChanged("UserFileID");
					this.OnUserFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserFile_CourseFile", Storage="_UserFile", ThisKey="UserFileID", OtherKey="UserFileID", IsForeignKey=true)]
		public UserFile UserFile
		{
			get
			{
				return this._UserFile.Entity;
			}
			set
			{
				UserFile previousValue = this._UserFile.Entity;
				if (((previousValue != value) 
							|| (this._UserFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserFile.Entity = null;
						previousValue.CourseFiles.Remove(this);
					}
					this._UserFile.Entity = value;
					if ((value != null))
					{
						value.CourseFiles.Add(this);
						this._UserFileID = value.UserFileID;
					}
					else
					{
						this._UserFileID = default(int);
					}
					this.SendPropertyChanged("UserFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.GroupFiles")]
	public partial class GroupFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _GroupFileID;
		
		private decimal _GroupID;
		
		private int _UserFileID;
		
		private EntityRef<UserFile> _UserFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupFileIDChanging(long value);
    partial void OnGroupFileIDChanged();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnUserFileIDChanging(int value);
    partial void OnUserFileIDChanged();
    #endregion
		
		public GroupFile()
		{
			this._UserFile = default(EntityRef<UserFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupFileID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long GroupFileID
		{
			get
			{
				return this._GroupFileID;
			}
			set
			{
				if ((this._GroupFileID != value))
				{
					this.OnGroupFileIDChanging(value);
					this.SendPropertyChanging();
					this._GroupFileID = value;
					this.SendPropertyChanged("GroupFileID");
					this.OnGroupFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Group_ID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFileID", DbType="Int NOT NULL")]
		public int UserFileID
		{
			get
			{
				return this._UserFileID;
			}
			set
			{
				if ((this._UserFileID != value))
				{
					if (this._UserFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserFileIDChanging(value);
					this.SendPropertyChanging();
					this._UserFileID = value;
					this.SendPropertyChanged("UserFileID");
					this.OnUserFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserFile_GroupFile", Storage="_UserFile", ThisKey="UserFileID", OtherKey="UserFileID", IsForeignKey=true)]
		public UserFile UserFile
		{
			get
			{
				return this._UserFile.Entity;
			}
			set
			{
				UserFile previousValue = this._UserFile.Entity;
				if (((previousValue != value) 
							|| (this._UserFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserFile.Entity = null;
						previousValue.GroupFiles.Remove(this);
					}
					this._UserFile.Entity = value;
					if ((value != null))
					{
						value.GroupFiles.Add(this);
						this._UserFileID = value.UserFileID;
					}
					else
					{
						this._UserFileID = default(int);
					}
					this.SendPropertyChanged("UserFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserFiles")]
	public partial class UserFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserFileID;
		
		private string _Name;
		
		private string _Description;
		
		private string _SysFileName;
		
		private int _UserID;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<CourseFile> _CourseFiles;
		
		private EntitySet<GroupFile> _GroupFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserFileIDChanging(int value);
    partial void OnUserFileIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSysFileNameChanging(string value);
    partial void OnSysFileNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public UserFile()
		{
			this._CourseFiles = new EntitySet<CourseFile>(new Action<CourseFile>(this.attach_CourseFiles), new Action<CourseFile>(this.detach_CourseFiles));
			this._GroupFiles = new EntitySet<GroupFile>(new Action<GroupFile>(this.attach_GroupFiles), new Action<GroupFile>(this.detach_GroupFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserFileID
		{
			get
			{
				return this._UserFileID;
			}
			set
			{
				if ((this._UserFileID != value))
				{
					this.OnUserFileIDChanging(value);
					this.SendPropertyChanging();
					this._UserFileID = value;
					this.SendPropertyChanged("UserFileID");
					this.OnUserFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysFileName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SysFileName
		{
			get
			{
				return this._SysFileName;
			}
			set
			{
				if ((this._SysFileName != value))
				{
					this.OnSysFileNameChanging(value);
					this.SendPropertyChanging();
					this._SysFileName = value;
					this.SendPropertyChanged("SysFileName");
					this.OnSysFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserFile_CourseFile", Storage="_CourseFiles", ThisKey="UserFileID", OtherKey="UserFileID")]
		public EntitySet<CourseFile> CourseFiles
		{
			get
			{
				return this._CourseFiles;
			}
			set
			{
				this._CourseFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserFile_GroupFile", Storage="_GroupFiles", ThisKey="UserFileID", OtherKey="UserFileID")]
		public EntitySet<GroupFile> GroupFiles
		{
			get
			{
				return this._GroupFiles;
			}
			set
			{
				this._GroupFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseFiles(CourseFile entity)
		{
			this.SendPropertyChanging();
			entity.UserFile = this;
		}
		
		private void detach_CourseFiles(CourseFile entity)
		{
			this.SendPropertyChanging();
			entity.UserFile = null;
		}
		
		private void attach_GroupFiles(GroupFile entity)
		{
			this.SendPropertyChanging();
			entity.UserFile = this;
		}
		
		private void detach_GroupFiles(GroupFile entity)
		{
			this.SendPropertyChanging();
			entity.UserFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Vacancies")]
	public partial class Vacancy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VacancyID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _PublishDate;
		
		private System.DateTime _CreateDate;
		
		private bool _IsActive;
		
		private bool _IsHot;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private byte _Type;
		
		private bool _IsPartner;
		
		private string _CourseTCList;
		
		private string _Logo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVacancyIDChanging(int value);
    partial void OnVacancyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsHotChanging(bool value);
    partial void OnIsHotChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnIsPartnerChanging(bool value);
    partial void OnIsPartnerChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public Vacancy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacancyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VacancyID
		{
			get
			{
				return this._VacancyID;
			}
			set
			{
				if ((this._VacancyID != value))
				{
					this.OnVacancyIDChanging(value);
					this.SendPropertyChanging();
					this._VacancyID = value;
					this.SendPropertyChanged("VacancyID");
					this.OnVacancyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHot", DbType="Bit NOT NULL")]
		public bool IsHot
		{
			get
			{
				return this._IsHot;
			}
			set
			{
				if ((this._IsHot != value))
				{
					this.OnIsHotChanging(value);
					this.SendPropertyChanging();
					this._IsHot = value;
					this.SendPropertyChanged("IsHot");
					this.OnIsHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPartner")]
		public bool IsPartner
		{
			get
			{
				return this._IsPartner;
			}
			set
			{
				if ((this._IsPartner != value))
				{
					this.OnIsPartnerChanging(value);
					this.SendPropertyChanging();
					this._IsPartner = value;
					this.SendPropertyChanged("IsPartner");
					this.OnIsPartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Competitions")]
	public partial class Competition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitionID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private string _Congratulation;
		
		private System.Nullable<byte> _Discount;
		
		private string _Course_TC;
		
		private System.Nullable<int> _WinnerID;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private System.Nullable<System.DateTime> _OpenDate;
		
		private string _Result;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _WinnerName;
		
		private string _UrlName;
		
		private bool _ToClose;
		
		private string _CourseTCList;
		
		private int _WebSortOrder;
		
		private EntitySet<UserCompetition> _UserCompetitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitionIDChanging(int value);
    partial void OnCompetitionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCongratulationChanging(string value);
    partial void OnCongratulationChanged();
    partial void OnDiscountChanging(System.Nullable<byte> value);
    partial void OnDiscountChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnWinnerIDChanging(System.Nullable<int> value);
    partial void OnWinnerIDChanged();
    partial void OnCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateChanged();
    partial void OnOpenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenDateChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnWinnerNameChanging(string value);
    partial void OnWinnerNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnToCloseChanging(bool value);
    partial void OnToCloseChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    #endregion
		
		public Competition()
		{
			this._UserCompetitions = new EntitySet<UserCompetition>(new Action<UserCompetition>(this.attach_UserCompetitions), new Action<UserCompetition>(this.detach_UserCompetitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompetitionID
		{
			get
			{
				return this._CompetitionID;
			}
			set
			{
				if ((this._CompetitionID != value))
				{
					this.OnCompetitionIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitionID = value;
					this.SendPropertyChanged("CompetitionID");
					this.OnCompetitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Congratulation", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Congratulation
		{
			get
			{
				return this._Congratulation;
			}
			set
			{
				if ((this._Congratulation != value))
				{
					this.OnCongratulationChanging(value);
					this.SendPropertyChanging();
					this._Congratulation = value;
					this.SendPropertyChanged("Congratulation");
					this.OnCongratulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="TinyInt")]
		public System.Nullable<byte> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50)")]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerID", DbType="Int")]
		public System.Nullable<int> WinnerID
		{
			get
			{
				return this._WinnerID;
			}
			set
			{
				if ((this._WinnerID != value))
				{
					this.OnWinnerIDChanging(value);
					this.SendPropertyChanging();
					this._WinnerID = value;
					this.SendPropertyChanged("WinnerID");
					this.OnWinnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDate")]
		public System.Nullable<System.DateTime> OpenDate
		{
			get
			{
				return this._OpenDate;
			}
			set
			{
				if ((this._OpenDate != value))
				{
					this.OnOpenDateChanging(value);
					this.SendPropertyChanging();
					this._OpenDate = value;
					this.SendPropertyChanged("OpenDate");
					this.OnOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerName", DbType="VarChar(50)")]
		public string WinnerName
		{
			get
			{
				return this._WinnerName;
			}
			set
			{
				if ((this._WinnerName != value))
				{
					this.OnWinnerNameChanging(value);
					this.SendPropertyChanging();
					this._WinnerName = value;
					this.SendPropertyChanged("WinnerName");
					this.OnWinnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50)")]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToClose", DbType="Bit NOT NULL")]
		public bool ToClose
		{
			get
			{
				return this._ToClose;
			}
			set
			{
				if ((this._ToClose != value))
				{
					this.OnToCloseChanging(value);
					this.SendPropertyChanging();
					this._ToClose = value;
					this.SendPropertyChanged("ToClose");
					this.OnToCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competition_UserCompetition", Storage="_UserCompetitions", ThisKey="CompetitionID", OtherKey="CompetitionID")]
		public EntitySet<UserCompetition> UserCompetitions
		{
			get
			{
				return this._UserCompetitions;
			}
			set
			{
				this._UserCompetitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserCompetitions(UserCompetition entity)
		{
			this.SendPropertyChanging();
			entity.Competition = this;
		}
		
		private void detach_UserCompetitions(UserCompetition entity)
		{
			this.SendPropertyChanging();
			entity.Competition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserCompetitions")]
	public partial class UserCompetition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserCompetitionID;
		
		private int _CompetitionID;
		
		private int _UserID;
		
		private EntityRef<Competition> _Competition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCompetitionIDChanging(int value);
    partial void OnUserCompetitionIDChanged();
    partial void OnCompetitionIDChanging(int value);
    partial void OnCompetitionIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public UserCompetition()
		{
			this._Competition = default(EntityRef<Competition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCompetitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserCompetitionID
		{
			get
			{
				return this._UserCompetitionID;
			}
			set
			{
				if ((this._UserCompetitionID != value))
				{
					this.OnUserCompetitionIDChanging(value);
					this.SendPropertyChanging();
					this._UserCompetitionID = value;
					this.SendPropertyChanged("UserCompetitionID");
					this.OnUserCompetitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionID", DbType="Int NOT NULL")]
		public int CompetitionID
		{
			get
			{
				return this._CompetitionID;
			}
			set
			{
				if ((this._CompetitionID != value))
				{
					if (this._Competition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitionIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitionID = value;
					this.SendPropertyChanged("CompetitionID");
					this.OnCompetitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competition_UserCompetition", Storage="_Competition", ThisKey="CompetitionID", OtherKey="CompetitionID", IsForeignKey=true)]
		public Competition Competition
		{
			get
			{
				return this._Competition.Entity;
			}
			set
			{
				Competition previousValue = this._Competition.Entity;
				if (((previousValue != value) 
							|| (this._Competition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Competition.Entity = null;
						previousValue.UserCompetitions.Remove(this);
					}
					this._Competition.Entity = value;
					if ((value != null))
					{
						value.UserCompetitions.Add(this);
						this._CompetitionID = value.CompetitionID;
					}
					else
					{
						this._CompetitionID = default(int);
					}
					this.SendPropertyChanged("Competition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Organizations")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganizationID;
		
		private string _Name;
		
		private string _LogoImg;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntitySet<OrgResponse> _OrgResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIDChanging(int value);
    partial void OnOrganizationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLogoImgChanging(string value);
    partial void OnLogoImgChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public Organization()
		{
			this._OrgResponses = new EntitySet<OrgResponse>(new Action<OrgResponse>(this.attach_OrgResponses), new Action<OrgResponse>(this.detach_OrgResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImg", DbType="VarChar(50)")]
		public string LogoImg
		{
			get
			{
				return this._LogoImg;
			}
			set
			{
				if ((this._LogoImg != value))
				{
					this.OnLogoImgChanging(value);
					this.SendPropertyChanging();
					this._LogoImg = value;
					this.SendPropertyChanged("LogoImg");
					this.OnLogoImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgResponse", Storage="_OrgResponses", ThisKey="OrganizationID", OtherKey="OrganizationID")]
		public EntitySet<OrgResponse> OrgResponses
		{
			get
			{
				return this._OrgResponses;
			}
			set
			{
				this._OrgResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrgResponses(OrgResponse entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrgResponses(OrgResponse entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrgResponses")]
	public partial class OrgResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgResponseID;
		
		private string _Description;
		
		private string _OriginalImg;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private string _Authors;
		
		private int _OrganizationID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _Employee_TC;
		
		private string _Course_TC;
		
		private string _ShortDescription;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgResponseIDChanging(int value);
    partial void OnOrgResponseIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOriginalImgChanging(string value);
    partial void OnOriginalImgChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnAuthorsChanging(string value);
    partial void OnAuthorsChanged();
    partial void OnOrganizationIDChanging(int value);
    partial void OnOrganizationIDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    #endregion
		
		public OrgResponse()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgResponseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgResponseID
		{
			get
			{
				return this._OrgResponseID;
			}
			set
			{
				if ((this._OrgResponseID != value))
				{
					this.OnOrgResponseIDChanging(value);
					this.SendPropertyChanging();
					this._OrgResponseID = value;
					this.SendPropertyChanged("OrgResponseID");
					this.OnOrgResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(7000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalImg", DbType="VarChar(50)")]
		public string OriginalImg
		{
			get
			{
				return this._OriginalImg;
			}
			set
			{
				if ((this._OriginalImg != value))
				{
					this.OnOriginalImgChanging(value);
					this.SendPropertyChanging();
					this._OriginalImg = value;
					this.SendPropertyChanged("OriginalImg");
					this.OnOriginalImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authors", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Authors
		{
			get
			{
				return this._Authors;
			}
			set
			{
				if ((this._Authors != value))
				{
					this.OnAuthorsChanging(value);
					this.SendPropertyChanging();
					this._Authors = value;
					this.SendPropertyChanged("Authors");
					this.OnAuthorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="Int NOT NULL")]
		public int OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC")]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgResponse", Storage="_Organization", ThisKey="OrganizationID", OtherKey="OrganizationID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrgResponses.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrgResponses.Add(this);
						this._OrganizationID = value.OrganizationID;
					}
					else
					{
						this._OrganizationID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrgProjects")]
	public partial class OrgProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgProjectID;
		
		private string _Description;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgProjectIDChanging(int value);
    partial void OnOrgProjectIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public OrgProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgProjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgProjectID
		{
			get
			{
				return this._OrgProjectID;
			}
			set
			{
				if ((this._OrgProjectID != value))
				{
					this.OnOrgProjectIDChanging(value);
					this.SendPropertyChanging();
					this._OrgProjectID = value;
					this.SendPropertyChanged("OrgProjectID");
					this.OnOrgProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserWorks")]
	public partial class UserWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserWorkID;
		
		private string _FullName;
		
		private string _Course_TC;
		
		private System.Nullable<int> _WorkSectionID;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private int _Section_ID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _SmallImage;
		
		private string _Trainer_TC;
		
		private EntityRef<UserWorkSection> _UserWorkSection;
		
		private EntityRef<Section> _Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserWorkIDChanging(int value);
    partial void OnUserWorkIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnWorkSectionIDChanging(System.Nullable<int> value);
    partial void OnWorkSectionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSection_IDChanging(int value);
    partial void OnSection_IDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnSmallImageChanging(string value);
    partial void OnSmallImageChanged();
    partial void OnTrainer_TCChanging(string value);
    partial void OnTrainer_TCChanged();
    #endregion
		
		public UserWork()
		{
			this._UserWorkSection = default(EntityRef<UserWorkSection>);
			this._Section = default(EntityRef<Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserWorkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserWorkID
		{
			get
			{
				return this._UserWorkID;
			}
			set
			{
				if ((this._UserWorkID != value))
				{
					this.OnUserWorkIDChanging(value);
					this.SendPropertyChanging();
					this._UserWorkID = value;
					this.SendPropertyChanged("UserWorkID");
					this.OnUserWorkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSectionID", DbType="Int")]
		public System.Nullable<int> WorkSectionID
		{
			get
			{
				return this._WorkSectionID;
			}
			set
			{
				if ((this._WorkSectionID != value))
				{
					if (this._UserWorkSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSectionIDChanging(value);
					this.SendPropertyChanging();
					this._WorkSectionID = value;
					this.SendPropertyChanged("WorkSectionID");
					this.OnWorkSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section_ID", DbType="Int NOT NULL")]
		public int Section_ID
		{
			get
			{
				return this._Section_ID;
			}
			set
			{
				if ((this._Section_ID != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSection_IDChanging(value);
					this.SendPropertyChanging();
					this._Section_ID = value;
					this.SendPropertyChanged("Section_ID");
					this.OnSection_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallImage", UpdateCheck=UpdateCheck.Never)]
		public string SmallImage
		{
			get
			{
				return this._SmallImage;
			}
			set
			{
				if ((this._SmallImage != value))
				{
					this.OnSmallImageChanging(value);
					this.SendPropertyChanging();
					this._SmallImage = value;
					this.SendPropertyChanged("SmallImage");
					this.OnSmallImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trainer_TC")]
		public string Trainer_TC
		{
			get
			{
				return this._Trainer_TC;
			}
			set
			{
				if ((this._Trainer_TC != value))
				{
					this.OnTrainer_TCChanging(value);
					this.SendPropertyChanging();
					this._Trainer_TC = value;
					this.SendPropertyChanged("Trainer_TC");
					this.OnTrainer_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserWorkSection_UserWork", Storage="_UserWorkSection", ThisKey="WorkSectionID", OtherKey="UserWorkSectionID", IsForeignKey=true)]
		public UserWorkSection UserWorkSection
		{
			get
			{
				return this._UserWorkSection.Entity;
			}
			set
			{
				UserWorkSection previousValue = this._UserWorkSection.Entity;
				if (((previousValue != value) 
							|| (this._UserWorkSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserWorkSection.Entity = null;
						previousValue.UserWorks.Remove(this);
					}
					this._UserWorkSection.Entity = value;
					if ((value != null))
					{
						value.UserWorks.Add(this);
						this._WorkSectionID = value.UserWorkSectionID;
					}
					else
					{
						this._WorkSectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserWorkSection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_UserWork", Storage="_Section", ThisKey="Section_ID", OtherKey="Section_ID", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.UserWorks.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.UserWorks.Add(this);
						this._Section_ID = value.Section_ID;
					}
					else
					{
						this._Section_ID = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserWorkSections")]
	public partial class UserWorkSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserWorkSectionID;
		
		private string _Name;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private EntitySet<UserWork> _UserWorks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserWorkSectionIDChanging(int value);
    partial void OnUserWorkSectionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public UserWorkSection()
		{
			this._UserWorks = new EntitySet<UserWork>(new Action<UserWork>(this.attach_UserWorks), new Action<UserWork>(this.detach_UserWorks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserWorkSectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserWorkSectionID
		{
			get
			{
				return this._UserWorkSectionID;
			}
			set
			{
				if ((this._UserWorkSectionID != value))
				{
					this.OnUserWorkSectionIDChanging(value);
					this.SendPropertyChanging();
					this._UserWorkSectionID = value;
					this.SendPropertyChanged("UserWorkSectionID");
					this.OnUserWorkSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserWorkSection_UserWork", Storage="_UserWorks", ThisKey="UserWorkSectionID", OtherKey="WorkSectionID")]
		public EntitySet<UserWork> UserWorks
		{
			get
			{
				return this._UserWorks;
			}
			set
			{
				this._UserWorks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserWorks(UserWork entity)
		{
			this.SendPropertyChanging();
			entity.UserWorkSection = this;
		}
		
		private void detach_UserWorks(UserWork entity)
		{
			this.SendPropertyChanging();
			entity.UserWorkSection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tProducts")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private int _WebSortOrder;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private bool _ForMainPage;
		
		private bool _IsNew;
		
		private bool _IsHit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    partial void OnIsNewChanging(bool value);
    partial void OnIsNewChanged();
    partial void OnIsHitChanging(bool value);
    partial void OnIsHitChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage")]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew")]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHit")]
		public bool IsHit
		{
			get
			{
				return this._IsHit;
			}
			set
			{
				if ((this._IsHit != value))
				{
					this.OnIsHitChanging(value);
					this.SendPropertyChanging();
					this._IsHit = value;
					this.SendPropertyChanged("IsHit");
					this.OnIsHitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tSections")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Section_ID;
		
		private string _UrlName;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private int _WebSortOrder;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private bool _RelationsAsMenu;
		
		private bool _ForMainPage;
		
		private string _DescriptionForTest;
		
		private bool _IsSeparator;
		
		private bool _IsMain;
		
		private string _NotAnnounce;
		
		private EntitySet<UserWork> _UserWorks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSection_IDChanging(int value);
    partial void OnSection_IDChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnRelationsAsMenuChanging(bool value);
    partial void OnRelationsAsMenuChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    partial void OnDescriptionForTestChanging(string value);
    partial void OnDescriptionForTestChanged();
    partial void OnIsSeparatorChanging(bool value);
    partial void OnIsSeparatorChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnNotAnnounceChanging(string value);
    partial void OnNotAnnounceChanged();
    #endregion
		
		public Section()
		{
			this._UserWorks = new EntitySet<UserWork>(new Action<UserWork>(this.attach_UserWorks), new Action<UserWork>(this.detach_UserWorks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Section_ID
		{
			get
			{
				return this._Section_ID;
			}
			set
			{
				if ((this._Section_ID != value))
				{
					this.OnSection_IDChanging(value);
					this.SendPropertyChanging();
					this._Section_ID = value;
					this.SendPropertyChanged("Section_ID");
					this.OnSection_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationsAsMenu", UpdateCheck=UpdateCheck.Never)]
		public bool RelationsAsMenu
		{
			get
			{
				return this._RelationsAsMenu;
			}
			set
			{
				if ((this._RelationsAsMenu != value))
				{
					this.OnRelationsAsMenuChanging(value);
					this.SendPropertyChanging();
					this._RelationsAsMenu = value;
					this.SendPropertyChanged("RelationsAsMenu");
					this.OnRelationsAsMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage", UpdateCheck=UpdateCheck.Never)]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionForTest", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionForTest
		{
			get
			{
				return this._DescriptionForTest;
			}
			set
			{
				if ((this._DescriptionForTest != value))
				{
					this.OnDescriptionForTestChanging(value);
					this.SendPropertyChanging();
					this._DescriptionForTest = value;
					this.SendPropertyChanged("DescriptionForTest");
					this.OnDescriptionForTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSeparator")]
		public bool IsSeparator
		{
			get
			{
				return this._IsSeparator;
			}
			set
			{
				if ((this._IsSeparator != value))
				{
					this.OnIsSeparatorChanging(value);
					this.SendPropertyChanging();
					this._IsSeparator = value;
					this.SendPropertyChanged("IsSeparator");
					this.OnIsSeparatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotAnnounce")]
		public string NotAnnounce
		{
			get
			{
				return this._NotAnnounce;
			}
			set
			{
				if ((this._NotAnnounce != value))
				{
					this.OnNotAnnounceChanging(value);
					this.SendPropertyChanging();
					this._NotAnnounce = value;
					this.SendPropertyChanged("NotAnnounce");
					this.OnNotAnnounceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_UserWork", Storage="_UserWorks", ThisKey="Section_ID", OtherKey="Section_ID")]
		public EntitySet<UserWork> UserWorks
		{
			get
			{
				return this._UserWorks;
			}
			set
			{
				this._UserWorks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserWorks(UserWork entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_UserWorks(UserWork entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tSiteTerms")]
	public partial class SiteTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteTerm_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private int _WebSortOrder;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private bool _ForMainPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteTerm_IDChanging(int value);
    partial void OnSiteTerm_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    #endregion
		
		public SiteTerm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteTerm_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteTerm_ID
		{
			get
			{
				return this._SiteTerm_ID;
			}
			set
			{
				if ((this._SiteTerm_ID != value))
				{
					this.OnSiteTerm_IDChanging(value);
					this.SendPropertyChanging();
					this._SiteTerm_ID = value;
					this.SendPropertyChanged("SiteTerm_ID");
					this.OnSiteTerm_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage")]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tBanners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Banner_ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ActualDate;
		
		private byte _Priority;
		
		private string _Image;
		
		private string _TargetUrl;
		
		private string _Pages;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private bool _IsSide;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBanner_IDChanging(int value);
    partial void OnBanner_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnActualDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualDateChanged();
    partial void OnPriorityChanging(byte value);
    partial void OnPriorityChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnTargetUrlChanging(string value);
    partial void OnTargetUrlChanged();
    partial void OnPagesChanging(string value);
    partial void OnPagesChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnIsSideChanging(bool value);
    partial void OnIsSideChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Banner_ID
		{
			get
			{
				return this._Banner_ID;
			}
			set
			{
				if ((this._Banner_ID != value))
				{
					this.OnBanner_IDChanging(value);
					this.SendPropertyChanging();
					this._Banner_ID = value;
					this.SendPropertyChanged("Banner_ID");
					this.OnBanner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActualDate
		{
			get
			{
				return this._ActualDate;
			}
			set
			{
				if ((this._ActualDate != value))
				{
					this.OnActualDateChanging(value);
					this.SendPropertyChanging();
					this._ActualDate = value;
					this.SendPropertyChanged("ActualDate");
					this.OnActualDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="TinyInt NOT NULL")]
		public byte Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetUrl", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TargetUrl
		{
			get
			{
				return this._TargetUrl;
			}
			set
			{
				if ((this._TargetUrl != value))
				{
					this.OnTargetUrlChanging(value);
					this.SendPropertyChanging();
					this._TargetUrl = value;
					this.SendPropertyChanged("TargetUrl");
					this.OnTargetUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				if ((this._Pages != value))
				{
					this.OnPagesChanging(value);
					this.SendPropertyChanging();
					this._Pages = value;
					this.SendPropertyChanged("Pages");
					this.OnPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSide")]
		public bool IsSide
		{
			get
			{
				return this._IsSide;
			}
			set
			{
				if ((this._IsSide != value))
				{
					this.OnIsSideChanging(value);
					this.SendPropertyChanging();
					this._IsSide = value;
					this.SendPropertyChanged("IsSide");
					this.OnIsSideChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.IpAddresses")]
	public partial class IpAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IpAddressID;
		
		private string _CityName;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIpAddressIDChanging(long value);
    partial void OnIpAddressIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public IpAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IpAddressID
		{
			get
			{
				return this._IpAddressID;
			}
			set
			{
				if ((this._IpAddressID != value))
				{
					this.OnIpAddressIDChanging(value);
					this.SendPropertyChanging();
					this._IpAddressID = value;
					this.SendPropertyChanged("IpAddressID");
					this.OnIpAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(100)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Advices")]
	public partial class Advice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdviceID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private bool _IsActive;
		
		private string _Employee_TC;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _ShortDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdviceIDChanging(int value);
    partial void OnAdviceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    #endregion
		
		public Advice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdviceID
		{
			get
			{
				return this._AdviceID;
			}
			set
			{
				if ((this._AdviceID != value))
				{
					this.OnAdviceIDChanging(value);
					this.SendPropertyChanging();
					this._AdviceID = value;
					this.SendPropertyChanged("AdviceID");
					this.OnAdviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Videos")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VideoID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreateDate;
		
		private bool _IsActive;
		
		private string _YouTubeID;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _Employee_TC;
		
		private int _CategoryId;
		
		private bool _IsNew;
		
		private string _CourseTCList;
		
		private string _ShortDescription;
		
		private System.Nullable<bool> _AvailableEveryOne;
		
		private EntityRef<VideoCategory> _VideoCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIDChanging(int value);
    partial void OnVideoIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnYouTubeIDChanging(string value);
    partial void OnYouTubeIDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnIsNewChanging(bool value);
    partial void OnIsNewChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnAvailableEveryOneChanging(System.Nullable<bool> value);
    partial void OnAvailableEveryOneChanged();
    #endregion
		
		public Video()
		{
			this._VideoCategory = default(EntityRef<VideoCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VideoID
		{
			get
			{
				return this._VideoID;
			}
			set
			{
				if ((this._VideoID != value))
				{
					this.OnVideoIDChanging(value);
					this.SendPropertyChanging();
					this._VideoID = value;
					this.SendPropertyChanged("VideoID");
					this.OnVideoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YouTubeID", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string YouTubeID
		{
			get
			{
				return this._YouTubeID;
			}
			set
			{
				if ((this._YouTubeID != value))
				{
					this.OnYouTubeIDChanging(value);
					this.SendPropertyChanging();
					this._YouTubeID = value;
					this.SendPropertyChanged("YouTubeID");
					this.OnYouTubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._VideoCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew")]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableEveryOne", DbType="bit")]
		public System.Nullable<bool> AvailableEveryOne
		{
			get
			{
				return this._AvailableEveryOne;
			}
			set
			{
				if ((this._AvailableEveryOne != value))
				{
					this.OnAvailableEveryOneChanging(value);
					this.SendPropertyChanging();
					this._AvailableEveryOne = value;
					this.SendPropertyChanged("AvailableEveryOne");
					this.OnAvailableEveryOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoCategory_Video", Storage="_VideoCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public VideoCategory VideoCategory
		{
			get
			{
				return this._VideoCategory.Entity;
			}
			set
			{
				VideoCategory previousValue = this._VideoCategory.Entity;
				if (((previousValue != value) 
							|| (this._VideoCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoCategory.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._VideoCategory.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("VideoCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Guides")]
	public partial class Guide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GuideID;
		
		private string _Name;
		
		private string _Image;
		
		private string _SmallImage;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private int _WebSortOrder;
		
		private string _Areas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuideIDChanging(int value);
    partial void OnGuideIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSmallImageChanging(string value);
    partial void OnSmallImageChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnAreasChanging(string value);
    partial void OnAreasChanged();
    #endregion
		
		public Guide()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuideID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GuideID
		{
			get
			{
				return this._GuideID;
			}
			set
			{
				if ((this._GuideID != value))
				{
					this.OnGuideIDChanging(value);
					this.SendPropertyChanging();
					this._GuideID = value;
					this.SendPropertyChanged("GuideID");
					this.OnGuideIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallImage", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SmallImage
		{
			get
			{
				return this._SmallImage;
			}
			set
			{
				if ((this._SmallImage != value))
				{
					this.OnSmallImageChanging(value);
					this.SendPropertyChanging();
					this._SmallImage = value;
					this.SendPropertyChanged("SmallImage");
					this.OnSmallImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Areas")]
		public string Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				if ((this._Areas != value))
				{
					this.OnAreasChanging(value);
					this.SendPropertyChanging();
					this._Areas = value;
					this.SendPropertyChanged("Areas");
					this.OnAreasChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.MailTemplates")]
	public partial class MailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailTemplateID;
		
		private string _Description;
		
		private string _SysName;
		
		private System.DateTime _CreateDate;
		
		private string _Name;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailTemplateIDChanging(int value);
    partial void OnMailTemplateIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public MailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailTemplateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MailTemplateID
		{
			get
			{
				return this._MailTemplateID;
			}
			set
			{
				if ((this._MailTemplateID != value))
				{
					this.OnMailTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._MailTemplateID = value;
					this.SendPropertyChanged("MailTemplateID");
					this.OnMailTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.PageMetas")]
	public partial class PageMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Url;
		
		private string _Keywords;
		
		private string _Description;
		
		private int _Id;
		
		private string _Title;
		
		private string _PageTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    #endregion
		
		public PageMeta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="VarChar(1000)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrgVacancies")]
	public partial class OrgVacancy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgVacancyID;
		
		private int _UserID;
		
		private string _Position;
		
		private System.Nullable<int> _AgeSince;
		
		private System.Nullable<int> _AgeTill;
		
		private string _Education;
		
		private string _Experience;
		
		private string _Sex;
		
		private string _Busy;
		
		private string _Schedule;
		
		private string _ForeignLanguages;
		
		private System.Nullable<int> _Profit;
		
		private string _Currency;
		
		private string _City;
		
		private string _Metro;
		
		private string _Description;
		
		private string _Sections;
		
		private string _Period;
		
		private string _Company;
		
		private string _OrgPosition;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Email;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private string _Resumes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgVacancyIDChanging(int value);
    partial void OnOrgVacancyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnAgeSinceChanging(System.Nullable<int> value);
    partial void OnAgeSinceChanged();
    partial void OnAgeTillChanging(System.Nullable<int> value);
    partial void OnAgeTillChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBusyChanging(string value);
    partial void OnBusyChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnForeignLanguagesChanging(string value);
    partial void OnForeignLanguagesChanged();
    partial void OnProfitChanging(System.Nullable<int> value);
    partial void OnProfitChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnMetroChanging(string value);
    partial void OnMetroChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSectionsChanging(string value);
    partial void OnSectionsChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnOrgPositionChanging(string value);
    partial void OnOrgPositionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnResumesChanging(string value);
    partial void OnResumesChanged();
    #endregion
		
		public OrgVacancy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgVacancyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgVacancyID
		{
			get
			{
				return this._OrgVacancyID;
			}
			set
			{
				if ((this._OrgVacancyID != value))
				{
					this.OnOrgVacancyIDChanging(value);
					this.SendPropertyChanging();
					this._OrgVacancyID = value;
					this.SendPropertyChanged("OrgVacancyID");
					this.OnOrgVacancyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(500)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeSince", DbType="Int")]
		public System.Nullable<int> AgeSince
		{
			get
			{
				return this._AgeSince;
			}
			set
			{
				if ((this._AgeSince != value))
				{
					this.OnAgeSinceChanging(value);
					this.SendPropertyChanging();
					this._AgeSince = value;
					this.SendPropertyChanged("AgeSince");
					this.OnAgeSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeTill", DbType="Int")]
		public System.Nullable<int> AgeTill
		{
			get
			{
				return this._AgeTill;
			}
			set
			{
				if ((this._AgeTill != value))
				{
					this.OnAgeTillChanging(value);
					this.SendPropertyChanging();
					this._AgeTill = value;
					this.SendPropertyChanged("AgeTill");
					this.OnAgeTillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="VarChar(50)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="VarChar(20)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(20)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Busy", DbType="VarChar(20)")]
		public string Busy
		{
			get
			{
				return this._Busy;
			}
			set
			{
				if ((this._Busy != value))
				{
					this.OnBusyChanging(value);
					this.SendPropertyChanging();
					this._Busy = value;
					this.SendPropertyChanged("Busy");
					this.OnBusyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="VarChar(20)")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignLanguages", DbType="VarChar(50)")]
		public string ForeignLanguages
		{
			get
			{
				return this._ForeignLanguages;
			}
			set
			{
				if ((this._ForeignLanguages != value))
				{
					this.OnForeignLanguagesChanging(value);
					this.SendPropertyChanging();
					this._ForeignLanguages = value;
					this.SendPropertyChanged("ForeignLanguages");
					this.OnForeignLanguagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Int")]
		public System.Nullable<int> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro", DbType="VarChar(50)")]
		public string Metro
		{
			get
			{
				return this._Metro;
			}
			set
			{
				if ((this._Metro != value))
				{
					this.OnMetroChanging(value);
					this.SendPropertyChanging();
					this._Metro = value;
					this.SendPropertyChanged("Metro");
					this.OnMetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(8000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sections", DbType="VarChar(500)")]
		public string Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				if ((this._Sections != value))
				{
					this.OnSectionsChanging(value);
					this.SendPropertyChanging();
					this._Sections = value;
					this.SendPropertyChanged("Sections");
					this.OnSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(20)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(500)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPosition", DbType="VarChar(150)")]
		public string OrgPosition
		{
			get
			{
				return this._OrgPosition;
			}
			set
			{
				if ((this._OrgPosition != value))
				{
					this.OnOrgPositionChanging(value);
					this.SendPropertyChanging();
					this._OrgPosition = value;
					this.SendPropertyChanged("OrgPosition");
					this.OnOrgPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resumes", DbType="VarChar(500)")]
		public string Resumes
		{
			get
			{
				return this._Resumes;
			}
			set
			{
				if ((this._Resumes != value))
				{
					this.OnResumesChanging(value);
					this.SendPropertyChanging();
					this._Resumes = value;
					this.SendPropertyChanged("Resumes");
					this.OnResumesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.Resumes")]
	public partial class Resume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResumeID;
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _SecondName;
		
		private string _LastName;
		
		private int _Age;
		
		private string _Sex;
		
		private string _Education;
		
		private string _Position;
		
		private string _Sections;
		
		private string _Experience;
		
		private System.Nullable<int> _Profit;
		
		private string _Currency;
		
		private string _City;
		
		private string _Metro;
		
		private string _Period;
		
		private string _Email;
		
		private string _Phone;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private string _Vacancies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResumeIDChanging(int value);
    partial void OnResumeIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnSectionsChanging(string value);
    partial void OnSectionsChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnProfitChanging(System.Nullable<int> value);
    partial void OnProfitChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnMetroChanging(string value);
    partial void OnMetroChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnVacanciesChanging(string value);
    partial void OnVacanciesChanged();
    #endregion
		
		public Resume()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResumeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResumeID
		{
			get
			{
				return this._ResumeID;
			}
			set
			{
				if ((this._ResumeID != value))
				{
					this.OnResumeIDChanging(value);
					this.SendPropertyChanging();
					this._ResumeID = value;
					this.SendPropertyChanged("ResumeID");
					this.OnResumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(50)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(20)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="VarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(500)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sections", DbType="VarChar(500)")]
		public string Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				if ((this._Sections != value))
				{
					this.OnSectionsChanging(value);
					this.SendPropertyChanging();
					this._Sections = value;
					this.SendPropertyChanged("Sections");
					this.OnSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="VarChar(20)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Int")]
		public System.Nullable<int> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro", DbType="VarChar(50)")]
		public string Metro
		{
			get
			{
				return this._Metro;
			}
			set
			{
				if ((this._Metro != value))
				{
					this.OnMetroChanging(value);
					this.SendPropertyChanging();
					this._Metro = value;
					this.SendPropertyChanged("Metro");
					this.OnMetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(20)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(150)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vacancies", DbType="VarChar(5000)")]
		public string Vacancies
		{
			get
			{
				return this._Vacancies;
			}
			set
			{
				if ((this._Vacancies != value))
				{
					this.OnVacanciesChanging(value);
					this.SendPropertyChanging();
					this._Vacancies = value;
					this.SendPropertyChanged("Vacancies");
					this.OnVacanciesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.tUsefulInformation")]
	public partial class UsefulInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsefulInformationID;
		
		private string _Name;
		
		private string _Description;
		
		private string _UrlName;
		
		private bool _IsActive;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsefulInformationIDChanging(int value);
    partial void OnUsefulInformationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public UsefulInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulInformationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsefulInformationID
		{
			get
			{
				return this._UsefulInformationID;
			}
			set
			{
				if ((this._UsefulInformationID != value))
				{
					this.OnUsefulInformationIDChanging(value);
					this.SendPropertyChanging();
					this._UsefulInformationID = value;
					this.SendPropertyChanged("UsefulInformationID");
					this.OnUsefulInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.OrderExtrases")]
	public partial class OrderExtras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderExtrasID;
		
		private decimal _OrderDetailID;
		
		private decimal _Price;
		
		private decimal _Extras_ID;
		
		private EntityRef<OrderDetail> _OrderDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderExtrasIDChanging(int value);
    partial void OnOrderExtrasIDChanged();
    partial void OnOrderDetailIDChanging(decimal value);
    partial void OnOrderDetailIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnExtras_IDChanging(decimal value);
    partial void OnExtras_IDChanged();
    #endregion
		
		public OrderExtras()
		{
			this._OrderDetail = default(EntityRef<OrderDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderExtrasID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderExtrasID
		{
			get
			{
				return this._OrderExtrasID;
			}
			set
			{
				if ((this._OrderExtrasID != value))
				{
					this.OnOrderExtrasIDChanging(value);
					this.SendPropertyChanging();
					this._OrderExtrasID = value;
					this.SendPropertyChanged("OrderExtrasID");
					this.OnOrderExtrasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", DbType="Decimal(18,0) NOT NULL")]
		public decimal OrderDetailID
		{
			get
			{
				return this._OrderDetailID;
			}
			set
			{
				if ((this._OrderDetailID != value))
				{
					if (this._OrderDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailID = value;
					this.SendPropertyChanged("OrderDetailID");
					this.OnOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extras_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Extras_ID
		{
			get
			{
				return this._Extras_ID;
			}
			set
			{
				if ((this._Extras_ID != value))
				{
					this.OnExtras_IDChanging(value);
					this.SendPropertyChanging();
					this._Extras_ID = value;
					this.SendPropertyChanged("Extras_ID");
					this.OnExtras_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDetail_OrderExtras", Storage="_OrderDetail", ThisKey="OrderDetailID", OtherKey="OrderDetailID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDetail OrderDetail
		{
			get
			{
				return this._OrderDetail.Entity;
			}
			set
			{
				OrderDetail previousValue = this._OrderDetail.Entity;
				if (((previousValue != value) 
							|| (this._OrderDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDetail.Entity = null;
						previousValue.OrderExtras.Remove(this);
					}
					this._OrderDetail.Entity = value;
					if ((value != null))
					{
						value.OrderExtras.Add(this);
						this._OrderDetailID = value.OrderDetailID;
					}
					else
					{
						this._OrderDetailID = default(decimal);
					}
					this.SendPropertyChanged("OrderDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.YdBannerPhrases")]
	public partial class YdBannerPhrase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BannerID;
		
		private int _PhraseID;
		
		private string _Phrase;
		
		private double _MinPrice;
		
		private int _CampaignID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBannerIDChanging(int value);
    partial void OnBannerIDChanged();
    partial void OnPhraseIDChanging(int value);
    partial void OnPhraseIDChanged();
    partial void OnPhraseChanging(string value);
    partial void OnPhraseChanged();
    partial void OnCurrentOnSearchChanging(double value);
    partial void OnCurrentOnSearchChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    #endregion
		
		public YdBannerPhrase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerID", DbType="Int NOT NULL")]
		public int BannerID
		{
			get
			{
				return this._BannerID;
			}
			set
			{
				if ((this._BannerID != value))
				{
					this.OnBannerIDChanging(value);
					this.SendPropertyChanging();
					this._BannerID = value;
					this.SendPropertyChanged("BannerID");
					this.OnBannerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhraseID", DbType="Int NOT NULL")]
		public int PhraseID
		{
			get
			{
				return this._PhraseID;
			}
			set
			{
				if ((this._PhraseID != value))
				{
					this.OnPhraseIDChanging(value);
					this.SendPropertyChanging();
					this._PhraseID = value;
					this.SendPropertyChanged("PhraseID");
					this.OnPhraseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phrase", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Phrase
		{
			get
			{
				return this._Phrase;
			}
			set
			{
				if ((this._Phrase != value))
				{
					this.OnPhraseChanging(value);
					this.SendPropertyChanging();
					this._Phrase = value;
					this.SendPropertyChanged("Phrase");
					this.OnPhraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Float NOT NULL")]
		public double CurrentOnSearch
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnCurrentOnSearchChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("CurrentOnSearch");
					this.OnCurrentOnSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.VideoCategories")]
	public partial class VideoCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _WebSortOrder;
		
		private System.Nullable<int> _ParentId;
		
		private string _Description;
		
		private EntitySet<Video> _Videos;
		
		private EntitySet<VideoCategory> _VideoCategories;
		
		private EntityRef<VideoCategory> _VideoCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VideoCategory()
		{
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			this._VideoCategories = new EntitySet<VideoCategory>(new Action<VideoCategory>(this.attach_VideoCategories), new Action<VideoCategory>(this.detach_VideoCategories));
			this._VideoCategory1 = default(EntityRef<VideoCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._VideoCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoCategory_Video", Storage="_Videos", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoCategory_VideoCategory", Storage="_VideoCategories", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<VideoCategory> VideoCategories
		{
			get
			{
				return this._VideoCategories;
			}
			set
			{
				this._VideoCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoCategory_VideoCategory", Storage="_VideoCategory1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public VideoCategory VideoCategory1
		{
			get
			{
				return this._VideoCategory1.Entity;
			}
			set
			{
				VideoCategory previousValue = this._VideoCategory1.Entity;
				if (((previousValue != value) 
							|| (this._VideoCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoCategory1.Entity = null;
						previousValue.VideoCategories.Remove(this);
					}
					this._VideoCategory1.Entity = value;
					if ((value != null))
					{
						value.VideoCategories.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VideoCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.VideoCategory = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.VideoCategory = null;
		}
		
		private void attach_VideoCategories(VideoCategory entity)
		{
			this.SendPropertyChanging();
			entity.VideoCategory1 = this;
		}
		
		private void detach_VideoCategories(VideoCategory entity)
		{
			this.SendPropertyChanging();
			entity.VideoCategory1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.EntityStudySets")]
	public partial class EntityStudySet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EntityId;
		
		private string _EntityName;
		
		private string _CourseTCList;
		
		private byte _Type;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEntityIdChanging(int value);
    partial void OnEntityIdChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnCourseTCListChanging(string value);
    partial void OnCourseTCListChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public EntityStudySet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId")]
		public int EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", CanBeNull=false)]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTCList")]
		public string CourseTCList
		{
			get
			{
				return this._CourseTCList;
			}
			set
			{
				if ((this._CourseTCList != value))
				{
					this.OnCourseTCListChanging(value);
					this.SendPropertyChanging();
					this._CourseTCList = value;
					this.SendPropertyChanged("CourseTCList");
					this.OnCourseTCListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.HtmlBlocks")]
	public partial class HtmlBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private System.DateTime _UpdateDate;
		
		private string _LastChanger_TC;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public HtmlBlock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.UserCourseInfos")]
	public partial class UserCourseInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Course_TC;
		
		private string _Description;
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public UserCourseInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.ImageMetas")]
	public partial class ImageMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ImageMeta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.CityInfos")]
	public partial class CityInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CityInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.SimpleValues")]
	public partial class SimpleValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public SimpleValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.CompanyFiles")]
	public partial class CompanyFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _SysFileName;
		
		private int _UserID;
		
		private int _CompanyID;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSysFileNameChanging(string value);
    partial void OnSysFileNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public CompanyFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysFileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SysFileName
		{
			get
			{
				return this._SysFileName;
			}
			set
			{
				if ((this._SysFileName != value))
				{
					this.OnSysFileNameChanging(value);
					this.SendPropertyChanging();
					this._SysFileName = value;
					this.SendPropertyChanged("SysFileName");
					this.OnSysFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.LectureFiles")]
	public partial class LectureFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _Lecture_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLecture_IDChanging(decimal value);
    partial void OnLecture_IDChanged();
    #endregion
		
		public LectureFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lecture_ID")]
		public decimal Lecture_ID
		{
			get
			{
				return this._Lecture_ID;
			}
			set
			{
				if ((this._Lecture_ID != value))
				{
					this.OnLecture_IDChanging(value);
					this.SendPropertyChanging();
					this._Lecture_ID = value;
					this.SendPropertyChanged("Lecture_ID");
					this.OnLecture_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.GroupDatas")]
	public partial class GroupData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _Group_ID;
		
		private System.Nullable<long> _VkGroupId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnVkGroupIdChanging(System.Nullable<long> value);
    partial void OnVkGroupIdChanged();
    #endregion
		
		public GroupData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VkGroupId", DbType="BigInt")]
		public System.Nullable<long> VkGroupId
		{
			get
			{
				return this._VkGroupId;
			}
			set
			{
				if ((this._VkGroupId != value))
				{
					this.OnVkGroupIdChanging(value);
					this.SendPropertyChanging();
					this._VkGroupId = value;
					this.SendPropertyChanged("VkGroupId");
					this.OnVkGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.SberbankOrders")]
	public partial class SberbankOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CommonOrderId;
		
		private System.Guid _SberbankId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommonOrderIdChanging(string value);
    partial void OnCommonOrderIdChanged();
    partial void OnSberbankIdChanging(System.Guid value);
    partial void OnSberbankIdChanged();
    #endregion
		
		public SberbankOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonOrderId", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CommonOrderId
		{
			get
			{
				return this._CommonOrderId;
			}
			set
			{
				if ((this._CommonOrderId != value))
				{
					this.OnCommonOrderIdChanging(value);
					this.SendPropertyChanging();
					this._CommonOrderId = value;
					this.SendPropertyChanged("CommonOrderId");
					this.OnCommonOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SberbankId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SberbankId
		{
			get
			{
				return this._SberbankId;
			}
			set
			{
				if ((this._SberbankId != value))
				{
					this.OnSberbankIdChanging(value);
					this.SendPropertyChanging();
					this._SberbankId = value;
					this.SendPropertyChanged("SberbankId");
					this.OnSberbankIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SpecialistWeb.dbo.AlbumVideos")]
	public partial class AlbumVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _AlbumId;
		
		private string _Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlbumIdChanging(long value);
    partial void OnAlbumIdChanged();
    partial void OnVideosChanging(string value);
    partial void OnVideosChanged();
    #endregion
		
		public AlbumVideo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="BigInt NOT NULL")]
		public long AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Videos", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				if ((this._Videos != value))
				{
					this.OnVideosChanging(value);
					this.SendPropertyChanging();
					this._Videos = value;
					this.SendPropertyChanged("Videos");
					this.OnVideosChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class uspCheckPromoCodeResult
	{
		
		private short _Column1;
		
		public uspCheckPromoCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="SmallInt NOT NULL")]
		public short Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
