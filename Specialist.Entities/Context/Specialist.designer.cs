#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Specialist.Entities.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SPECREPL_replicating")]
	public partial class SpecialistDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertEmployeesCourse(EmployeesCourse instance);
    partial void UpdateEmployeesCourse(EmployeesCourse instance);
    partial void DeleteEmployeesCourse(EmployeesCourse instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertCourseContent(CourseContent instance);
    partial void UpdateCourseContent(CourseContent instance);
    partial void DeleteCourseContent(CourseContent instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertTrack(Track instance);
    partial void UpdateTrack(Track instance);
    partial void DeleteTrack(Track instance);
    partial void InsertDayShift(DayShift instance);
    partial void UpdateDayShift(DayShift instance);
    partial void DeleteDayShift(DayShift instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertSource(Source instance);
    partial void UpdateSource(Source instance);
    partial void DeleteSource(Source instance);
    partial void InsertPriceList(PriceList instance);
    partial void UpdatePriceList(PriceList instance);
    partial void DeletePriceList(PriceList instance);
    partial void InsertPriceView(PriceView instance);
    partial void UpdatePriceView(PriceView instance);
    partial void DeletePriceView(PriceView instance);
    partial void InsertBranchOffice(BranchOffice instance);
    partial void UpdateBranchOffice(BranchOffice instance);
    partial void DeleteBranchOffice(BranchOffice instance);
    partial void InsertComplex(Complex instance);
    partial void UpdateComplex(Complex instance);
    partial void DeleteComplex(Complex instance);
    partial void InsertCourseLanguage(CourseLanguage instance);
    partial void UpdateCourseLanguage(CourseLanguage instance);
    partial void DeleteCourseLanguage(CourseLanguage instance);
    partial void InsertAuthorizationType(AuthorizationType instance);
    partial void UpdateAuthorizationType(AuthorizationType instance);
    partial void DeleteAuthorizationType(AuthorizationType instance);
    partial void InsertStudentsInGroupsCalc(StudentsInGroupsCalc instance);
    partial void UpdateStudentsInGroupsCalc(StudentsInGroupsCalc instance);
    partial void DeleteStudentsInGroupsCalc(StudentsInGroupsCalc instance);
    partial void InsertStudentInGroup(StudentInGroup instance);
    partial void UpdateStudentInGroup(StudentInGroup instance);
    partial void DeleteStudentInGroup(StudentInGroup instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertLecture(Lecture instance);
    partial void UpdateLecture(Lecture instance);
    partial void DeleteLecture(Lecture instance);
    partial void InsertCoursePrerequisite(CoursePrerequisite instance);
    partial void UpdateCoursePrerequisite(CoursePrerequisite instance);
    partial void DeleteCoursePrerequisite(CoursePrerequisite instance);
    partial void InsertGroupsCalc(GroupsCalc instance);
    partial void UpdateGroupsCalc(GroupsCalc instance);
    partial void DeleteGroupsCalc(GroupsCalc instance);
    partial void InsertCourseCategory(CourseCategory instance);
    partial void UpdateCourseCategory(CourseCategory instance);
    partial void DeleteCourseCategory(CourseCategory instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertPriceType(PriceType instance);
    partial void UpdatePriceType(PriceType instance);
    partial void DeletePriceType(PriceType instance);
    partial void InsertCitiesPriceType(CitiesPriceType instance);
    partial void UpdateCitiesPriceType(CitiesPriceType instance);
    partial void DeleteCitiesPriceType(CitiesPriceType instance);
    partial void InsertEmpGroup(EmpGroup instance);
    partial void UpdateEmpGroup(EmpGroup instance);
    partial void DeleteEmpGroup(EmpGroup instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDepartmentEmpGroup(DepartmentEmpGroup instance);
    partial void UpdateDepartmentEmpGroup(DepartmentEmpGroup instance);
    partial void DeleteDepartmentEmpGroup(DepartmentEmpGroup instance);
    partial void InsertQuestionnaire(Questionnaire instance);
    partial void UpdateQuestionnaire(Questionnaire instance);
    partial void DeleteQuestionnaire(Questionnaire instance);
    partial void InsertQuestionnaireTeachersMark(QuestionnaireTeachersMark instance);
    partial void UpdateQuestionnaireTeachersMark(QuestionnaireTeachersMark instance);
    partial void DeleteQuestionnaireTeachersMark(QuestionnaireTeachersMark instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertClassRoom(ClassRoom instance);
    partial void UpdateClassRoom(ClassRoom instance);
    partial void DeleteClassRoom(ClassRoom instance);
    partial void InsertStudentInGroupLecture(StudentInGroupLecture instance);
    partial void UpdateStudentInGroupLecture(StudentInGroupLecture instance);
    partial void DeleteStudentInGroupLecture(StudentInGroupLecture instance);
    partial void InsertCertification(Certification instance);
    partial void UpdateCertification(Certification instance);
    partial void DeleteCertification(Certification instance);
    partial void InsertExam(Exam instance);
    partial void UpdateExam(Exam instance);
    partial void DeleteExam(Exam instance);
    partial void InsertExamProvider(ExamProvider instance);
    partial void UpdateExamProvider(ExamProvider instance);
    partial void DeleteExamProvider(ExamProvider instance);
    partial void InsertExamCourse(ExamCourse instance);
    partial void UpdateExamCourse(ExamCourse instance);
    partial void DeleteExamCourse(ExamCourse instance);
    partial void InsertContactType(ContactType instance);
    partial void UpdateContactType(ContactType instance);
    partial void DeleteContactType(ContactType instance);
    partial void InsertEmployeeContact(EmployeeContact instance);
    partial void UpdateEmployeeContact(EmployeeContact instance);
    partial void DeleteEmployeeContact(EmployeeContact instance);
    partial void InsertEmployeeCertification(EmployeeCertification instance);
    partial void UpdateEmployeeCertification(EmployeeCertification instance);
    partial void DeleteEmployeeCertification(EmployeeCertification instance);
    partial void InsertCoursesChain(CoursesChain instance);
    partial void UpdateCoursesChain(CoursesChain instance);
    partial void DeleteCoursesChain(CoursesChain instance);
    partial void InsertCertType(CertType instance);
    partial void UpdateCertType(CertType instance);
    partial void DeleteCertType(CertType instance);
    partial void InsertCourseCertificate(CourseCertificate instance);
    partial void UpdateCourseCertificate(CourseCertificate instance);
    partial void DeleteCourseCertificate(CourseCertificate instance);
    partial void InsertCertificationExam(CertificationExam instance);
    partial void UpdateCertificationExam(CertificationExam instance);
    partial void DeleteCertificationExam(CertificationExam instance);
    partial void InsertCertificationTable(CertificationTable instance);
    partial void UpdateCertificationTable(CertificationTable instance);
    partial void DeleteCertificationTable(CertificationTable instance);
    partial void InsertCertificationVariant(CertificationVariant instance);
    partial void UpdateCertificationVariant(CertificationVariant instance);
    partial void DeleteCertificationVariant(CertificationVariant instance);
    partial void InsertStudentEmail(StudentEmail instance);
    partial void UpdateStudentEmail(StudentEmail instance);
    partial void DeleteStudentEmail(StudentEmail instance);
    partial void InsertStudentPhone(StudentPhone instance);
    partial void UpdateStudentPhone(StudentPhone instance);
    partial void DeleteStudentPhone(StudentPhone instance);
    partial void InsertStudentInGroupSource(StudentInGroupSource instance);
    partial void UpdateStudentInGroupSource(StudentInGroupSource instance);
    partial void DeleteStudentInGroupSource(StudentInGroupSource instance);
    partial void InsertOurOrgBank(OurOrgBank instance);
    partial void UpdateOurOrgBank(OurOrgBank instance);
    partial void DeleteOurOrgBank(OurOrgBank instance);
    partial void InsertProfession(Profession instance);
    partial void UpdateProfession(Profession instance);
    partial void DeleteProfession(Profession instance);
    partial void InsertExtras(Extras instance);
    partial void UpdateExtras(Extras instance);
    partial void DeleteExtras(Extras instance);
    partial void InsertStudentInGroupExtras(StudentInGroupExtras instance);
    partial void UpdateStudentInGroupExtras(StudentInGroupExtras instance);
    partial void DeleteStudentInGroupExtras(StudentInGroupExtras instance);
    partial void InsertCertificate(Certificate instance);
    partial void UpdateCertificate(Certificate instance);
    partial void DeleteCertificate(Certificate instance);
    partial void InsertStudentNote(StudentNote instance);
    partial void UpdateStudentNote(StudentNote instance);
    partial void DeleteStudentNote(StudentNote instance);
    partial void InsertStudyReason(StudyReason instance);
    partial void UpdateStudyReason(StudyReason instance);
    partial void DeleteStudyReason(StudyReason instance);
    partial void InsertStudentCalc(StudentCalc instance);
    partial void UpdateStudentCalc(StudentCalc instance);
    partial void DeleteStudentCalc(StudentCalc instance);
    partial void InsertStudentClabCard(StudentClabCard instance);
    partial void UpdateStudentClabCard(StudentClabCard instance);
    partial void DeleteStudentClabCard(StudentClabCard instance);
    partial void InsertClabCardColor(ClabCardColor instance);
    partial void UpdateClabCardColor(ClabCardColor instance);
    partial void DeleteClabCardColor(ClabCardColor instance);
    partial void InsertSpecOrg(SpecOrg instance);
    partial void UpdateSpecOrg(SpecOrg instance);
    partial void DeleteSpecOrg(SpecOrg instance);
    partial void InsertTerrain(Terrain instance);
    partial void UpdateTerrain(Terrain instance);
    partial void DeleteTerrain(Terrain instance);
    partial void InsertSigEvent(SigEvent instance);
    partial void UpdateSigEvent(SigEvent instance);
    partial void DeleteSigEvent(SigEvent instance);
    partial void InsertOurOrg(OurOrg instance);
    partial void UpdateOurOrg(OurOrg instance);
    partial void DeleteOurOrg(OurOrg instance);
    partial void InsertExtrasCourse(ExtrasCourse instance);
    partial void UpdateExtrasCourse(ExtrasCourse instance);
    partial void DeleteExtrasCourse(ExtrasCourse instance);
    partial void InsertCourseGiveOutItem(CourseGiveOutItem instance);
    partial void UpdateCourseGiveOutItem(CourseGiveOutItem instance);
    partial void DeleteCourseGiveOutItem(CourseGiveOutItem instance);
    partial void InsertCoursesCourseGiveOutItem(CoursesCourseGiveOutItem instance);
    partial void UpdateCoursesCourseGiveOutItem(CoursesCourseGiveOutItem instance);
    partial void DeleteCoursesCourseGiveOutItem(CoursesCourseGiveOutItem instance);
    partial void InsertWebinarLicense(WebinarLicense instance);
    partial void UpdateWebinarLicense(WebinarLicense instance);
    partial void DeleteWebinarLicense(WebinarLicense instance);
    partial void InsertEmployeesAbsence(EmployeesAbsence instance);
    partial void UpdateEmployeesAbsence(EmployeesAbsence instance);
    partial void DeleteEmployeesAbsence(EmployeesAbsence instance);
    partial void InsertEmployeesCurator(EmployeesCurator instance);
    partial void UpdateEmployeesCurator(EmployeesCurator instance);
    partial void DeleteEmployeesCurator(EmployeesCurator instance);
    partial void InsertWorkBranch(WorkBranch instance);
    partial void UpdateWorkBranch(WorkBranch instance);
    partial void DeleteWorkBranch(WorkBranch instance);
    partial void InsertMetier(Metier instance);
    partial void UpdateMetier(Metier instance);
    partial void DeleteMetier(Metier instance);
    partial void InsertSpecCourseFile(SpecCourseFile instance);
    partial void UpdateSpecCourseFile(SpecCourseFile instance);
    partial void DeleteSpecCourseFile(SpecCourseFile instance);
    partial void InsertQuestionnaireClassRoomsMark(QuestionnaireClassRoomsMark instance);
    partial void UpdateQuestionnaireClassRoomsMark(QuestionnaireClassRoomsMark instance);
    partial void DeleteQuestionnaireClassRoomsMark(QuestionnaireClassRoomsMark instance);
    partial void InsertOrg(Org instance);
    partial void UpdateOrg(Org instance);
    partial void DeleteOrg(Org instance);
    partial void InsertCalendar(Calendar instance);
    partial void UpdateCalendar(Calendar instance);
    partial void DeleteCalendar(Calendar instance);
    partial void InsertStudentRating(StudentRating instance);
    partial void UpdateStudentRating(StudentRating instance);
    partial void DeleteStudentRating(StudentRating instance);
    partial void InsertSpecPromoCode(SpecPromoCode instance);
    partial void UpdateSpecPromoCode(SpecPromoCode instance);
    partial void DeleteSpecPromoCode(SpecPromoCode instance);
    partial void InsertCourseDirectionsA(CourseDirectionsA instance);
    partial void UpdateCourseDirectionsA(CourseDirectionsA instance);
    partial void DeleteCourseDirectionsA(CourseDirectionsA instance);
    partial void InsertSpecPromoCodeCoursesDirection(SpecPromoCodeCoursesDirection instance);
    partial void UpdateSpecPromoCodeCoursesDirection(SpecPromoCodeCoursesDirection instance);
    partial void DeleteSpecPromoCodeCoursesDirection(SpecPromoCodeCoursesDirection instance);
    partial void InsertRatingSubtotal(RatingSubtotal instance);
    partial void UpdateRatingSubtotal(RatingSubtotal instance);
    partial void DeleteRatingSubtotal(RatingSubtotal instance);
    #endregion
		
		public SpecialistDataContext() : 
				base(global::Specialist.Entities.Properties.Settings.Default.SPECREPL_replicatingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SpecialistDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesCourse> EmployeesCourses
		{
			get
			{
				return this.GetTable<EmployeesCourse>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<CourseContent> CourseContents
		{
			get
			{
				return this.GetTable<CourseContent>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Track> Tracks
		{
			get
			{
				return this.GetTable<Track>();
			}
		}
		
		public System.Data.Linq.Table<DayShift> DayShifts
		{
			get
			{
				return this.GetTable<DayShift>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Source> Sources
		{
			get
			{
				return this.GetTable<Source>();
			}
		}
		
		public System.Data.Linq.Table<PriceList> PriceLists
		{
			get
			{
				return this.GetTable<PriceList>();
			}
		}
		
		public System.Data.Linq.Table<PriceView> PriceViews
		{
			get
			{
				return this.GetTable<PriceView>();
			}
		}
		
		public System.Data.Linq.Table<BranchOffice> BranchOffices
		{
			get
			{
				return this.GetTable<BranchOffice>();
			}
		}
		
		public System.Data.Linq.Table<Complex> Complexes
		{
			get
			{
				return this.GetTable<Complex>();
			}
		}
		
		public System.Data.Linq.Table<CourseLanguage> CourseLanguages
		{
			get
			{
				return this.GetTable<CourseLanguage>();
			}
		}
		
		public System.Data.Linq.Table<AuthorizationType> AuthorizationTypes
		{
			get
			{
				return this.GetTable<AuthorizationType>();
			}
		}
		
		public System.Data.Linq.Table<StudentsInGroupsCalc> StudentsInGroupsCalcs
		{
			get
			{
				return this.GetTable<StudentsInGroupsCalc>();
			}
		}
		
		public System.Data.Linq.Table<StudentInGroup> StudentInGroups
		{
			get
			{
				return this.GetTable<StudentInGroup>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<Lecture> Lectures
		{
			get
			{
				return this.GetTable<Lecture>();
			}
		}
		
		public System.Data.Linq.Table<CoursePrerequisite> CoursePrerequisites
		{
			get
			{
				return this.GetTable<CoursePrerequisite>();
			}
		}
		
		public System.Data.Linq.Table<GroupsCalc> GroupsCalcs
		{
			get
			{
				return this.GetTable<GroupsCalc>();
			}
		}
		
		public System.Data.Linq.Table<CourseCategory> CourseCategories
		{
			get
			{
				return this.GetTable<CourseCategory>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Providers
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<PriceType> PriceTypes
		{
			get
			{
				return this.GetTable<PriceType>();
			}
		}
		
		public System.Data.Linq.Table<CitiesPriceType> CitiesPriceTypes
		{
			get
			{
				return this.GetTable<CitiesPriceType>();
			}
		}
		
		public System.Data.Linq.Table<EmpGroup> EmpGroups
		{
			get
			{
				return this.GetTable<EmpGroup>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentEmpGroup> DepartmentEmpGroups
		{
			get
			{
				return this.GetTable<DepartmentEmpGroup>();
			}
		}
		
		public System.Data.Linq.Table<Questionnaire> Questionnaires
		{
			get
			{
				return this.GetTable<Questionnaire>();
			}
		}
		
		public System.Data.Linq.Table<QuestionnaireTeachersMark> QuestionnaireTeachersMarks
		{
			get
			{
				return this.GetTable<QuestionnaireTeachersMark>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<ClassRoom> ClassRooms
		{
			get
			{
				return this.GetTable<ClassRoom>();
			}
		}
		
		public System.Data.Linq.Table<StudentInGroupLecture> StudentInGroupLectures
		{
			get
			{
				return this.GetTable<StudentInGroupLecture>();
			}
		}
		
		public System.Data.Linq.Table<Certification> Certifications
		{
			get
			{
				return this.GetTable<Certification>();
			}
		}
		
		public System.Data.Linq.Table<Exam> Exams
		{
			get
			{
				return this.GetTable<Exam>();
			}
		}
		
		public System.Data.Linq.Table<ExamProvider> ExamProviders
		{
			get
			{
				return this.GetTable<ExamProvider>();
			}
		}
		
		public System.Data.Linq.Table<ExamCourse> ExamCourses
		{
			get
			{
				return this.GetTable<ExamCourse>();
			}
		}
		
		public System.Data.Linq.Table<ContactType> ContactTypes
		{
			get
			{
				return this.GetTable<ContactType>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeContact> EmployeeContacts
		{
			get
			{
				return this.GetTable<EmployeeContact>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeCertification> EmployeeCertifications
		{
			get
			{
				return this.GetTable<EmployeeCertification>();
			}
		}
		
		public System.Data.Linq.Table<CoursesChain> CoursesChains
		{
			get
			{
				return this.GetTable<CoursesChain>();
			}
		}
		
		public System.Data.Linq.Table<CertType> CertTypes
		{
			get
			{
				return this.GetTable<CertType>();
			}
		}
		
		public System.Data.Linq.Table<CourseCertificate> CourseCertificates
		{
			get
			{
				return this.GetTable<CourseCertificate>();
			}
		}
		
		public System.Data.Linq.Table<CertificationExam> CertificationExams
		{
			get
			{
				return this.GetTable<CertificationExam>();
			}
		}
		
		public System.Data.Linq.Table<CertificationTable> CertificationTables
		{
			get
			{
				return this.GetTable<CertificationTable>();
			}
		}
		
		public System.Data.Linq.Table<CertificationVariant> CertificationVariants
		{
			get
			{
				return this.GetTable<CertificationVariant>();
			}
		}
		
		public System.Data.Linq.Table<StudentEmail> StudentEmails
		{
			get
			{
				return this.GetTable<StudentEmail>();
			}
		}
		
		public System.Data.Linq.Table<StudentPhone> StudentPhones
		{
			get
			{
				return this.GetTable<StudentPhone>();
			}
		}
		
		public System.Data.Linq.Table<StudentInGroupSource> StudentInGroupSources
		{
			get
			{
				return this.GetTable<StudentInGroupSource>();
			}
		}
		
		public System.Data.Linq.Table<OurOrgBank> OurOrgBanks
		{
			get
			{
				return this.GetTable<OurOrgBank>();
			}
		}
		
		public System.Data.Linq.Table<Profession> Professions
		{
			get
			{
				return this.GetTable<Profession>();
			}
		}
		
		public System.Data.Linq.Table<Extras> Extras
		{
			get
			{
				return this.GetTable<Extras>();
			}
		}
		
		public System.Data.Linq.Table<StudentInGroupExtras> StudentInGroupExtras
		{
			get
			{
				return this.GetTable<StudentInGroupExtras>();
			}
		}
		
		public System.Data.Linq.Table<Certificate> Certificates
		{
			get
			{
				return this.GetTable<Certificate>();
			}
		}
		
		public System.Data.Linq.Table<StudentNote> StudentNotes
		{
			get
			{
				return this.GetTable<StudentNote>();
			}
		}
		
		public System.Data.Linq.Table<StudyReason> StudyReasons
		{
			get
			{
				return this.GetTable<StudyReason>();
			}
		}
		
		public System.Data.Linq.Table<StudentCalc> StudentCalcs
		{
			get
			{
				return this.GetTable<StudentCalc>();
			}
		}
		
		public System.Data.Linq.Table<StudentClabCard> StudentClabCards
		{
			get
			{
				return this.GetTable<StudentClabCard>();
			}
		}
		
		public System.Data.Linq.Table<ClabCardColor> ClabCardColors
		{
			get
			{
				return this.GetTable<ClabCardColor>();
			}
		}
		
		public System.Data.Linq.Table<SpecOrg> SpecOrgs
		{
			get
			{
				return this.GetTable<SpecOrg>();
			}
		}
		
		public System.Data.Linq.Table<Terrain> Terrains
		{
			get
			{
				return this.GetTable<Terrain>();
			}
		}
		
		public System.Data.Linq.Table<SigEvent> SigEvents
		{
			get
			{
				return this.GetTable<SigEvent>();
			}
		}
		
		public System.Data.Linq.Table<OurOrg> OurOrgs
		{
			get
			{
				return this.GetTable<OurOrg>();
			}
		}
		
		public System.Data.Linq.Table<ExtrasCourse> ExtrasCourses
		{
			get
			{
				return this.GetTable<ExtrasCourse>();
			}
		}
		
		public System.Data.Linq.Table<CourseGiveOutItem> CourseGiveOutItems
		{
			get
			{
				return this.GetTable<CourseGiveOutItem>();
			}
		}
		
		public System.Data.Linq.Table<CoursesCourseGiveOutItem> CoursesCourseGiveOutItems
		{
			get
			{
				return this.GetTable<CoursesCourseGiveOutItem>();
			}
		}
		
		public System.Data.Linq.Table<WebinarLicense> WebinarLicenses
		{
			get
			{
				return this.GetTable<WebinarLicense>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesAbsence> EmployeesAbsences
		{
			get
			{
				return this.GetTable<EmployeesAbsence>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesCurator> EmployeesCurators
		{
			get
			{
				return this.GetTable<EmployeesCurator>();
			}
		}
		
		public System.Data.Linq.Table<WorkBranch> WorkBranches
		{
			get
			{
				return this.GetTable<WorkBranch>();
			}
		}
		
		public System.Data.Linq.Table<Metier> Metiers
		{
			get
			{
				return this.GetTable<Metier>();
			}
		}
		
		public System.Data.Linq.Table<SpecCourseFile> SpecCourseFiles
		{
			get
			{
				return this.GetTable<SpecCourseFile>();
			}
		}
		
		public System.Data.Linq.Table<QuestionnaireClassRoomsMark> QuestionnaireClassRoomsMarks
		{
			get
			{
				return this.GetTable<QuestionnaireClassRoomsMark>();
			}
		}
		
		public System.Data.Linq.Table<Org> Orgs
		{
			get
			{
				return this.GetTable<Org>();
			}
		}
		
		public System.Data.Linq.Table<Calendar> Calendars
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<StudentRating> StudentRatings
		{
			get
			{
				return this.GetTable<StudentRating>();
			}
		}
		
		public System.Data.Linq.Table<SpecPromoCode> SpecPromoCodes
		{
			get
			{
				return this.GetTable<SpecPromoCode>();
			}
		}
		
		public System.Data.Linq.Table<CourseDirectionsA> CourseDirectionsAs
		{
			get
			{
				return this.GetTable<CourseDirectionsA>();
			}
		}
		
		public System.Data.Linq.Table<SpecPromoCodeCoursesDirection> SpecPromoCodeCoursesDirections
		{
			get
			{
				return this.GetTable<SpecPromoCodeCoursesDirection>();
			}
		}
		
		public System.Data.Linq.Table<RatingSubtotal> RatingSubtotals
		{
			get
			{
				return this.GetTable<RatingSubtotal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Course_ID;
		
		private string _Course_TC;
		
		private string _ParentCourse_TC;
		
		private string _CourseDirection_TC;
		
		private string _OurOrg_TC;
		
		private string _Vendor_TC;
		
		private System.Nullable<decimal> _MaxDiscount;
		
		private string _Name;
		
		private string _NameOfficial;
		
		private string _NameOfficialEn;
		
		private string _WebName;
		
		private string _eLearningName;
		
		private decimal _BaseHours;
		
		private decimal _AdditionalHours;
		
		private byte _NormNumOfStudents;
		
		private byte _MaxNumOfStudents;
		
		private System.Nullable<bool> _IsTrack;
		
		private bool _IsExam;
		
		private bool _IsNew;
		
		private string _WebTopic;
		
		private bool _IsFeedingCourse;
		
		private string _WebShortName;
		
		private bool _IsActive;
		
		private string _AnnounceDescription;
		
		private string _QualAdv_TC;
		
		private string _UrlName;
		
		private bool _IsRestrictedSchedule;
		
		private int _WebSortOrder;
		
		private string _Introduction;
		
		private string _OnComplete;
		
		private bool _IsFreeConsultationExists;
		
		private string _Description;
		
		private bool _IsProjectAllowed;
		
		private string _CourseDirectionA_TC;
		
		private string _WebNameComment;
		
		private System.Nullable<bool> _WebPublishSchedule;
		
		private bool _IsAllowedHalfCoursePrice;
		
		private decimal _IntraExtramuralHours;
		
		private decimal _IntraExtramuralHoursOut;
		
		private string _WebinarEduURL;
		
		private bool _IsNotAuthorized;
		
		private bool _IsTheory;
		
		private bool _IsUnlimitedTraining;
		
		private System.Nullable<short> _DiscountWebinar;
		
		private System.Nullable<decimal> _ClassRoomType_ID;
		
		private string _RatingCourse_TC;
		
		private EntitySet<EmployeesCourse> _EmployeesCourses;
		
		private EntitySet<CourseContent> _tCourseContents;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<Track> _CourseTracks;
		
		private EntitySet<Track> _Tracks;
		
		private EntitySet<CourseLanguage> _CourseLanguages;
		
		private EntitySet<CoursePrerequisite> _CoursePrerequisites;
		
		private EntitySet<CoursePrerequisite> _RequiredPrerequisites;
		
		private EntitySet<CourseCategory> _CourseCategories;
		
		private EntitySet<ExamCourse> _ExamCourses;
		
		private EntitySet<CoursesChain> _CoursesChains;
		
		private EntitySet<CourseCertificate> _CourseCertificates;
		
		private EntityRef<AuthorizationType> _AuthorizationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(decimal value);
    partial void OnCourse_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnParentCourse_TCChanging(string value);
    partial void OnParentCourse_TCChanged();
    partial void OnCourseDirection_TCChanging(string value);
    partial void OnCourseDirection_TCChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnAuthorizationType_TCChanging(string value);
    partial void OnAuthorizationType_TCChanged();
    partial void OnMaxDiscountChanging(System.Nullable<decimal> value);
    partial void OnMaxDiscountChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameOfficialChanging(string value);
    partial void OnNameOfficialChanged();
    partial void OnNameOfficialEnChanging(string value);
    partial void OnNameOfficialEnChanged();
    partial void OnWebNameChanging(string value);
    partial void OnWebNameChanged();
    partial void OneLearningNameChanging(string value);
    partial void OneLearningNameChanged();
    partial void OnBaseHoursChanging(decimal value);
    partial void OnBaseHoursChanged();
    partial void OnAdditionalHoursChanging(decimal value);
    partial void OnAdditionalHoursChanged();
    partial void OnNormNumOfStudentsChanging(byte value);
    partial void OnNormNumOfStudentsChanged();
    partial void OnMaxNumOfStudentsChanging(byte value);
    partial void OnMaxNumOfStudentsChanged();
    partial void OnIsTrackChanging(System.Nullable<bool> value);
    partial void OnIsTrackChanged();
    partial void OnIsExamChanging(bool value);
    partial void OnIsExamChanged();
    partial void OnIsNewChanging(bool value);
    partial void OnIsNewChanged();
    partial void OnWebTopicChanging(string value);
    partial void OnWebTopicChanged();
    partial void OnIsFeedingCourseChanging(bool value);
    partial void OnIsFeedingCourseChanged();
    partial void OnWebShortNameChanging(string value);
    partial void OnWebShortNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAnnounceDescriptionChanging(string value);
    partial void OnAnnounceDescriptionChanged();
    partial void OnQualAdv_TCChanging(string value);
    partial void OnQualAdv_TCChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnIsRestrictedScheduleChanging(bool value);
    partial void OnIsRestrictedScheduleChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnIntroductionChanging(string value);
    partial void OnIntroductionChanged();
    partial void OnOnCompleteChanging(string value);
    partial void OnOnCompleteChanged();
    partial void OnIsFreeConsultationExistsChanging(bool value);
    partial void OnIsFreeConsultationExistsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsProjectAllowedChanging(bool value);
    partial void OnIsProjectAllowedChanged();
    partial void OnCourseDirectionA_TCChanging(string value);
    partial void OnCourseDirectionA_TCChanged();
    partial void OnWebNameCommentChanging(string value);
    partial void OnWebNameCommentChanged();
    partial void OnWebPublishScheduleChanging(System.Nullable<bool> value);
    partial void OnWebPublishScheduleChanged();
    partial void OnIsAllowedHalfCoursePriceChanging(bool value);
    partial void OnIsAllowedHalfCoursePriceChanged();
    partial void OnIntraExtramuralHoursChanging(decimal value);
    partial void OnIntraExtramuralHoursChanged();
    partial void OnIntraExtramuralHoursOutChanging(decimal value);
    partial void OnIntraExtramuralHoursOutChanged();
    partial void OnWebinarEduURLChanging(string value);
    partial void OnWebinarEduURLChanged();
    partial void OnIsNotAuthorizedChanging(bool value);
    partial void OnIsNotAuthorizedChanged();
    partial void OnIsTheoryChanging(bool value);
    partial void OnIsTheoryChanged();
    partial void OnIsUnlimitedTrainingChanging(bool value);
    partial void OnIsUnlimitedTrainingChanged();
    partial void OnDiscountWebinarChanging(System.Nullable<short> value);
    partial void OnDiscountWebinarChanged();
    partial void OnClassRoomType_IDChanging(System.Nullable<decimal> value);
    partial void OnClassRoomType_IDChanged();
    partial void OnRatingCourse_TCChanging(string value);
    partial void OnRatingCourse_TCChanged();
    #endregion
		
		public Course()
		{
			this._EmployeesCourses = new EntitySet<EmployeesCourse>(new Action<EmployeesCourse>(this.attach_EmployeesCourses), new Action<EmployeesCourse>(this.detach_EmployeesCourses));
			this._tCourseContents = new EntitySet<CourseContent>(new Action<CourseContent>(this.attach_tCourseContents), new Action<CourseContent>(this.detach_tCourseContents));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._CourseTracks = new EntitySet<Track>(new Action<Track>(this.attach_CourseTracks), new Action<Track>(this.detach_CourseTracks));
			this._Tracks = new EntitySet<Track>(new Action<Track>(this.attach_Tracks), new Action<Track>(this.detach_Tracks));
			this._CourseLanguages = new EntitySet<CourseLanguage>(new Action<CourseLanguage>(this.attach_CourseLanguages), new Action<CourseLanguage>(this.detach_CourseLanguages));
			this._CoursePrerequisites = new EntitySet<CoursePrerequisite>(new Action<CoursePrerequisite>(this.attach_CoursePrerequisites), new Action<CoursePrerequisite>(this.detach_CoursePrerequisites));
			this._RequiredPrerequisites = new EntitySet<CoursePrerequisite>(new Action<CoursePrerequisite>(this.attach_RequiredPrerequisites), new Action<CoursePrerequisite>(this.detach_RequiredPrerequisites));
			this._CourseCategories = new EntitySet<CourseCategory>(new Action<CourseCategory>(this.attach_CourseCategories), new Action<CourseCategory>(this.detach_CourseCategories));
			this._ExamCourses = new EntitySet<ExamCourse>(new Action<ExamCourse>(this.attach_ExamCourses), new Action<ExamCourse>(this.detach_ExamCourses));
			this._CoursesChains = new EntitySet<CoursesChain>(new Action<CoursesChain>(this.attach_CoursesChains), new Action<CoursesChain>(this.detach_CoursesChains));
			this._CourseCertificates = new EntitySet<CourseCertificate>(new Action<CourseCertificate>(this.attach_CourseCertificates), new Action<CourseCertificate>(this.detach_CourseCertificates));
			this._AuthorizationType = default(EntityRef<AuthorizationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCourse_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ParentCourse_TC
		{
			get
			{
				return this._ParentCourse_TC;
			}
			set
			{
				if ((this._ParentCourse_TC != value))
				{
					this.OnParentCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._ParentCourse_TC = value;
					this.SendPropertyChanged("ParentCourse_TC");
					this.OnParentCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirection_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CourseDirection_TC
		{
			get
			{
				return this._CourseDirection_TC;
			}
			set
			{
				if ((this._CourseDirection_TC != value))
				{
					this.OnCourseDirection_TCChanging(value);
					this.SendPropertyChanging();
					this._CourseDirection_TC = value;
					this.SendPropertyChanged("CourseDirection_TC");
					this.OnCourseDirection_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", DbType="VarChar(4) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_TC", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string AuthorizationType_TC
		{
			get
			{
				return this._Vendor_TC;
			}
			set
			{
				if ((this._Vendor_TC != value))
				{
					if (this._AuthorizationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorizationType_TCChanging(value);
					this.SendPropertyChanging();
					this._Vendor_TC = value;
					this.SendPropertyChanged("AuthorizationType_TC");
					this.OnAuthorizationType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDiscount", DbType="Decimal(5,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MaxDiscount
		{
			get
			{
				return this._MaxDiscount;
			}
			set
			{
				if ((this._MaxDiscount != value))
				{
					this.OnMaxDiscountChanging(value);
					this.SendPropertyChanging();
					this._MaxDiscount = value;
					this.SendPropertyChanged("MaxDiscount");
					this.OnMaxDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfficial", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NameOfficial
		{
			get
			{
				return this._NameOfficial;
			}
			set
			{
				if ((this._NameOfficial != value))
				{
					this.OnNameOfficialChanging(value);
					this.SendPropertyChanging();
					this._NameOfficial = value;
					this.SendPropertyChanged("NameOfficial");
					this.OnNameOfficialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfficialEn", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string NameOfficialEn
		{
			get
			{
				return this._NameOfficialEn;
			}
			set
			{
				if ((this._NameOfficialEn != value))
				{
					this.OnNameOfficialEnChanging(value);
					this.SendPropertyChanging();
					this._NameOfficialEn = value;
					this.SendPropertyChanged("NameOfficialEn");
					this.OnNameOfficialEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebName", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string WebName
		{
			get
			{
				return this._WebName;
			}
			set
			{
				if ((this._WebName != value))
				{
					this.OnWebNameChanging(value);
					this.SendPropertyChanging();
					this._WebName = value;
					this.SendPropertyChanged("WebName");
					this.OnWebNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eLearningName", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string eLearningName
		{
			get
			{
				return this._eLearningName;
			}
			set
			{
				if ((this._eLearningName != value))
				{
					this.OneLearningNameChanging(value);
					this.SendPropertyChanging();
					this._eLearningName = value;
					this.SendPropertyChanged("eLearningName");
					this.OneLearningNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseHours", DbType="Decimal(10,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal BaseHours
		{
			get
			{
				return this._BaseHours;
			}
			set
			{
				if ((this._BaseHours != value))
				{
					this.OnBaseHoursChanging(value);
					this.SendPropertyChanging();
					this._BaseHours = value;
					this.SendPropertyChanged("BaseHours");
					this.OnBaseHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalHours", DbType="Decimal(10,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal AdditionalHours
		{
			get
			{
				return this._AdditionalHours;
			}
			set
			{
				if ((this._AdditionalHours != value))
				{
					this.OnAdditionalHoursChanging(value);
					this.SendPropertyChanging();
					this._AdditionalHours = value;
					this.SendPropertyChanged("AdditionalHours");
					this.OnAdditionalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormNumOfStudents", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte NormNumOfStudents
		{
			get
			{
				return this._NormNumOfStudents;
			}
			set
			{
				if ((this._NormNumOfStudents != value))
				{
					this.OnNormNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._NormNumOfStudents = value;
					this.SendPropertyChanged("NormNumOfStudents");
					this.OnNormNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumOfStudents", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte MaxNumOfStudents
		{
			get
			{
				return this._MaxNumOfStudents;
			}
			set
			{
				if ((this._MaxNumOfStudents != value))
				{
					this.OnMaxNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._MaxNumOfStudents = value;
					this.SendPropertyChanged("MaxNumOfStudents");
					this.OnMaxNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrack", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsTrack
		{
			get
			{
				return this._IsTrack;
			}
			set
			{
				if ((this._IsTrack != value))
				{
					this.OnIsTrackChanging(value);
					this.SendPropertyChanging();
					this._IsTrack = value;
					this.SendPropertyChanged("IsTrack");
					this.OnIsTrackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExam", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsExam
		{
			get
			{
				return this._IsExam;
			}
			set
			{
				if ((this._IsExam != value))
				{
					this.OnIsExamChanging(value);
					this.SendPropertyChanging();
					this._IsExam = value;
					this.SendPropertyChanged("IsExam");
					this.OnIsExamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebTopic", DbType="VarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string WebTopic
		{
			get
			{
				return this._WebTopic;
			}
			set
			{
				if ((this._WebTopic != value))
				{
					this.OnWebTopicChanging(value);
					this.SendPropertyChanging();
					this._WebTopic = value;
					this.SendPropertyChanged("WebTopic");
					this.OnWebTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeedingCourse", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFeedingCourse
		{
			get
			{
				return this._IsFeedingCourse;
			}
			set
			{
				if ((this._IsFeedingCourse != value))
				{
					this.OnIsFeedingCourseChanging(value);
					this.SendPropertyChanging();
					this._IsFeedingCourse = value;
					this.SendPropertyChanged("IsFeedingCourse");
					this.OnIsFeedingCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebShortName", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string WebShortName
		{
			get
			{
				return this._WebShortName;
			}
			set
			{
				if ((this._WebShortName != value))
				{
					this.OnWebShortNameChanging(value);
					this.SendPropertyChanging();
					this._WebShortName = value;
					this.SendPropertyChanged("WebShortName");
					this.OnWebShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceDescription", DbType="VarChar(1500)", UpdateCheck=UpdateCheck.Never)]
		public string AnnounceDescription
		{
			get
			{
				return this._AnnounceDescription;
			}
			set
			{
				if ((this._AnnounceDescription != value))
				{
					this.OnAnnounceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AnnounceDescription = value;
					this.SendPropertyChanged("AnnounceDescription");
					this.OnAnnounceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualAdv_TC", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string QualAdv_TC
		{
			get
			{
				return this._QualAdv_TC;
			}
			set
			{
				if ((this._QualAdv_TC != value))
				{
					this.OnQualAdv_TCChanging(value);
					this.SendPropertyChanging();
					this._QualAdv_TC = value;
					this.SendPropertyChanged("QualAdv_TC");
					this.OnQualAdv_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestrictedSchedule", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsRestrictedSchedule
		{
			get
			{
				return this._IsRestrictedSchedule;
			}
			set
			{
				if ((this._IsRestrictedSchedule != value))
				{
					this.OnIsRestrictedScheduleChanging(value);
					this.SendPropertyChanging();
					this._IsRestrictedSchedule = value;
					this.SendPropertyChanged("IsRestrictedSchedule");
					this.OnIsRestrictedScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduction")]
		public string Introduction
		{
			get
			{
				return this._Introduction;
			}
			set
			{
				if ((this._Introduction != value))
				{
					this.OnIntroductionChanging(value);
					this.SendPropertyChanging();
					this._Introduction = value;
					this.SendPropertyChanged("Introduction");
					this.OnIntroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnComplete")]
		public string OnComplete
		{
			get
			{
				return this._OnComplete;
			}
			set
			{
				if ((this._OnComplete != value))
				{
					this.OnOnCompleteChanging(value);
					this.SendPropertyChanging();
					this._OnComplete = value;
					this.SendPropertyChanged("OnComplete");
					this.OnOnCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFreeConsultationExists")]
		public bool IsFreeConsultationExists
		{
			get
			{
				return this._IsFreeConsultationExists;
			}
			set
			{
				if ((this._IsFreeConsultationExists != value))
				{
					this.OnIsFreeConsultationExistsChanging(value);
					this.SendPropertyChanging();
					this._IsFreeConsultationExists = value;
					this.SendPropertyChanged("IsFreeConsultationExists");
					this.OnIsFreeConsultationExistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WebDescription", Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProjectAllowed")]
		public bool IsProjectAllowed
		{
			get
			{
				return this._IsProjectAllowed;
			}
			set
			{
				if ((this._IsProjectAllowed != value))
				{
					this.OnIsProjectAllowedChanging(value);
					this.SendPropertyChanging();
					this._IsProjectAllowed = value;
					this.SendPropertyChanged("IsProjectAllowed");
					this.OnIsProjectAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirectionA_TC", CanBeNull=false)]
		public string CourseDirectionA_TC
		{
			get
			{
				return this._CourseDirectionA_TC;
			}
			set
			{
				if ((this._CourseDirectionA_TC != value))
				{
					this.OnCourseDirectionA_TCChanging(value);
					this.SendPropertyChanging();
					this._CourseDirectionA_TC = value;
					this.SendPropertyChanged("CourseDirectionA_TC");
					this.OnCourseDirectionA_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebNameComment")]
		public string WebNameComment
		{
			get
			{
				return this._WebNameComment;
			}
			set
			{
				if ((this._WebNameComment != value))
				{
					this.OnWebNameCommentChanging(value);
					this.SendPropertyChanging();
					this._WebNameComment = value;
					this.SendPropertyChanged("WebNameComment");
					this.OnWebNameCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPublishSchedule")]
		public System.Nullable<bool> WebPublishSchedule
		{
			get
			{
				return this._WebPublishSchedule;
			}
			set
			{
				if ((this._WebPublishSchedule != value))
				{
					this.OnWebPublishScheduleChanging(value);
					this.SendPropertyChanging();
					this._WebPublishSchedule = value;
					this.SendPropertyChanged("WebPublishSchedule");
					this.OnWebPublishScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowedHalfCoursePrice")]
		public bool IsAllowedHalfCoursePrice
		{
			get
			{
				return this._IsAllowedHalfCoursePrice;
			}
			set
			{
				if ((this._IsAllowedHalfCoursePrice != value))
				{
					this.OnIsAllowedHalfCoursePriceChanging(value);
					this.SendPropertyChanging();
					this._IsAllowedHalfCoursePrice = value;
					this.SendPropertyChanged("IsAllowedHalfCoursePrice");
					this.OnIsAllowedHalfCoursePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntraExtramuralHours")]
		public decimal IntraExtramuralHours
		{
			get
			{
				return this._IntraExtramuralHours;
			}
			set
			{
				if ((this._IntraExtramuralHours != value))
				{
					this.OnIntraExtramuralHoursChanging(value);
					this.SendPropertyChanging();
					this._IntraExtramuralHours = value;
					this.SendPropertyChanged("IntraExtramuralHours");
					this.OnIntraExtramuralHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntraExtramuralHoursOut")]
		public decimal IntraExtramuralHoursOut
		{
			get
			{
				return this._IntraExtramuralHoursOut;
			}
			set
			{
				if ((this._IntraExtramuralHoursOut != value))
				{
					this.OnIntraExtramuralHoursOutChanging(value);
					this.SendPropertyChanging();
					this._IntraExtramuralHoursOut = value;
					this.SendPropertyChanged("IntraExtramuralHoursOut");
					this.OnIntraExtramuralHoursOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarEduURL")]
		public string WebinarEduURL
		{
			get
			{
				return this._WebinarEduURL;
			}
			set
			{
				if ((this._WebinarEduURL != value))
				{
					this.OnWebinarEduURLChanging(value);
					this.SendPropertyChanging();
					this._WebinarEduURL = value;
					this.SendPropertyChanged("WebinarEduURL");
					this.OnWebinarEduURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotAuthorized")]
		public bool IsNotAuthorized
		{
			get
			{
				return this._IsNotAuthorized;
			}
			set
			{
				if ((this._IsNotAuthorized != value))
				{
					this.OnIsNotAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._IsNotAuthorized = value;
					this.SendPropertyChanged("IsNotAuthorized");
					this.OnIsNotAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTheory")]
		public bool IsTheory
		{
			get
			{
				return this._IsTheory;
			}
			set
			{
				if ((this._IsTheory != value))
				{
					this.OnIsTheoryChanging(value);
					this.SendPropertyChanging();
					this._IsTheory = value;
					this.SendPropertyChanged("IsTheory");
					this.OnIsTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnlimitedTraining")]
		public bool IsUnlimitedTraining
		{
			get
			{
				return this._IsUnlimitedTraining;
			}
			set
			{
				if ((this._IsUnlimitedTraining != value))
				{
					this.OnIsUnlimitedTrainingChanging(value);
					this.SendPropertyChanging();
					this._IsUnlimitedTraining = value;
					this.SendPropertyChanged("IsUnlimitedTraining");
					this.OnIsUnlimitedTrainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountWebinar")]
		public System.Nullable<short> DiscountWebinar
		{
			get
			{
				return this._DiscountWebinar;
			}
			set
			{
				if ((this._DiscountWebinar != value))
				{
					this.OnDiscountWebinarChanging(value);
					this.SendPropertyChanging();
					this._DiscountWebinar = value;
					this.SendPropertyChanged("DiscountWebinar");
					this.OnDiscountWebinarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoomType_ID")]
		public System.Nullable<decimal> ClassRoomType_ID
		{
			get
			{
				return this._ClassRoomType_ID;
			}
			set
			{
				if ((this._ClassRoomType_ID != value))
				{
					this.OnClassRoomType_IDChanging(value);
					this.SendPropertyChanging();
					this._ClassRoomType_ID = value;
					this.SendPropertyChanged("ClassRoomType_ID");
					this.OnClassRoomType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCourse_TC", CanBeNull=false)]
		public string RatingCourse_TC
		{
			get
			{
				return this._RatingCourse_TC;
			}
			set
			{
				if ((this._RatingCourse_TC != value))
				{
					this.OnRatingCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._RatingCourse_TC = value;
					this.SendPropertyChanged("RatingCourse_TC");
					this.OnRatingCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_EmployeesCourse", Storage="_EmployeesCourses", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<EmployeesCourse> EmployeesCourses
		{
			get
			{
				return this._EmployeesCourses;
			}
			set
			{
				this._EmployeesCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseContent", Storage="_tCourseContents", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<CourseContent> CourseContents
		{
			get
			{
				return this._tCourseContents;
			}
			set
			{
				this._tCourseContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Group", Storage="_Groups", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Track", Storage="_CourseTracks", ThisKey="Course_TC", OtherKey="Track_TC")]
		public EntitySet<Track> TrackCourses
		{
			get
			{
				return this._CourseTracks;
			}
			set
			{
				this._CourseTracks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Track1", Storage="_Tracks", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<Track> Tracks
		{
			get
			{
				return this._Tracks;
			}
			set
			{
				this._Tracks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseLanguage", Storage="_CourseLanguages", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<CourseLanguage> CourseLanguages
		{
			get
			{
				return this._CourseLanguages;
			}
			set
			{
				this._CourseLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursePrerequisite", Storage="_CoursePrerequisites", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<CoursePrerequisite> CoursePrerequisites
		{
			get
			{
				return this._CoursePrerequisites;
			}
			set
			{
				this._CoursePrerequisites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursePrerequisite1", Storage="_RequiredPrerequisites", ThisKey="Course_TC", OtherKey="RequiredCourse_TC")]
		public EntitySet<CoursePrerequisite> RequiredPrerequisites
		{
			get
			{
				return this._RequiredPrerequisites;
			}
			set
			{
				this._RequiredPrerequisites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseCategory", Storage="_CourseCategories", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<CourseCategory> CourseCategories
		{
			get
			{
				return this._CourseCategories;
			}
			set
			{
				this._CourseCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_ExamCourse", Storage="_ExamCourses", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<ExamCourse> ExamCourses
		{
			get
			{
				return this._ExamCourses;
			}
			set
			{
				this._ExamCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursesChain", Storage="_CoursesChains", ThisKey="Course_TC", OtherKey="NextCourse_TC")]
		public EntitySet<CoursesChain> CoursesChains
		{
			get
			{
				return this._CoursesChains;
			}
			set
			{
				this._CoursesChains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseCertificate", Storage="_CourseCertificates", ThisKey="Course_TC", OtherKey="Course_TC")]
		public EntitySet<CourseCertificate> CourseCertificates
		{
			get
			{
				return this._CourseCertificates;
			}
			set
			{
				this._CourseCertificates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorizationType_Course", Storage="_AuthorizationType", ThisKey="AuthorizationType_TC", OtherKey="AuthorizationType_TC", IsForeignKey=true)]
		public AuthorizationType AuthorizationType
		{
			get
			{
				return this._AuthorizationType.Entity;
			}
			set
			{
				AuthorizationType previousValue = this._AuthorizationType.Entity;
				if (((previousValue != value) 
							|| (this._AuthorizationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuthorizationType.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._AuthorizationType.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Vendor_TC = value.AuthorizationType_TC;
					}
					else
					{
						this._Vendor_TC = default(string);
					}
					this.SendPropertyChanged("AuthorizationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeesCourses(EmployeesCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_EmployeesCourses(EmployeesCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_tCourseContents(CourseContent entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_tCourseContents(CourseContent entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_CourseTracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.TrackCourse = this;
		}
		
		private void detach_CourseTracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.TrackCourse = null;
		}
		
		private void attach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Tracks(Track entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_CourseLanguages(CourseLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseLanguages(CourseLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_CoursePrerequisites(CoursePrerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CoursePrerequisites(CoursePrerequisite entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_RequiredPrerequisites(CoursePrerequisite entity)
		{
			this.SendPropertyChanging();
			entity.RequiredCourse = this;
		}
		
		private void detach_RequiredPrerequisites(CoursePrerequisite entity)
		{
			this.SendPropertyChanging();
			entity.RequiredCourse = null;
		}
		
		private void attach_CourseCategories(CourseCategory entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseCategories(CourseCategory entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_ExamCourses(ExamCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_ExamCourses(ExamCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_CoursesChains(CoursesChain entity)
		{
			this.SendPropertyChanging();
			entity.NextCourse = this;
		}
		
		private void detach_CoursesChains(CoursesChain entity)
		{
			this.SendPropertyChanging();
			entity.NextCourse = null;
		}
		
		private void attach_CourseCertificates(CourseCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseCertificates(CourseCertificate entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeesCourses")]
	public partial class EmployeesCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _EmployeeCourse_ID;
		
		private string _Employee_TC;
		
		private string _Course_TC;
		
		private System.DateTime _DateFrom;
		
		private System.DateTime _DateTo;
		
		private bool _IsActive;
		
		private System.Nullable<byte> _EmployeeClass;
		
		private string _Notes;
		
		private System.Nullable<bool> _PublishCourse;
		
		private System.Nullable<bool> _PublishSchedule;
		
		private string _BroadcastingURL;
		
		private System.DateTime _LastChangeDate;
		
		private string _WbnRecLogin;
		
		private string _WbnRecPwd;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCourse_IDChanging(decimal value);
    partial void OnEmployeeCourse_IDChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.DateTime value);
    partial void OnDateToChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnEmployeeClassChanging(System.Nullable<byte> value);
    partial void OnEmployeeClassChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPublishCourseChanging(System.Nullable<bool> value);
    partial void OnPublishCourseChanged();
    partial void OnPublishScheduleChanging(System.Nullable<bool> value);
    partial void OnPublishScheduleChanged();
    partial void OnBroadcastingURLChanging(string value);
    partial void OnBroadcastingURLChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnWbnRecLoginChanging(string value);
    partial void OnWbnRecLoginChanged();
    partial void OnWbnRecPwdChanging(string value);
    partial void OnWbnRecPwdChanged();
    #endregion
		
		public EmployeesCourse()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCourse_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal EmployeeCourse_ID
		{
			get
			{
				return this._EmployeeCourse_ID;
			}
			set
			{
				if ((this._EmployeeCourse_ID != value))
				{
					this.OnEmployeeCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCourse_ID = value;
					this.SendPropertyChanged("EmployeeCourse_ID");
					this.OnEmployeeCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeClass", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> EmployeeClass
		{
			get
			{
				return this._EmployeeClass;
			}
			set
			{
				if ((this._EmployeeClass != value))
				{
					this.OnEmployeeClassChanging(value);
					this.SendPropertyChanging();
					this._EmployeeClass = value;
					this.SendPropertyChanged("EmployeeClass");
					this.OnEmployeeClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishCourse", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PublishCourse
		{
			get
			{
				return this._PublishCourse;
			}
			set
			{
				if ((this._PublishCourse != value))
				{
					this.OnPublishCourseChanging(value);
					this.SendPropertyChanging();
					this._PublishCourse = value;
					this.SendPropertyChanged("PublishCourse");
					this.OnPublishCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishSchedule", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PublishSchedule
		{
			get
			{
				return this._PublishSchedule;
			}
			set
			{
				if ((this._PublishSchedule != value))
				{
					this.OnPublishScheduleChanging(value);
					this.SendPropertyChanging();
					this._PublishSchedule = value;
					this.SendPropertyChanged("PublishSchedule");
					this.OnPublishScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BroadcastingURL")]
		public string BroadcastingURL
		{
			get
			{
				return this._BroadcastingURL;
			}
			set
			{
				if ((this._BroadcastingURL != value))
				{
					this.OnBroadcastingURLChanging(value);
					this.SendPropertyChanging();
					this._BroadcastingURL = value;
					this.SendPropertyChanged("BroadcastingURL");
					this.OnBroadcastingURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbnRecLogin")]
		public string WbnRecLogin
		{
			get
			{
				return this._WbnRecLogin;
			}
			set
			{
				if ((this._WbnRecLogin != value))
				{
					this.OnWbnRecLoginChanging(value);
					this.SendPropertyChanging();
					this._WbnRecLogin = value;
					this.SendPropertyChanged("WbnRecLogin");
					this.OnWbnRecLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbnRecPwd", CanBeNull=false)]
		public string WbnRecPwd
		{
			get
			{
				return this._WbnRecPwd;
			}
			set
			{
				if ((this._WbnRecPwd != value))
				{
					this.OnWbnRecPwdChanging(value);
					this.SendPropertyChanging();
					this._WbnRecPwd = value;
					this.SendPropertyChanged("WbnRecPwd");
					this.OnWbnRecPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesCourse", Storage="_Employee", ThisKey="Employee_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeesCourses.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeesCourses.Add(this);
						this._Employee_TC = value.Employee_TC;
					}
					else
					{
						this._Employee_TC = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_EmployeesCourse", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.EmployeesCourses.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.EmployeesCourses.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Employee_ID;
		
		private string _Employee_TC;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _EMail;
		
		private System.Nullable<short> _MaxHoursPerMonth;
		
		private string _EmpGroup_TC;
		
		private System.Nullable<bool> _Probationer;
		
		private bool _IsStaffer;
		
		private string _SiteDescription;
		
		private bool _SiteVisible;
		
		private string _Notes;
		
		private string _LastNameEN;
		
		private string _FirstNameEN;
		
		private EntitySet<EmployeesCourse> _EmployeesCourses;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<Complex> _Complexes;
		
		private EntitySet<StudentInGroup> _StudentInGroups;
		
		private EntitySet<QuestionnaireTeachersMark> _QuestionnaireTeachersMarks;
		
		private EntitySet<EmployeeContact> _EmployeeContacts;
		
		private EntitySet<EmployeeCertification> _EmployeeCertifications;
		
		private EntityRef<EmpGroup> _EmpGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_IDChanging(decimal value);
    partial void OnEmployee_IDChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnMaxHoursPerMonthChanging(System.Nullable<short> value);
    partial void OnMaxHoursPerMonthChanged();
    partial void OnEmpGroup_TCChanging(string value);
    partial void OnEmpGroup_TCChanged();
    partial void OnProbationerChanging(System.Nullable<bool> value);
    partial void OnProbationerChanged();
    partial void OnIsStafferChanging(bool value);
    partial void OnIsStafferChanged();
    partial void OnSiteDescriptionChanging(string value);
    partial void OnSiteDescriptionChanged();
    partial void OnSiteVisibleChanging(bool value);
    partial void OnSiteVisibleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnLastNameENChanging(string value);
    partial void OnLastNameENChanged();
    partial void OnFirstNameENChanging(string value);
    partial void OnFirstNameENChanged();
    #endregion
		
		public Employee()
		{
			this._EmployeesCourses = new EntitySet<EmployeesCourse>(new Action<EmployeesCourse>(this.attach_EmployeesCourses), new Action<EmployeesCourse>(this.detach_EmployeesCourses));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._Complexes = new EntitySet<Complex>(new Action<Complex>(this.attach_Complexes), new Action<Complex>(this.detach_Complexes));
			this._StudentInGroups = new EntitySet<StudentInGroup>(new Action<StudentInGroup>(this.attach_StudentInGroups), new Action<StudentInGroup>(this.detach_StudentInGroups));
			this._QuestionnaireTeachersMarks = new EntitySet<QuestionnaireTeachersMark>(new Action<QuestionnaireTeachersMark>(this.attach_QuestionnaireTeachersMarks), new Action<QuestionnaireTeachersMark>(this.detach_QuestionnaireTeachersMarks));
			this._EmployeeContacts = new EntitySet<EmployeeContact>(new Action<EmployeeContact>(this.attach_EmployeeContacts), new Action<EmployeeContact>(this.detach_EmployeeContacts));
			this._EmployeeCertifications = new EntitySet<EmployeeCertification>(new Action<EmployeeCertification>(this.attach_EmployeeCertifications), new Action<EmployeeCertification>(this.detach_EmployeeCertifications));
			this._EmpGroup = default(EntityRef<EmpGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Employee_ID
		{
			get
			{
				return this._Employee_ID;
			}
			set
			{
				if ((this._Employee_ID != value))
				{
					this.OnEmployee_IDChanging(value);
					this.SendPropertyChanging();
					this._Employee_ID = value;
					this.SendPropertyChanged("Employee_ID");
					this.OnEmployee_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHoursPerMonth", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MaxHoursPerMonth
		{
			get
			{
				return this._MaxHoursPerMonth;
			}
			set
			{
				if ((this._MaxHoursPerMonth != value))
				{
					this.OnMaxHoursPerMonthChanging(value);
					this.SendPropertyChanging();
					this._MaxHoursPerMonth = value;
					this.SendPropertyChanged("MaxHoursPerMonth");
					this.OnMaxHoursPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGroup_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string EmpGroup_TC
		{
			get
			{
				return this._EmpGroup_TC;
			}
			set
			{
				if ((this._EmpGroup_TC != value))
				{
					if (this._EmpGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpGroup_TCChanging(value);
					this.SendPropertyChanging();
					this._EmpGroup_TC = value;
					this.SendPropertyChanged("EmpGroup_TC");
					this.OnEmpGroup_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probationer", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Probationer
		{
			get
			{
				return this._Probationer;
			}
			set
			{
				if ((this._Probationer != value))
				{
					this.OnProbationerChanging(value);
					this.SendPropertyChanging();
					this._Probationer = value;
					this.SendPropertyChanged("Probationer");
					this.OnProbationerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStaffer", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsStaffer
		{
			get
			{
				return this._IsStaffer;
			}
			set
			{
				if ((this._IsStaffer != value))
				{
					this.OnIsStafferChanging(value);
					this.SendPropertyChanging();
					this._IsStaffer = value;
					this.SendPropertyChanged("IsStaffer");
					this.OnIsStafferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteDescription", DbType="VarChar(Max)", UpdateCheck=UpdateCheck.Never)]
		public string SiteDescription
		{
			get
			{
				return this._SiteDescription;
			}
			set
			{
				if ((this._SiteDescription != value))
				{
					this.OnSiteDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SiteDescription = value;
					this.SendPropertyChanged("SiteDescription");
					this.OnSiteDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteVisible", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SiteVisible
		{
			get
			{
				return this._SiteVisible;
			}
			set
			{
				if ((this._SiteVisible != value))
				{
					this.OnSiteVisibleChanging(value);
					this.SendPropertyChanging();
					this._SiteVisible = value;
					this.SendPropertyChanged("SiteVisible");
					this.OnSiteVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameEN")]
		public string LastNameEN
		{
			get
			{
				return this._LastNameEN;
			}
			set
			{
				if ((this._LastNameEN != value))
				{
					this.OnLastNameENChanging(value);
					this.SendPropertyChanging();
					this._LastNameEN = value;
					this.SendPropertyChanged("LastNameEN");
					this.OnLastNameENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameEN", CanBeNull=false)]
		public string FirstNameEN
		{
			get
			{
				return this._FirstNameEN;
			}
			set
			{
				if ((this._FirstNameEN != value))
				{
					this.OnFirstNameENChanging(value);
					this.SendPropertyChanging();
					this._FirstNameEN = value;
					this.SendPropertyChanged("FirstNameEN");
					this.OnFirstNameENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeesCourse", Storage="_EmployeesCourses", ThisKey="Employee_TC", OtherKey="Employee_TC")]
		public EntitySet<EmployeesCourse> EmployeesCourses
		{
			get
			{
				return this._EmployeesCourses;
			}
			set
			{
				this._EmployeesCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Group", Storage="_Groups", ThisKey="Employee_TC", OtherKey="Teacher_TC")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Complex", Storage="_Complexes", ThisKey="Employee_TC", OtherKey="Admin_TC")]
		public EntitySet<Complex> Complexes
		{
			get
			{
				return this._Complexes;
			}
			set
			{
				this._Complexes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_StudentInGroup", Storage="_StudentInGroups", ThisKey="Employee_TC", OtherKey="Consultant_TC")]
		public EntitySet<StudentInGroup> StudentInGroups
		{
			get
			{
				return this._StudentInGroups;
			}
			set
			{
				this._StudentInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_QuestionnaireTeachersMark", Storage="_QuestionnaireTeachersMarks", ThisKey="Employee_TC", OtherKey="Teacher_TC")]
		public EntitySet<QuestionnaireTeachersMark> QuestionnaireTeachersMarks
		{
			get
			{
				return this._QuestionnaireTeachersMarks;
			}
			set
			{
				this._QuestionnaireTeachersMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeContact", Storage="_EmployeeContacts", ThisKey="Employee_TC", OtherKey="EmployeeFK_TC")]
		public EntitySet<EmployeeContact> EmployeeContacts
		{
			get
			{
				return this._EmployeeContacts;
			}
			set
			{
				this._EmployeeContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeCertification", Storage="_EmployeeCertifications", ThisKey="Employee_TC", OtherKey="EmployeeFK_TC")]
		public EntitySet<EmployeeCertification> EmployeeCertifications
		{
			get
			{
				return this._EmployeeCertifications;
			}
			set
			{
				this._EmployeeCertifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpGroup_Employee", Storage="_EmpGroup", ThisKey="EmpGroup_TC", OtherKey="EmpGroup_TC", IsForeignKey=true)]
		public EmpGroup EmpGroup
		{
			get
			{
				return this._EmpGroup.Entity;
			}
			set
			{
				EmpGroup previousValue = this._EmpGroup.Entity;
				if (((previousValue != value) 
							|| (this._EmpGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpGroup.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmpGroup.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EmpGroup_TC = value.EmpGroup_TC;
					}
					else
					{
						this._EmpGroup_TC = default(string);
					}
					this.SendPropertyChanged("EmpGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeesCourses(EmployeesCourse entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeesCourses(EmployeesCourse entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_Complexes(Complex entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Complexes(Complex entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = this;
		}
		
		private void detach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Consultant = null;
		}
		
		private void attach_QuestionnaireTeachersMarks(QuestionnaireTeachersMark entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_QuestionnaireTeachersMarks(QuestionnaireTeachersMark entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_EmployeeContacts(EmployeeContact entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeContacts(EmployeeContact entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeCertifications(EmployeeCertification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeCertifications(EmployeeCertification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseContent")]
	public partial class CourseContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseContent_ID;
		
		private string _Course_TC;
		
		private int _ModuleNumber;
		
		private string _ModuleName;
		
		private decimal _Hours;
		
		private decimal _NumOfLessons;
		
		private string _ModuleDescription;
		
		private string _Labs;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseContent_IDChanging(decimal value);
    partial void OnCourseContent_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnModuleNumberChanging(int value);
    partial void OnModuleNumberChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnHoursChanging(decimal value);
    partial void OnHoursChanged();
    partial void OnNumOfLessonsChanging(decimal value);
    partial void OnNumOfLessonsChanged();
    partial void OnModuleDescriptionChanging(string value);
    partial void OnModuleDescriptionChanged();
    partial void OnLabsChanging(string value);
    partial void OnLabsChanged();
    #endregion
		
		public CourseContent()
		{
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseContent_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CourseContent_ID
		{
			get
			{
				return this._CourseContent_ID;
			}
			set
			{
				if ((this._CourseContent_ID != value))
				{
					this.OnCourseContent_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseContent_ID = value;
					this.SendPropertyChanged("CourseContent_ID");
					this.OnCourseContent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ModuleNumber
		{
			get
			{
				return this._ModuleNumber;
			}
			set
			{
				if ((this._ModuleNumber != value))
				{
					this.OnModuleNumberChanging(value);
					this.SendPropertyChanging();
					this._ModuleNumber = value;
					this.SendPropertyChanged("ModuleNumber");
					this.OnModuleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="VarChar(300) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfLessons", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal NumOfLessons
		{
			get
			{
				return this._NumOfLessons;
			}
			set
			{
				if ((this._NumOfLessons != value))
				{
					this.OnNumOfLessonsChanging(value);
					this.SendPropertyChanging();
					this._NumOfLessons = value;
					this.SendPropertyChanged("NumOfLessons");
					this.OnNumOfLessonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDescription", DbType="VarChar(7000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ModuleDescription
		{
			get
			{
				return this._ModuleDescription;
			}
			set
			{
				if ((this._ModuleDescription != value))
				{
					this.OnModuleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ModuleDescription = value;
					this.SendPropertyChanged("ModuleDescription");
					this.OnModuleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Labs", DbType="VarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Labs
		{
			get
			{
				return this._Labs;
			}
			set
			{
				if ((this._Labs != value))
				{
					this.OnLabsChanging(value);
					this.SendPropertyChanging();
					this._Labs = value;
					this.SendPropertyChanged("Labs");
					this.OnLabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseContent", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseContents.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseContents.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tGroups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Group_ID;
		
		private char _Color_TC;
		
		private string _BranchOffice_TC;
		
		private string _Complex_TC;
		
		private string _Course_TC;
		
		private string _LectureType_TC;
		
		private string _DayShift_TC;
		
		private System.Nullable<System.DateTime> _DateBeg;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<System.DateTime> _TimeBeg;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<System.DateTime> _DistDateBeg;
		
		private System.Nullable<System.DateTime> _DistDateEnd;
		
		private System.Nullable<System.DateTime> _LiteratureSent;
		
		private System.Nullable<System.DateTime> _LoginPasswordSent;
		
		private string _Teacher_TC;
		
		private string _ClassRoom_TC;
		
		private bool _IsEmploymentCenter;
		
		private bool _ForOvertaking;
		
		private bool _SupportingGroup;
		
		private bool _IsBlazing;
		
		private bool _TeacherIsInformed;
		
		private bool _GroupIsInformed;
		
		private decimal _Hours;
		
		private decimal _HoursAdditional;
		
		private System.Nullable<decimal> _HoursGiven;
		
		private short _NumOfStudents;
		
		private short _MaxNumOfStudents;
		
		private string _DaySequence;
		
		private string _DaySequence_TC;
		
		private string _Notes;
		
		private decimal _Sequence_ID;
		
		private string _ForUpdate;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private System.Nullable<decimal> _BaseGroup_ID;
		
		private string _Curator_TC;
		
		private bool _PrintAnnounce;
		
		private bool _WebinarExists;
		
		private System.Nullable<short> _Discount;
		
		private bool _ForWebinarOnly;
		
		private System.Nullable<decimal> _MegaGroup_ID;
		
		private string _WebinarRecordURL;
		
		private bool _IsFirstTeachersGroup;
		
		private System.Nullable<short> _MaxNumOfWebinarists;
		
		private bool _IsIntraExtramural;
		
		private string _WbnRecLogin;
		
		private string _WbnRecPwd;
		
		private string _UrlName;
		
		private EntitySet<StudentInGroup> _StudentInGroups;
		
		private EntitySet<Lecture> _Lectures;
		
		private EntityRef<DayShift> _DayShift;
		
		private EntityRef<Employee> _Teacher;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<BranchOffice> _BranchOffice;
		
		private EntityRef<Complex> _Complex;
		
		private EntityRef<GroupsCalc> _GroupCalc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnColor_TCChanging(char value);
    partial void OnColor_TCChanged();
    partial void OnBranchOffice_TCChanging(string value);
    partial void OnBranchOffice_TCChanged();
    partial void OnComplex_TCChanging(string value);
    partial void OnComplex_TCChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnLectureType_TCChanging(string value);
    partial void OnLectureType_TCChanged();
    partial void OnDayShift_TCChanging(string value);
    partial void OnDayShift_TCChanged();
    partial void OnDateBegChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBegChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnTimeBegChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeBegChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnDistDateBegChanging(System.Nullable<System.DateTime> value);
    partial void OnDistDateBegChanged();
    partial void OnDistDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDistDateEndChanged();
    partial void OnLiteratureSentChanging(System.Nullable<System.DateTime> value);
    partial void OnLiteratureSentChanged();
    partial void OnLoginPasswordSentChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginPasswordSentChanged();
    partial void OnTeacher_TCChanging(string value);
    partial void OnTeacher_TCChanged();
    partial void OnClassRoom_TCChanging(string value);
    partial void OnClassRoom_TCChanged();
    partial void OnIsEmploymentCenterChanging(bool value);
    partial void OnIsEmploymentCenterChanged();
    partial void OnForOvertakingChanging(bool value);
    partial void OnForOvertakingChanged();
    partial void OnSupportingGroupChanging(bool value);
    partial void OnSupportingGroupChanged();
    partial void OnIsBlazingChanging(bool value);
    partial void OnIsBlazingChanged();
    partial void OnTeacherIsInformedChanging(bool value);
    partial void OnTeacherIsInformedChanged();
    partial void OnGroupIsInformedChanging(bool value);
    partial void OnGroupIsInformedChanged();
    partial void OnHoursChanging(decimal value);
    partial void OnHoursChanged();
    partial void OnHoursAdditionalChanging(decimal value);
    partial void OnHoursAdditionalChanged();
    partial void OnHoursGivenChanging(System.Nullable<decimal> value);
    partial void OnHoursGivenChanged();
    partial void OnNumOfStudentsChanging(short value);
    partial void OnNumOfStudentsChanged();
    partial void OnMaxNumOfStudentsChanging(short value);
    partial void OnMaxNumOfStudentsChanged();
    partial void OnDaySequenceChanging(string value);
    partial void OnDaySequenceChanged();
    partial void OnDaySequence_TCChanging(string value);
    partial void OnDaySequence_TCChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSequence_IDChanging(decimal value);
    partial void OnSequence_IDChanged();
    partial void OnForUpdateChanging(string value);
    partial void OnForUpdateChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnBaseGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnBaseGroup_IDChanged();
    partial void OnCurator_TCChanging(string value);
    partial void OnCurator_TCChanged();
    partial void OnPrintAnnounceChanging(bool value);
    partial void OnPrintAnnounceChanged();
    partial void OnWebinarExistsChanging(bool value);
    partial void OnWebinarExistsChanged();
    partial void OnDiscountChanging(System.Nullable<short> value);
    partial void OnDiscountChanged();
    partial void OnForWebinarOnlyChanging(bool value);
    partial void OnForWebinarOnlyChanged();
    partial void OnMegaGroup_IDChanging(System.Nullable<decimal> value);
    partial void OnMegaGroup_IDChanged();
    partial void OnWebinarRecordURLChanging(string value);
    partial void OnWebinarRecordURLChanged();
    partial void OnIsFirstTeachersGroupChanging(bool value);
    partial void OnIsFirstTeachersGroupChanged();
    partial void OnMaxNumOfWebinaristsChanging(System.Nullable<short> value);
    partial void OnMaxNumOfWebinaristsChanged();
    partial void OnIsIntraExtramuralChanging(bool value);
    partial void OnIsIntraExtramuralChanged();
    partial void OnWbnRecLoginChanging(string value);
    partial void OnWbnRecLoginChanged();
    partial void OnWbnRecPwdChanging(string value);
    partial void OnWbnRecPwdChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    #endregion
		
		public Group()
		{
			this._StudentInGroups = new EntitySet<StudentInGroup>(new Action<StudentInGroup>(this.attach_StudentInGroups), new Action<StudentInGroup>(this.detach_StudentInGroups));
			this._Lectures = new EntitySet<Lecture>(new Action<Lecture>(this.attach_Lectures), new Action<Lecture>(this.detach_Lectures));
			this._DayShift = default(EntityRef<DayShift>);
			this._Teacher = default(EntityRef<Employee>);
			this._Course = default(EntityRef<Course>);
			this._BranchOffice = default(EntityRef<BranchOffice>);
			this._Complex = default(EntityRef<Complex>);
			this._GroupCalc = default(EntityRef<GroupsCalc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					if (this._GroupCalc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color_TC", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Color_TC
		{
			get
			{
				return this._Color_TC;
			}
			set
			{
				if ((this._Color_TC != value))
				{
					this.OnColor_TCChanging(value);
					this.SendPropertyChanging();
					this._Color_TC = value;
					this.SendPropertyChanged("Color_TC");
					this.OnColor_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchOffice_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BranchOffice_TC
		{
			get
			{
				return this._BranchOffice_TC;
			}
			set
			{
				if ((this._BranchOffice_TC != value))
				{
					if (this._BranchOffice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchOffice_TCChanging(value);
					this.SendPropertyChanging();
					this._BranchOffice_TC = value;
					this.SendPropertyChanged("BranchOffice_TC");
					this.OnBranchOffice_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_TC", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Complex_TC
		{
			get
			{
				return this._Complex_TC;
			}
			set
			{
				if ((this._Complex_TC != value))
				{
					if (this._Complex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComplex_TCChanging(value);
					this.SendPropertyChanging();
					this._Complex_TC = value;
					this.SendPropertyChanged("Complex_TC");
					this.OnComplex_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LectureType_TC", DbType="VarChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LectureType_TC
		{
			get
			{
				return this._LectureType_TC;
			}
			set
			{
				if ((this._LectureType_TC != value))
				{
					this.OnLectureType_TCChanging(value);
					this.SendPropertyChanging();
					this._LectureType_TC = value;
					this.SendPropertyChanged("LectureType_TC");
					this.OnLectureType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayShift_TC", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string DayShift_TC
		{
			get
			{
				return this._DayShift_TC;
			}
			set
			{
				if ((this._DayShift_TC != value))
				{
					if (this._DayShift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayShift_TCChanging(value);
					this.SendPropertyChanging();
					this._DayShift_TC = value;
					this.SendPropertyChanged("DayShift_TC");
					this.OnDayShift_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBeg", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateBeg
		{
			get
			{
				return this._DateBeg;
			}
			set
			{
				if ((this._DateBeg != value))
				{
					this.OnDateBegChanging(value);
					this.SendPropertyChanging();
					this._DateBeg = value;
					this.SendPropertyChanged("DateBeg");
					this.OnDateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBeg", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TimeBeg
		{
			get
			{
				return this._TimeBeg;
			}
			set
			{
				if ((this._TimeBeg != value))
				{
					this.OnTimeBegChanging(value);
					this.SendPropertyChanging();
					this._TimeBeg = value;
					this.SendPropertyChanged("TimeBeg");
					this.OnTimeBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistDateBeg", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DistDateBeg
		{
			get
			{
				return this._DistDateBeg;
			}
			set
			{
				if ((this._DistDateBeg != value))
				{
					this.OnDistDateBegChanging(value);
					this.SendPropertyChanging();
					this._DistDateBeg = value;
					this.SendPropertyChanged("DistDateBeg");
					this.OnDistDateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistDateEnd", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DistDateEnd
		{
			get
			{
				return this._DistDateEnd;
			}
			set
			{
				if ((this._DistDateEnd != value))
				{
					this.OnDistDateEndChanging(value);
					this.SendPropertyChanging();
					this._DistDateEnd = value;
					this.SendPropertyChanged("DistDateEnd");
					this.OnDistDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiteratureSent", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LiteratureSent
		{
			get
			{
				return this._LiteratureSent;
			}
			set
			{
				if ((this._LiteratureSent != value))
				{
					this.OnLiteratureSentChanging(value);
					this.SendPropertyChanging();
					this._LiteratureSent = value;
					this.SendPropertyChanged("LiteratureSent");
					this.OnLiteratureSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPasswordSent", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LoginPasswordSent
		{
			get
			{
				return this._LoginPasswordSent;
			}
			set
			{
				if ((this._LoginPasswordSent != value))
				{
					this.OnLoginPasswordSentChanging(value);
					this.SendPropertyChanging();
					this._LoginPasswordSent = value;
					this.SendPropertyChanged("LoginPasswordSent");
					this.OnLoginPasswordSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Teacher_TC
		{
			get
			{
				return this._Teacher_TC;
			}
			set
			{
				if ((this._Teacher_TC != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacher_TCChanging(value);
					this.SendPropertyChanging();
					this._Teacher_TC = value;
					this.SendPropertyChanged("Teacher_TC");
					this.OnTeacher_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_TC", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string ClassRoom_TC
		{
			get
			{
				return this._ClassRoom_TC;
			}
			set
			{
				if ((this._ClassRoom_TC != value))
				{
					this.OnClassRoom_TCChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_TC = value;
					this.SendPropertyChanged("ClassRoom_TC");
					this.OnClassRoom_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmploymentCenter", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsEmploymentCenter
		{
			get
			{
				return this._IsEmploymentCenter;
			}
			set
			{
				if ((this._IsEmploymentCenter != value))
				{
					this.OnIsEmploymentCenterChanging(value);
					this.SendPropertyChanging();
					this._IsEmploymentCenter = value;
					this.SendPropertyChanged("IsEmploymentCenter");
					this.OnIsEmploymentCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForOvertaking", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ForOvertaking
		{
			get
			{
				return this._ForOvertaking;
			}
			set
			{
				if ((this._ForOvertaking != value))
				{
					this.OnForOvertakingChanging(value);
					this.SendPropertyChanging();
					this._ForOvertaking = value;
					this.SendPropertyChanged("ForOvertaking");
					this.OnForOvertakingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportingGroup", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SupportingGroup
		{
			get
			{
				return this._SupportingGroup;
			}
			set
			{
				if ((this._SupportingGroup != value))
				{
					this.OnSupportingGroupChanging(value);
					this.SendPropertyChanging();
					this._SupportingGroup = value;
					this.SendPropertyChanged("SupportingGroup");
					this.OnSupportingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlazing", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsBlazing
		{
			get
			{
				return this._IsBlazing;
			}
			set
			{
				if ((this._IsBlazing != value))
				{
					this.OnIsBlazingChanging(value);
					this.SendPropertyChanging();
					this._IsBlazing = value;
					this.SendPropertyChanged("IsBlazing");
					this.OnIsBlazingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherIsInformed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TeacherIsInformed
		{
			get
			{
				return this._TeacherIsInformed;
			}
			set
			{
				if ((this._TeacherIsInformed != value))
				{
					this.OnTeacherIsInformedChanging(value);
					this.SendPropertyChanging();
					this._TeacherIsInformed = value;
					this.SendPropertyChanged("TeacherIsInformed");
					this.OnTeacherIsInformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIsInformed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GroupIsInformed
		{
			get
			{
				return this._GroupIsInformed;
			}
			set
			{
				if ((this._GroupIsInformed != value))
				{
					this.OnGroupIsInformedChanging(value);
					this.SendPropertyChanging();
					this._GroupIsInformed = value;
					this.SendPropertyChanged("GroupIsInformed");
					this.OnGroupIsInformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Decimal(5,1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursAdditional", DbType="Decimal(5,1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal HoursAdditional
		{
			get
			{
				return this._HoursAdditional;
			}
			set
			{
				if ((this._HoursAdditional != value))
				{
					this.OnHoursAdditionalChanging(value);
					this.SendPropertyChanging();
					this._HoursAdditional = value;
					this.SendPropertyChanged("HoursAdditional");
					this.OnHoursAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursGiven", DbType="Decimal(5,1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HoursGiven
		{
			get
			{
				return this._HoursGiven;
			}
			set
			{
				if ((this._HoursGiven != value))
				{
					this.OnHoursGivenChanging(value);
					this.SendPropertyChanging();
					this._HoursGiven = value;
					this.SendPropertyChanged("HoursGiven");
					this.OnHoursGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfStudents", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NumOfStudents
		{
			get
			{
				return this._NumOfStudents;
			}
			set
			{
				if ((this._NumOfStudents != value))
				{
					this.OnNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._NumOfStudents = value;
					this.SendPropertyChanged("NumOfStudents");
					this.OnNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumOfStudents", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MaxNumOfStudents
		{
			get
			{
				return this._MaxNumOfStudents;
			}
			set
			{
				if ((this._MaxNumOfStudents != value))
				{
					this.OnMaxNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._MaxNumOfStudents = value;
					this.SendPropertyChanged("MaxNumOfStudents");
					this.OnMaxNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySequence", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string DaySequence
		{
			get
			{
				return this._DaySequence;
			}
			set
			{
				if ((this._DaySequence != value))
				{
					this.OnDaySequenceChanging(value);
					this.SendPropertyChanging();
					this._DaySequence = value;
					this.SendPropertyChanged("DaySequence");
					this.OnDaySequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySequence_TC", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string DaySequence_TC
		{
			get
			{
				return this._DaySequence_TC;
			}
			set
			{
				if ((this._DaySequence_TC != value))
				{
					this.OnDaySequence_TCChanging(value);
					this.SendPropertyChanging();
					this._DaySequence_TC = value;
					this.SendPropertyChanged("DaySequence_TC");
					this.OnDaySequence_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(3000)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence_ID", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Sequence_ID
		{
			get
			{
				return this._Sequence_ID;
			}
			set
			{
				if ((this._Sequence_ID != value))
				{
					this.OnSequence_IDChanging(value);
					this.SendPropertyChanging();
					this._Sequence_ID = value;
					this.SendPropertyChanged("Sequence_ID");
					this.OnSequence_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForUpdate", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string ForUpdate
		{
			get
			{
				return this._ForUpdate;
			}
			set
			{
				if ((this._ForUpdate != value))
				{
					this.OnForUpdateChanging(value);
					this.SendPropertyChanging();
					this._ForUpdate = value;
					this.SendPropertyChanged("ForUpdate");
					this.OnForUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseGroup_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BaseGroup_ID
		{
			get
			{
				return this._BaseGroup_ID;
			}
			set
			{
				if ((this._BaseGroup_ID != value))
				{
					this.OnBaseGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._BaseGroup_ID = value;
					this.SendPropertyChanged("BaseGroup_ID");
					this.OnBaseGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Curator_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Curator_TC
		{
			get
			{
				return this._Curator_TC;
			}
			set
			{
				if ((this._Curator_TC != value))
				{
					this.OnCurator_TCChanging(value);
					this.SendPropertyChanging();
					this._Curator_TC = value;
					this.SendPropertyChanged("Curator_TC");
					this.OnCurator_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintAnnounce", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintAnnounce
		{
			get
			{
				return this._PrintAnnounce;
			}
			set
			{
				if ((this._PrintAnnounce != value))
				{
					this.OnPrintAnnounceChanging(value);
					this.SendPropertyChanging();
					this._PrintAnnounce = value;
					this.SendPropertyChanged("PrintAnnounce");
					this.OnPrintAnnounceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarExists", DbType="Bit")]
		public bool WebinarExists
		{
			get
			{
				return this._WebinarExists;
			}
			set
			{
				if ((this._WebinarExists != value))
				{
					this.OnWebinarExistsChanging(value);
					this.SendPropertyChanging();
					this._WebinarExists = value;
					this.SendPropertyChanged("WebinarExists");
					this.OnWebinarExistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForWebinarOnly", UpdateCheck=UpdateCheck.Never)]
		public bool ForWebinarOnly
		{
			get
			{
				return this._ForWebinarOnly;
			}
			set
			{
				if ((this._ForWebinarOnly != value))
				{
					this.OnForWebinarOnlyChanging(value);
					this.SendPropertyChanging();
					this._ForWebinarOnly = value;
					this.SendPropertyChanged("ForWebinarOnly");
					this.OnForWebinarOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MegaGroup_ID")]
		public System.Nullable<decimal> MegaGroup_ID
		{
			get
			{
				return this._MegaGroup_ID;
			}
			set
			{
				if ((this._MegaGroup_ID != value))
				{
					this.OnMegaGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._MegaGroup_ID = value;
					this.SendPropertyChanged("MegaGroup_ID");
					this.OnMegaGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarRecordURL")]
		public string WebinarRecordURL
		{
			get
			{
				return this._WebinarRecordURL;
			}
			set
			{
				if ((this._WebinarRecordURL != value))
				{
					this.OnWebinarRecordURLChanging(value);
					this.SendPropertyChanging();
					this._WebinarRecordURL = value;
					this.SendPropertyChanged("WebinarRecordURL");
					this.OnWebinarRecordURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirstTeachersGroup")]
		public bool IsFirstTeachersGroup
		{
			get
			{
				return this._IsFirstTeachersGroup;
			}
			set
			{
				if ((this._IsFirstTeachersGroup != value))
				{
					this.OnIsFirstTeachersGroupChanging(value);
					this.SendPropertyChanging();
					this._IsFirstTeachersGroup = value;
					this.SendPropertyChanged("IsFirstTeachersGroup");
					this.OnIsFirstTeachersGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumOfWebinarists")]
		public System.Nullable<short> MaxNumOfWebinarists
		{
			get
			{
				return this._MaxNumOfWebinarists;
			}
			set
			{
				if ((this._MaxNumOfWebinarists != value))
				{
					this.OnMaxNumOfWebinaristsChanging(value);
					this.SendPropertyChanging();
					this._MaxNumOfWebinarists = value;
					this.SendPropertyChanged("MaxNumOfWebinarists");
					this.OnMaxNumOfWebinaristsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIntraExtramural")]
		public bool IsIntraExtramural
		{
			get
			{
				return this._IsIntraExtramural;
			}
			set
			{
				if ((this._IsIntraExtramural != value))
				{
					this.OnIsIntraExtramuralChanging(value);
					this.SendPropertyChanging();
					this._IsIntraExtramural = value;
					this.SendPropertyChanged("IsIntraExtramural");
					this.OnIsIntraExtramuralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbnRecLogin")]
		public string WbnRecLogin
		{
			get
			{
				return this._WbnRecLogin;
			}
			set
			{
				if ((this._WbnRecLogin != value))
				{
					this.OnWbnRecLoginChanging(value);
					this.SendPropertyChanging();
					this._WbnRecLogin = value;
					this.SendPropertyChanged("WbnRecLogin");
					this.OnWbnRecLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbnRecPwd", CanBeNull=false)]
		public string WbnRecPwd
		{
			get
			{
				return this._WbnRecPwd;
			}
			set
			{
				if ((this._WbnRecPwd != value))
				{
					this.OnWbnRecPwdChanging(value);
					this.SendPropertyChanging();
					this._WbnRecPwd = value;
					this.SendPropertyChanged("WbnRecPwd");
					this.OnWbnRecPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName")]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_StudentInGroup", Storage="_StudentInGroups", ThisKey="Group_ID", OtherKey="Group_ID")]
		public EntitySet<StudentInGroup> StudentInGroups
		{
			get
			{
				return this._StudentInGroups;
			}
			set
			{
				this._StudentInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Lecture", Storage="_Lectures", ThisKey="Group_ID", OtherKey="Group_ID")]
		public EntitySet<Lecture> Lectures
		{
			get
			{
				return this._Lectures;
			}
			set
			{
				this._Lectures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayShift_Group", Storage="_DayShift", ThisKey="DayShift_TC", OtherKey="DayShift_TC", IsForeignKey=true)]
		public DayShift DayShift
		{
			get
			{
				return this._DayShift.Entity;
			}
			set
			{
				DayShift previousValue = this._DayShift.Entity;
				if (((previousValue != value) 
							|| (this._DayShift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayShift.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._DayShift.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._DayShift_TC = value.DayShift_TC;
					}
					else
					{
						this._DayShift_TC = default(string);
					}
					this.SendPropertyChanged("DayShift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Group", Storage="_Teacher", ThisKey="Teacher_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Employee previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._Teacher_TC = value.Employee_TC;
					}
					else
					{
						this._Teacher_TC = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Group", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchOffice_Group", Storage="_BranchOffice", ThisKey="BranchOffice_TC", OtherKey="BranchOffice_TC", IsForeignKey=true)]
		public BranchOffice BranchOffice
		{
			get
			{
				return this._BranchOffice.Entity;
			}
			set
			{
				BranchOffice previousValue = this._BranchOffice.Entity;
				if (((previousValue != value) 
							|| (this._BranchOffice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchOffice.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._BranchOffice.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._BranchOffice_TC = value.BranchOffice_TC;
					}
					else
					{
						this._BranchOffice_TC = default(string);
					}
					this.SendPropertyChanged("BranchOffice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Complex_Group", Storage="_Complex", ThisKey="Complex_TC", OtherKey="Complex_TC", IsForeignKey=true)]
		public Complex Complex
		{
			get
			{
				return this._Complex.Entity;
			}
			set
			{
				Complex previousValue = this._Complex.Entity;
				if (((previousValue != value) 
							|| (this._Complex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Complex.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Complex.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._Complex_TC = value.Complex_TC;
					}
					else
					{
						this._Complex_TC = default(string);
					}
					this.SendPropertyChanged("Complex");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupsCalc_Group", Storage="_GroupCalc", ThisKey="Group_ID", OtherKey="Group_ID", IsForeignKey=true)]
		public GroupsCalc GroupCalc
		{
			get
			{
				return this._GroupCalc.Entity;
			}
			set
			{
				GroupsCalc previousValue = this._GroupCalc.Entity;
				if (((previousValue != value) 
							|| (this._GroupCalc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupCalc.Entity = null;
						previousValue.Group = null;
					}
					this._GroupCalc.Entity = value;
					if ((value != null))
					{
						value.Group = this;
						this._Group_ID = value.Group_ID;
					}
					else
					{
						this._Group_ID = default(decimal);
					}
					this.SendPropertyChanged("GroupCalc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTracks")]
	public partial class Track : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Track_ID;
		
		private string _Track_TC;
		
		private string _Course_TC;
		
		private string _CourseAltName;
		
		private string _Notes;
		
		private byte _SortOrder;
		
		private bool _IseLearning;
		
		private string _PriceType_TC;
		
		private System.Nullable<byte> _StudyMonths;
		
		private decimal _PriceWeight;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Course> _TrackCourse;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrack_IDChanging(decimal value);
    partial void OnTrack_IDChanged();
    partial void OnTrack_TCChanging(string value);
    partial void OnTrack_TCChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnCourseAltNameChanging(string value);
    partial void OnCourseAltNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortOrderChanging(byte value);
    partial void OnSortOrderChanged();
    partial void OnIseLearningChanging(bool value);
    partial void OnIseLearningChanged();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    partial void OnStudyMonthsChanging(System.Nullable<byte> value);
    partial void OnStudyMonthsChanged();
    partial void OnPriceWeightChanging(decimal value);
    partial void OnPriceWeightChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public Track()
		{
			this._TrackCourse = default(EntityRef<Course>);
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Track_ID
		{
			get
			{
				return this._Track_ID;
			}
			set
			{
				if ((this._Track_ID != value))
				{
					this.OnTrack_IDChanging(value);
					this.SendPropertyChanging();
					this._Track_ID = value;
					this.SendPropertyChanged("Track_ID");
					this.OnTrack_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Track_TC
		{
			get
			{
				return this._Track_TC;
			}
			set
			{
				if ((this._Track_TC != value))
				{
					if (this._TrackCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrack_TCChanging(value);
					this.SendPropertyChanging();
					this._Track_TC = value;
					this.SendPropertyChanged("Track_TC");
					this.OnTrack_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseAltName", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string CourseAltName
		{
			get
			{
				return this._CourseAltName;
			}
			set
			{
				if ((this._CourseAltName != value))
				{
					this.OnCourseAltNameChanging(value);
					this.SendPropertyChanging();
					this._CourseAltName = value;
					this.SendPropertyChanged("CourseAltName");
					this.OnCourseAltNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IseLearning", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IseLearning
		{
			get
			{
				return this._IseLearning;
			}
			set
			{
				if ((this._IseLearning != value))
				{
					this.OnIseLearningChanging(value);
					this.SendPropertyChanging();
					this._IseLearning = value;
					this.SendPropertyChanged("IseLearning");
					this.OnIseLearningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyMonths", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> StudyMonths
		{
			get
			{
				return this._StudyMonths;
			}
			set
			{
				if ((this._StudyMonths != value))
				{
					this.OnStudyMonthsChanging(value);
					this.SendPropertyChanging();
					this._StudyMonths = value;
					this.SendPropertyChanged("StudyMonths");
					this.OnStudyMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceWeight", DbType="Decimal(8,3) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PriceWeight
		{
			get
			{
				return this._PriceWeight;
			}
			set
			{
				if ((this._PriceWeight != value))
				{
					this.OnPriceWeightChanging(value);
					this.SendPropertyChanging();
					this._PriceWeight = value;
					this.SendPropertyChanged("PriceWeight");
					this.OnPriceWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Track", Storage="_TrackCourse", ThisKey="Track_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course TrackCourse
		{
			get
			{
				return this._TrackCourse.Entity;
			}
			set
			{
				Course previousValue = this._TrackCourse.Entity;
				if (((previousValue != value) 
							|| (this._TrackCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackCourse.Entity = null;
						previousValue.TrackCourses.Remove(this);
					}
					this._TrackCourse.Entity = value;
					if ((value != null))
					{
						value.TrackCourses.Add(this);
						this._Track_TC = value.Course_TC;
					}
					else
					{
						this._Track_TC = default(string);
					}
					this.SendPropertyChanged("TrackCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Track1", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Tracks.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Tracks.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDayShift")]
	public partial class DayShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DayShift_TC;
		
		private string _Name;
		
		private System.DateTime _TimeFrom;
		
		private System.DateTime _TimeTo;
		
		private EntitySet<Group> _Groups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayShift_TCChanging(string value);
    partial void OnDayShift_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimeFromChanging(System.DateTime value);
    partial void OnTimeFromChanged();
    partial void OnTimeToChanging(System.DateTime value);
    partial void OnTimeToChanged();
    #endregion
		
		public DayShift()
		{
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayShift_TC", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DayShift_TC
		{
			get
			{
				return this._DayShift_TC;
			}
			set
			{
				if ((this._DayShift_TC != value))
				{
					this.OnDayShift_TCChanging(value);
					this.SendPropertyChanging();
					this._DayShift_TC = value;
					this.SendPropertyChanged("DayShift_TC");
					this.OnDayShift_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="DateTime NOT NULL")]
		public System.DateTime TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTo", DbType="DateTime NOT NULL")]
		public System.DateTime TimeTo
		{
			get
			{
				return this._TimeTo;
			}
			set
			{
				if ((this._TimeTo != value))
				{
					this.OnTimeToChanging(value);
					this.SendPropertyChanging();
					this._TimeTo = value;
					this.SendPropertyChanged("TimeTo");
					this.OnTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayShift_Group", Storage="_Groups", ThisKey="DayShift_TC", OtherKey="DayShift_TC")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.DayShift = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.DayShift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLanguages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Language_TC;
		
		private string _LanguageName;
		
		private EntitySet<CourseLanguage> _CourseLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguage_TCChanging(string value);
    partial void OnLanguage_TCChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    #endregion
		
		public Language()
		{
			this._CourseLanguages = new EntitySet<CourseLanguage>(new Action<CourseLanguage>(this.attach_CourseLanguages), new Action<CourseLanguage>(this.detach_CourseLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Language_TC
		{
			get
			{
				return this._Language_TC;
			}
			set
			{
				if ((this._Language_TC != value))
				{
					this.OnLanguage_TCChanging(value);
					this.SendPropertyChanging();
					this._Language_TC = value;
					this.SendPropertyChanged("Language_TC");
					this.OnLanguage_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CourseLanguage", Storage="_CourseLanguages", ThisKey="Language_TC", OtherKey="Language_TC")]
		public EntitySet<CourseLanguage> CourseLanguages
		{
			get
			{
				return this._CourseLanguages;
			}
			set
			{
				this._CourseLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseLanguages(CourseLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CourseLanguages(CourseLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCountries")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Country_ID;
		
		private string _CountryName;
		
		private byte _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountry_IDChanging(decimal value);
    partial void OnCountry_IDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnSortOrderChanging(byte value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Country_ID
		{
			get
			{
				return this._Country_ID;
			}
			set
			{
				if ((this._Country_ID != value))
				{
					this.OnCountry_IDChanging(value);
					this.SendPropertyChanging();
					this._Country_ID = value;
					this.SendPropertyChanged("Country_ID");
					this.OnCountry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSources")]
	public partial class Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Source_ID;
		
		private string _Name;
		
		private string _Source_TC;
		
		private System.Nullable<int> _SortOrder;
		
		private bool _IsVisible;
		
		private bool _Publish;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSource_IDChanging(decimal value);
    partial void OnSource_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSource_TCChanging(string value);
    partial void OnSource_TCChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsVisible4WebChanging(bool value);
    partial void OnIsVisible4WebChanged();
    #endregion
		
		public Source()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Source_ID
		{
			get
			{
				return this._Source_ID;
			}
			set
			{
				if ((this._Source_ID != value))
				{
					this.OnSource_IDChanging(value);
					this.SendPropertyChanging();
					this._Source_ID = value;
					this.SendPropertyChanged("Source_ID");
					this.OnSource_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Source_TC
		{
			get
			{
				return this._Source_TC;
			}
			set
			{
				if ((this._Source_TC != value))
				{
					this.OnSource_TCChanging(value);
					this.SendPropertyChanging();
					this._Source_TC = value;
					this.SendPropertyChanged("Source_TC");
					this.OnSource_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsVisible4Web
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnIsVisible4WebChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("IsVisible4Web");
					this.OnIsVisible4WebChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPriceLists")]
	public partial class PriceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PriceList_ID;
		
		private System.DateTime _PriceListDate;
		
		private bool _IsActive;
		
		private byte _CourseTextCodeColumnIndex;
		
		private string _Notes;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private decimal _FeedingCost;
		
		private EntityRef<PriceList> _PriceList1;
		
		private EntityRef<PriceList> _tPriceList1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceList_IDChanging(decimal value);
    partial void OnPriceList_IDChanged();
    partial void OnPriceListDateChanging(System.DateTime value);
    partial void OnPriceListDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCourseTextCodeColumnIndexChanging(byte value);
    partial void OnCourseTextCodeColumnIndexChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnFeedingCostChanging(decimal value);
    partial void OnFeedingCostChanged();
    #endregion
		
		public PriceList()
		{
			this._PriceList1 = default(EntityRef<PriceList>);
			this._tPriceList1 = default(EntityRef<PriceList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceList_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal PriceList_ID
		{
			get
			{
				return this._PriceList_ID;
			}
			set
			{
				if ((this._PriceList_ID != value))
				{
					if (this._tPriceList1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceList_IDChanging(value);
					this.SendPropertyChanging();
					this._PriceList_ID = value;
					this.SendPropertyChanged("PriceList_ID");
					this.OnPriceList_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PriceListDate
		{
			get
			{
				return this._PriceListDate;
			}
			set
			{
				if ((this._PriceListDate != value))
				{
					this.OnPriceListDateChanging(value);
					this.SendPropertyChanging();
					this._PriceListDate = value;
					this.SendPropertyChanged("PriceListDate");
					this.OnPriceListDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTextCodeColumnIndex", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte CourseTextCodeColumnIndex
		{
			get
			{
				return this._CourseTextCodeColumnIndex;
			}
			set
			{
				if ((this._CourseTextCodeColumnIndex != value))
				{
					this.OnCourseTextCodeColumnIndexChanging(value);
					this.SendPropertyChanging();
					this._CourseTextCodeColumnIndex = value;
					this.SendPropertyChanged("CourseTextCodeColumnIndex");
					this.OnCourseTextCodeColumnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedingCost", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal FeedingCost
		{
			get
			{
				return this._FeedingCost;
			}
			set
			{
				if ((this._FeedingCost != value))
				{
					this.OnFeedingCostChanging(value);
					this.SendPropertyChanging();
					this._FeedingCost = value;
					this.SendPropertyChanged("FeedingCost");
					this.OnFeedingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceList", Storage="_PriceList1", ThisKey="PriceList_ID", OtherKey="PriceList_ID", IsUnique=true, IsForeignKey=false)]
		public PriceList PriceList1
		{
			get
			{
				return this._PriceList1.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList1.Entity;
				if (((previousValue != value) 
							|| (this._PriceList1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList1.Entity = null;
						previousValue.tPriceList1 = null;
					}
					this._PriceList1.Entity = value;
					if ((value != null))
					{
						value.tPriceList1 = this;
					}
					this.SendPropertyChanged("PriceList1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceList", Storage="_tPriceList1", ThisKey="PriceList_ID", OtherKey="PriceList_ID", IsForeignKey=true)]
		public PriceList tPriceList1
		{
			get
			{
				return this._tPriceList1.Entity;
			}
			set
			{
				PriceList previousValue = this._tPriceList1.Entity;
				if (((previousValue != value) 
							|| (this._tPriceList1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tPriceList1.Entity = null;
						previousValue.PriceList1 = null;
					}
					this._tPriceList1.Entity = value;
					if ((value != null))
					{
						value.PriceList1 = this;
						this._PriceList_ID = value.PriceList_ID;
					}
					else
					{
						this._PriceList_ID = default(decimal);
					}
					this.SendPropertyChanged("tPriceList1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vCurrentPrices")]
	public partial class PriceView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Price_ID;
		
		private string _Course_TC;
		
		private string _Track_TC;
		
		private System.Nullable<byte> _StudyMonths;
		
		private decimal _Price;
		
		private bool _IsInaccuratePrice;
		
		private string _PriceType_TC;
		
		private EntityRef<PriceType> _PriceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrice_IDChanging(decimal value);
    partial void OnPrice_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnTrack_TCChanging(string value);
    partial void OnTrack_TCChanged();
    partial void OnStudyMonthsChanging(System.Nullable<byte> value);
    partial void OnStudyMonthsChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIsInaccuratePriceChanging(bool value);
    partial void OnIsInaccuratePriceChanged();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    #endregion
		
		public PriceView()
		{
			this._PriceType = default(EntityRef<PriceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Price_ID
		{
			get
			{
				return this._Price_ID;
			}
			set
			{
				if ((this._Price_ID != value))
				{
					this.OnPrice_IDChanging(value);
					this.SendPropertyChanging();
					this._Price_ID = value;
					this.SendPropertyChanged("Price_ID");
					this.OnPrice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track_TC", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Track_TC
		{
			get
			{
				return this._Track_TC;
			}
			set
			{
				if ((this._Track_TC != value))
				{
					this.OnTrack_TCChanging(value);
					this.SendPropertyChanging();
					this._Track_TC = value;
					this.SendPropertyChanged("Track_TC");
					this.OnTrack_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyMonths", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> StudyMonths
		{
			get
			{
				return this._StudyMonths;
			}
			set
			{
				if ((this._StudyMonths != value))
				{
					this.OnStudyMonthsChanging(value);
					this.SendPropertyChanging();
					this._StudyMonths = value;
					this.SendPropertyChanged("StudyMonths");
					this.OnStudyMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(33,8)", UpdateCheck=UpdateCheck.Never)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInaccuratePrice", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInaccuratePrice
		{
			get
			{
				return this._IsInaccuratePrice;
			}
			set
			{
				if ((this._IsInaccuratePrice != value))
				{
					this.OnIsInaccuratePriceChanging(value);
					this.SendPropertyChanging();
					this._IsInaccuratePrice = value;
					this.SendPropertyChanged("IsInaccuratePrice");
					this.OnIsInaccuratePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					if (this._PriceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceType_PriceView", Storage="_PriceType", ThisKey="PriceType_TC", OtherKey="PriceType_TC", IsForeignKey=true)]
		public PriceType PriceType
		{
			get
			{
				return this._PriceType.Entity;
			}
			set
			{
				PriceType previousValue = this._PriceType.Entity;
				if (((previousValue != value) 
							|| (this._PriceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceType.Entity = null;
						previousValue.PriceViews.Remove(this);
					}
					this._PriceType.Entity = value;
					if ((value != null))
					{
						value.PriceViews.Add(this);
						this._PriceType_TC = value.PriceType_TC;
					}
					else
					{
						this._PriceType_TC = default(string);
					}
					this.SendPropertyChanged("PriceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tBranchOffices")]
	public partial class BranchOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BranchOffice_TC;
		
		private string _Name;
		
		private string _Address;
		
		private string _Notes;
		
		private bool _NotActual;
		
		private decimal _SortOrder;
		
		private string _SchemeFileName;
		
		private decimal _BranchOffice_ID;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private string _City_TC;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<Complex> _Complexes;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchOffice_TCChanging(string value);
    partial void OnBranchOffice_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnNotActualChanging(bool value);
    partial void OnNotActualChanged();
    partial void OnSortOrderChanging(decimal value);
    partial void OnSortOrderChanged();
    partial void OnSchemeFileNameChanging(string value);
    partial void OnSchemeFileNameChanged();
    partial void OnBranchOffice_IDChanging(decimal value);
    partial void OnBranchOffice_IDChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnTrueCity_TCChanging(string value);
    partial void OnTrueCity_TCChanged();
    #endregion
		
		public BranchOffice()
		{
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._Complexes = new EntitySet<Complex>(new Action<Complex>(this.attach_Complexes), new Action<Complex>(this.detach_Complexes));
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchOffice_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string BranchOffice_TC
		{
			get
			{
				return this._BranchOffice_TC;
			}
			set
			{
				if ((this._BranchOffice_TC != value))
				{
					this.OnBranchOffice_TCChanging(value);
					this.SendPropertyChanging();
					this._BranchOffice_TC = value;
					this.SendPropertyChanged("BranchOffice_TC");
					this.OnBranchOffice_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotActual", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NotActual
		{
			get
			{
				return this._NotActual;
			}
			set
			{
				if ((this._NotActual != value))
				{
					this.OnNotActualChanging(value);
					this.SendPropertyChanging();
					this._NotActual = value;
					this.SendPropertyChanged("NotActual");
					this.OnNotActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeFileName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string SchemeFileName
		{
			get
			{
				return this._SchemeFileName;
			}
			set
			{
				if ((this._SchemeFileName != value))
				{
					this.OnSchemeFileNameChanging(value);
					this.SendPropertyChanging();
					this._SchemeFileName = value;
					this.SendPropertyChanged("SchemeFileName");
					this.OnSchemeFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchOffice_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal BranchOffice_ID
		{
			get
			{
				return this._BranchOffice_ID;
			}
			set
			{
				if ((this._BranchOffice_ID != value))
				{
					this.OnBranchOffice_IDChanging(value);
					this.SendPropertyChanging();
					this._BranchOffice_ID = value;
					this.SendPropertyChanged("BranchOffice_ID");
					this.OnBranchOffice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TrueCity_TC
		{
			get
			{
				return this._City_TC;
			}
			set
			{
				if ((this._City_TC != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrueCity_TCChanging(value);
					this.SendPropertyChanging();
					this._City_TC = value;
					this.SendPropertyChanged("TrueCity_TC");
					this.OnTrueCity_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchOffice_Group", Storage="_Groups", ThisKey="BranchOffice_TC", OtherKey="BranchOffice_TC")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchOffice_Complex", Storage="_Complexes", ThisKey="BranchOffice_TC", OtherKey="BranchOffice_TC")]
		public EntitySet<Complex> Complexes
		{
			get
			{
				return this._Complexes;
			}
			set
			{
				this._Complexes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_BranchOffice", Storage="_City", ThisKey="TrueCity_TC", OtherKey="City_TC", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.BranchOffices.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.BranchOffices.Add(this);
						this._City_TC = value.City_TC;
					}
					else
					{
						this._City_TC = default(string);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.BranchOffice = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.BranchOffice = null;
		}
		
		private void attach_Complexes(Complex entity)
		{
			this.SendPropertyChanging();
			entity.BranchOffice = this;
		}
		
		private void detach_Complexes(Complex entity)
		{
			this.SendPropertyChanging();
			entity.BranchOffice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tComplexes")]
	public partial class Complex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Complex_TC;
		
		private string _BranchOffice_TC;
		
		private string _Name;
		
		private string _Admin_TC;
		
		private string _Notes;
		
		private bool _IsLocalComplex;
		
		private string _Address;
		
		private string _SchemeFileName;
		
		private bool _IsInUse;
		
		private decimal _Complex_ID;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private string _UrlName;
		
		private bool _PublishInSite;
		
		private string _Description;
		
		private string _WorkingHours;
		
		private string _Metro;
		
		private string _PublicPhone;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<ClassRoom> _ClassRooms;
		
		private EntityRef<BranchOffice> _BranchOffice;
		
		private EntityRef<Employee> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplex_TCChanging(string value);
    partial void OnComplex_TCChanged();
    partial void OnBranchOffice_TCChanging(string value);
    partial void OnBranchOffice_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdmin_TCChanging(string value);
    partial void OnAdmin_TCChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIsLocalComplexChanging(bool value);
    partial void OnIsLocalComplexChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSchemeFileNameChanging(string value);
    partial void OnSchemeFileNameChanged();
    partial void OnIsInUseChanging(bool value);
    partial void OnIsInUseChanged();
    partial void OnComplex_IDChanging(decimal value);
    partial void OnComplex_IDChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWorkingHoursChanging(string value);
    partial void OnWorkingHoursChanged();
    partial void OnMetroChanging(string value);
    partial void OnMetroChanged();
    partial void OnPublicPhoneChanging(string value);
    partial void OnPublicPhoneChanged();
    #endregion
		
		public Complex()
		{
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._ClassRooms = new EntitySet<ClassRoom>(new Action<ClassRoom>(this.attach_ClassRooms), new Action<ClassRoom>(this.detach_ClassRooms));
			this._BranchOffice = default(EntityRef<BranchOffice>);
			this._Admin = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Complex_TC
		{
			get
			{
				return this._Complex_TC;
			}
			set
			{
				if ((this._Complex_TC != value))
				{
					this.OnComplex_TCChanging(value);
					this.SendPropertyChanging();
					this._Complex_TC = value;
					this.SendPropertyChanged("Complex_TC");
					this.OnComplex_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchOffice_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BranchOffice_TC
		{
			get
			{
				return this._BranchOffice_TC;
			}
			set
			{
				if ((this._BranchOffice_TC != value))
				{
					if (this._BranchOffice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchOffice_TCChanging(value);
					this.SendPropertyChanging();
					this._BranchOffice_TC = value;
					this.SendPropertyChanged("BranchOffice_TC");
					this.OnBranchOffice_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Admin_TC
		{
			get
			{
				return this._Admin_TC;
			}
			set
			{
				if ((this._Admin_TC != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmin_TCChanging(value);
					this.SendPropertyChanging();
					this._Admin_TC = value;
					this.SendPropertyChanged("Admin_TC");
					this.OnAdmin_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocalComplex", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLocalComplex
		{
			get
			{
				return this._IsLocalComplex;
			}
			set
			{
				if ((this._IsLocalComplex != value))
				{
					this.OnIsLocalComplexChanging(value);
					this.SendPropertyChanging();
					this._IsLocalComplex = value;
					this.SendPropertyChanged("IsLocalComplex");
					this.OnIsLocalComplexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemeFileName", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string SchemeFileName
		{
			get
			{
				return this._SchemeFileName;
			}
			set
			{
				if ((this._SchemeFileName != value))
				{
					this.OnSchemeFileNameChanging(value);
					this.SendPropertyChanging();
					this._SchemeFileName = value;
					this.SendPropertyChanged("SchemeFileName");
					this.OnSchemeFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInUse", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInUse
		{
			get
			{
				return this._IsInUse;
			}
			set
			{
				if ((this._IsInUse != value))
				{
					this.OnIsInUseChanging(value);
					this.SendPropertyChanging();
					this._IsInUse = value;
					this.SendPropertyChanged("IsInUse");
					this.OnIsInUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Complex_ID
		{
			get
			{
				return this._Complex_ID;
			}
			set
			{
				if ((this._Complex_ID != value))
				{
					this.OnComplex_IDChanging(value);
					this.SendPropertyChanging();
					this._Complex_ID = value;
					this.SendPropertyChanged("Complex_ID");
					this.OnComplex_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishInSite", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsPublished
		{
			get
			{
				return this._PublishInSite;
			}
			set
			{
				if ((this._PublishInSite != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._PublishInSite = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000) ", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this.OnWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkingHours = value;
					this.SendPropertyChanged("WorkingHours");
					this.OnWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro")]
		public string Metro
		{
			get
			{
				return this._Metro;
			}
			set
			{
				if ((this._Metro != value))
				{
					this.OnMetroChanging(value);
					this.SendPropertyChanging();
					this._Metro = value;
					this.SendPropertyChanged("Metro");
					this.OnMetroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicPhone")]
		public string PublicPhone
		{
			get
			{
				return this._PublicPhone;
			}
			set
			{
				if ((this._PublicPhone != value))
				{
					this.OnPublicPhoneChanging(value);
					this.SendPropertyChanging();
					this._PublicPhone = value;
					this.SendPropertyChanged("PublicPhone");
					this.OnPublicPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Complex_Group", Storage="_Groups", ThisKey="Complex_TC", OtherKey="Complex_TC")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Complex_ClassRoom", Storage="_ClassRooms", ThisKey="Complex_TC", OtherKey="Complex_TC")]
		public EntitySet<ClassRoom> ClassRooms
		{
			get
			{
				return this._ClassRooms;
			}
			set
			{
				this._ClassRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchOffice_Complex", Storage="_BranchOffice", ThisKey="BranchOffice_TC", OtherKey="BranchOffice_TC", IsForeignKey=true)]
		public BranchOffice BranchOffice
		{
			get
			{
				return this._BranchOffice.Entity;
			}
			set
			{
				BranchOffice previousValue = this._BranchOffice.Entity;
				if (((previousValue != value) 
							|| (this._BranchOffice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchOffice.Entity = null;
						previousValue.Complexes.Remove(this);
					}
					this._BranchOffice.Entity = value;
					if ((value != null))
					{
						value.Complexes.Add(this);
						this._BranchOffice_TC = value.BranchOffice_TC;
					}
					else
					{
						this._BranchOffice_TC = default(string);
					}
					this.SendPropertyChanged("BranchOffice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Complex", Storage="_Admin", ThisKey="Admin_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Employee previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Complexes.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Complexes.Add(this);
						this._Admin_TC = value.Employee_TC;
					}
					else
					{
						this._Admin_TC = default(string);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Complex = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Complex = null;
		}
		
		private void attach_ClassRooms(ClassRoom entity)
		{
			this.SendPropertyChanging();
			entity.Complex = this;
		}
		
		private void detach_ClassRooms(ClassRoom entity)
		{
			this.SendPropertyChanging();
			entity.Complex = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseLanguages")]
	public partial class CourseLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseLanguage_ID;
		
		private string _Course_TC;
		
		private string _Language_TC;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseLanguage_IDChanging(decimal value);
    partial void OnCourseLanguage_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnLanguage_TCChanging(string value);
    partial void OnLanguage_TCChanged();
    #endregion
		
		public CourseLanguage()
		{
			this._Course = default(EntityRef<Course>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseLanguage_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CourseLanguage_ID
		{
			get
			{
				return this._CourseLanguage_ID;
			}
			set
			{
				if ((this._CourseLanguage_ID != value))
				{
					this.OnCourseLanguage_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseLanguage_ID = value;
					this.SendPropertyChanged("CourseLanguage_ID");
					this.OnCourseLanguage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Language_TC
		{
			get
			{
				return this._Language_TC;
			}
			set
			{
				if ((this._Language_TC != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_TCChanging(value);
					this.SendPropertyChanging();
					this._Language_TC = value;
					this.SendPropertyChanged("Language_TC");
					this.OnLanguage_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseLanguage", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseLanguages.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseLanguages.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CourseLanguage", Storage="_Language", ThisKey="Language_TC", OtherKey="Language_TC", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CourseLanguages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CourseLanguages.Add(this);
						this._Language_TC = value.Language_TC;
					}
					else
					{
						this._Language_TC = default(string);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tAuthorizationTypes")]
	public partial class AuthorizationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AuthorizationType_TC;
		
		private string _AuthorizationName;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<Vendor> _Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorizationType_TCChanging(string value);
    partial void OnAuthorizationType_TCChanged();
    partial void OnAuthorizationNameChanging(string value);
    partial void OnAuthorizationNameChanged();
    #endregion
		
		public AuthorizationType()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AuthorizationType_TC
		{
			get
			{
				return this._AuthorizationType_TC;
			}
			set
			{
				if ((this._AuthorizationType_TC != value))
				{
					this.OnAuthorizationType_TCChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationType_TC = value;
					this.SendPropertyChanged("AuthorizationType_TC");
					this.OnAuthorizationType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string AuthorizationName
		{
			get
			{
				return this._AuthorizationName;
			}
			set
			{
				if ((this._AuthorizationName != value))
				{
					this.OnAuthorizationNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationName = value;
					this.SendPropertyChanged("AuthorizationName");
					this.OnAuthorizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorizationType_Course", Storage="_Courses", ThisKey="AuthorizationType_TC", OtherKey="AuthorizationType_TC")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorizationType_Vendor", Storage="_Vendors", ThisKey="AuthorizationType_TC", OtherKey="AuthorizationType_TC")]
		public EntitySet<Vendor> Vendors
		{
			get
			{
				return this._Vendors;
			}
			set
			{
				this._Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.AuthorizationType = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.AuthorizationType = null;
		}
		
		private void attach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.AuthorizationType = this;
		}
		
		private void detach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.AuthorizationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentsInGroupsCalc")]
	public partial class StudentsInGroupsCalc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentInGroup_ID;
		
		private decimal _PaidSum;
		
		private string _OurOrg_TC;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnPaidSumChanging(decimal value);
    partial void OnPaidSumChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    #endregion
		
		public StudentsInGroupsCalc()
		{
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidSum", DbType="Money NOT NULL")]
		public decimal PaidSum
		{
			get
			{
				return this._PaidSum;
			}
			set
			{
				if ((this._PaidSum != value))
				{
					this.OnPaidSumChanging(value);
					this.SendPropertyChanging();
					this._PaidSum = value;
					this.SendPropertyChanged("PaidSum");
					this.OnPaidSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", DbType="VarChar(4)")]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentsInGroupsCalc", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.StudentsInGroupsCalc = null;
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.StudentsInGroupsCalc = this;
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentsInGroups")]
	public partial class StudentInGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Group_ID;
		
		private decimal _Student_ID;
		
		private System.Nullable<decimal> _Org_ID;
		
		private System.Nullable<decimal> _StudentContractAppendix_ID;
		
		private System.Nullable<decimal> _OrgContract_ID;
		
		private string _PriceType_TC;
		
		private decimal _Discount;
		
		private string _Consultant_TC;
		
		private string _Router_TC;
		
		private string _BerthType_TC;
		
		private System.Nullable<System.DateTime> _ReserveDeadline;
		
		private decimal _Debt;
		
		private string _Track_TC;
		
		private bool _IsInformed;
		
		private bool _IsRealized;
		
		private bool _IsReported;
		
		private bool _IsReserveProgram;
		
		private string _OurOrg_TC;
		
		private System.Nullable<byte> _StudyMonths;
		
		private System.Nullable<decimal> _StudentAddress_ID;
		
		private System.Nullable<decimal> _StudentEmail_ID;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.Nullable<System.DateTime> _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private System.Nullable<decimal> _Exam_ID;
		
		private bool _Exam_Passed;
		
		private bool _IsGivenOriginal;
		
		private string _PresentCertNum;
		
		private bool _CertGiven;
		
		private System.Nullable<System.DateTime> _CertGivenDate;
		
		private string _CertGivenEmployee_TC;
		
		private bool _IsGivenInvoiceAct;
		
		private System.Nullable<decimal> _Mark;
		
		private bool _IsQualificationAdvancement;
		
		private System.Nullable<System.DateTime> _InformedDate;
		
		private System.Nullable<System.DateTime> _RoutedDate;
		
		private System.Nullable<System.DateTime> _LastTransferDate;
		
		private string _QualAdv_TC;
		
		private System.Nullable<int> _QualAdv_Number;
		
		private System.Nullable<System.DateTime> _LastTakenInGroupDate;
		
		private string _PresenceType_TC;
		
		private string _Assistant_TC;
		
		private bool _IsHungry;
		
		private System.Nullable<System.DateTime> _NextContactDate;
		
		private System.Nullable<decimal> _Charge;
		
		private string _ReasonForLearning;
		
		private bool _IsExpressOrder;
		
		private char _InputSource_TC;
		
		private System.Nullable<short> _SeatNumber;
		
		private System.Nullable<decimal> _DiscountMoney;
		
		private string _OrderPromocode;
		
		private bool _IsEntryTestPassed;
		
		private bool _IsPartialPayment;
		
		private System.Nullable<decimal> _PartialPayment;
		
		private string _PromoCode;
		
		private System.Nullable<decimal> _CreditRequest_ID;
		
		private string _FinalExamMark_TC;
		
		private string _FavoriteTeacher1;
		
		private EntityRef<StudentsInGroupsCalc> _StudentsInGroupsCalc;
		
		private EntitySet<Questionnaire> _Questionnaires;
		
		private EntitySet<StudentInGroupLecture> _StudentInGroupLectures;
		
		private EntitySet<StudentInGroupSource> _StudentInGroupSources;
		
		private EntitySet<StudentInGroupExtras> _StudentInGroupExtras;
		
		private EntitySet<Certificate> _Certificates;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Exam> _Exam;
		
		private EntityRef<Org> _Org;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnOrg_IDChanging(System.Nullable<decimal> value);
    partial void OnOrg_IDChanged();
    partial void OnStudentContractAppendix_IDChanging(System.Nullable<decimal> value);
    partial void OnStudentContractAppendix_IDChanged();
    partial void OnOrgContract_IDChanging(System.Nullable<decimal> value);
    partial void OnOrgContract_IDChanged();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnConsultant_TCChanging(string value);
    partial void OnConsultant_TCChanged();
    partial void OnRouter_TCChanging(string value);
    partial void OnRouter_TCChanged();
    partial void OnBerthType_TCChanging(string value);
    partial void OnBerthType_TCChanged();
    partial void OnReserveDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnReserveDeadlineChanged();
    partial void OnDebtChanging(decimal value);
    partial void OnDebtChanged();
    partial void OnTrack_TCChanging(string value);
    partial void OnTrack_TCChanged();
    partial void OnIsInformedChanging(bool value);
    partial void OnIsInformedChanged();
    partial void OnIsRealizedChanging(bool value);
    partial void OnIsRealizedChanged();
    partial void OnIsReportedChanging(bool value);
    partial void OnIsReportedChanged();
    partial void OnIsReserveProgramChanging(bool value);
    partial void OnIsReserveProgramChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnStudyMonthsChanging(System.Nullable<byte> value);
    partial void OnStudyMonthsChanged();
    partial void OnStudentAddress_IDChanging(System.Nullable<decimal> value);
    partial void OnStudentAddress_IDChanged();
    partial void OnStudentEmail_IDChanging(System.Nullable<decimal> value);
    partial void OnStudentEmail_IDChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnExam_IDChanging(System.Nullable<decimal> value);
    partial void OnExam_IDChanged();
    partial void OnExam_PassedChanging(bool value);
    partial void OnExam_PassedChanged();
    partial void OnIsGivenOriginalChanging(bool value);
    partial void OnIsGivenOriginalChanged();
    partial void OnPresentCertNumChanging(string value);
    partial void OnPresentCertNumChanged();
    partial void OnCertGivenChanging(bool value);
    partial void OnCertGivenChanged();
    partial void OnCertGivenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCertGivenDateChanged();
    partial void OnCertGivenEmployee_TCChanging(string value);
    partial void OnCertGivenEmployee_TCChanged();
    partial void OnIsGivenInvoiceActChanging(bool value);
    partial void OnIsGivenInvoiceActChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    partial void OnIsQualificationAdvancementChanging(bool value);
    partial void OnIsQualificationAdvancementChanged();
    partial void OnInformedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInformedDateChanged();
    partial void OnRoutedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRoutedDateChanged();
    partial void OnLastTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTransferDateChanged();
    partial void OnQualAdv_TCChanging(string value);
    partial void OnQualAdv_TCChanged();
    partial void OnQualAdv_NumberChanging(System.Nullable<int> value);
    partial void OnQualAdv_NumberChanged();
    partial void OnLastTakenInGroupDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTakenInGroupDateChanged();
    partial void OnPresenceType_TCChanging(string value);
    partial void OnPresenceType_TCChanged();
    partial void OnAssistant_TCChanging(string value);
    partial void OnAssistant_TCChanged();
    partial void OnIsHungryChanging(bool value);
    partial void OnIsHungryChanged();
    partial void OnNextContactDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextContactDateChanged();
    partial void OnChargeChanging(System.Nullable<decimal> value);
    partial void OnChargeChanged();
    partial void OnReasonForLearningChanging(string value);
    partial void OnReasonForLearningChanged();
    partial void OnIsExpressOrderChanging(bool value);
    partial void OnIsExpressOrderChanged();
    partial void OnInputSource_TCChanging(char value);
    partial void OnInputSource_TCChanged();
    partial void OnSeatNumberChanging(System.Nullable<short> value);
    partial void OnSeatNumberChanged();
    partial void OnDiscountMoneyChanging(System.Nullable<decimal> value);
    partial void OnDiscountMoneyChanged();
    partial void OnOrderPromocodeChanging(string value);
    partial void OnOrderPromocodeChanged();
    partial void OnIsEntryTestPassedChanging(bool value);
    partial void OnIsEntryTestPassedChanged();
    partial void OnIsPartialPaymentChanging(bool value);
    partial void OnIsPartialPaymentChanged();
    partial void OnPartialPaymentChanging(System.Nullable<decimal> value);
    partial void OnPartialPaymentChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnCreditRequest_IDChanging(System.Nullable<decimal> value);
    partial void OnCreditRequest_IDChanged();
    partial void OnFinalExamMark_TCChanging(string value);
    partial void OnFinalExamMark_TCChanged();
    partial void OnFavoriteTeacher1Changing(string value);
    partial void OnFavoriteTeacher1Changed();
    #endregion
		
		public StudentInGroup()
		{
			this._StudentsInGroupsCalc = default(EntityRef<StudentsInGroupsCalc>);
			this._Questionnaires = new EntitySet<Questionnaire>(new Action<Questionnaire>(this.attach_Questionnaires), new Action<Questionnaire>(this.detach_Questionnaires));
			this._StudentInGroupLectures = new EntitySet<StudentInGroupLecture>(new Action<StudentInGroupLecture>(this.attach_StudentInGroupLectures), new Action<StudentInGroupLecture>(this.detach_StudentInGroupLectures));
			this._StudentInGroupSources = new EntitySet<StudentInGroupSource>(new Action<StudentInGroupSource>(this.attach_StudentInGroupSources), new Action<StudentInGroupSource>(this.detach_StudentInGroupSources));
			this._StudentInGroupExtras = new EntitySet<StudentInGroupExtras>(new Action<StudentInGroupExtras>(this.attach_StudentInGroupExtras), new Action<StudentInGroupExtras>(this.detach_StudentInGroupExtras));
			this._Certificates = new EntitySet<Certificate>(new Action<Certificate>(this.attach_Certificates), new Action<Certificate>(this.detach_Certificates));
			this._Group = default(EntityRef<Group>);
			this._Employee = default(EntityRef<Employee>);
			this._Student = default(EntityRef<Student>);
			this._Exam = default(EntityRef<Exam>);
			this._Org = default(EntityRef<Org>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Org_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Org_ID
		{
			get
			{
				return this._Org_ID;
			}
			set
			{
				if ((this._Org_ID != value))
				{
					if (this._Org.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._Org_ID = value;
					this.SendPropertyChanged("Org_ID");
					this.OnOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentContractAppendix_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> StudentContractAppendix_ID
		{
			get
			{
				return this._StudentContractAppendix_ID;
			}
			set
			{
				if ((this._StudentContractAppendix_ID != value))
				{
					this.OnStudentContractAppendix_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentContractAppendix_ID = value;
					this.SendPropertyChanged("StudentContractAppendix_ID");
					this.OnStudentContractAppendix_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgContract_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> OrgContract_ID
		{
			get
			{
				return this._OrgContract_ID;
			}
			set
			{
				if ((this._OrgContract_ID != value))
				{
					this.OnOrgContract_IDChanging(value);
					this.SendPropertyChanging();
					this._OrgContract_ID = value;
					this.SendPropertyChanged("OrgContract_ID");
					this.OnOrgContract_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Consultant_TC
		{
			get
			{
				return this._Consultant_TC;
			}
			set
			{
				if ((this._Consultant_TC != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsultant_TCChanging(value);
					this.SendPropertyChanging();
					this._Consultant_TC = value;
					this.SendPropertyChanged("Consultant_TC");
					this.OnConsultant_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Router_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Router_TC
		{
			get
			{
				return this._Router_TC;
			}
			set
			{
				if ((this._Router_TC != value))
				{
					this.OnRouter_TCChanging(value);
					this.SendPropertyChanging();
					this._Router_TC = value;
					this.SendPropertyChanged("Router_TC");
					this.OnRouter_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BerthType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BerthType_TC
		{
			get
			{
				return this._BerthType_TC;
			}
			set
			{
				if ((this._BerthType_TC != value))
				{
					this.OnBerthType_TCChanging(value);
					this.SendPropertyChanging();
					this._BerthType_TC = value;
					this.SendPropertyChanged("BerthType_TC");
					this.OnBerthType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveDeadline", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReserveDeadline
		{
			get
			{
				return this._ReserveDeadline;
			}
			set
			{
				if ((this._ReserveDeadline != value))
				{
					this.OnReserveDeadlineChanging(value);
					this.SendPropertyChanging();
					this._ReserveDeadline = value;
					this.SendPropertyChanged("ReserveDeadline");
					this.OnReserveDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debt", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Debt
		{
			get
			{
				return this._Debt;
			}
			set
			{
				if ((this._Debt != value))
				{
					this.OnDebtChanging(value);
					this.SendPropertyChanging();
					this._Debt = value;
					this.SendPropertyChanged("Debt");
					this.OnDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Track_TC", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Track_TC
		{
			get
			{
				return this._Track_TC;
			}
			set
			{
				if ((this._Track_TC != value))
				{
					this.OnTrack_TCChanging(value);
					this.SendPropertyChanging();
					this._Track_TC = value;
					this.SendPropertyChanged("Track_TC");
					this.OnTrack_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInformed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInformed
		{
			get
			{
				return this._IsInformed;
			}
			set
			{
				if ((this._IsInformed != value))
				{
					this.OnIsInformedChanging(value);
					this.SendPropertyChanging();
					this._IsInformed = value;
					this.SendPropertyChanged("IsInformed");
					this.OnIsInformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRealized", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsRealized
		{
			get
			{
				return this._IsRealized;
			}
			set
			{
				if ((this._IsRealized != value))
				{
					this.OnIsRealizedChanging(value);
					this.SendPropertyChanging();
					this._IsRealized = value;
					this.SendPropertyChanged("IsRealized");
					this.OnIsRealizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReported", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsReported
		{
			get
			{
				return this._IsReported;
			}
			set
			{
				if ((this._IsReported != value))
				{
					this.OnIsReportedChanging(value);
					this.SendPropertyChanging();
					this._IsReported = value;
					this.SendPropertyChanged("IsReported");
					this.OnIsReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReserveProgram", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsReserveProgram
		{
			get
			{
				return this._IsReserveProgram;
			}
			set
			{
				if ((this._IsReserveProgram != value))
				{
					this.OnIsReserveProgramChanging(value);
					this.SendPropertyChanging();
					this._IsReserveProgram = value;
					this.SendPropertyChanged("IsReserveProgram");
					this.OnIsReserveProgramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyMonths", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> StudyMonths
		{
			get
			{
				return this._StudyMonths;
			}
			set
			{
				if ((this._StudyMonths != value))
				{
					this.OnStudyMonthsChanging(value);
					this.SendPropertyChanging();
					this._StudyMonths = value;
					this.SendPropertyChanged("StudyMonths");
					this.OnStudyMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAddress_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> StudentAddress_ID
		{
			get
			{
				return this._StudentAddress_ID;
			}
			set
			{
				if ((this._StudentAddress_ID != value))
				{
					this.OnStudentAddress_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentAddress_ID = value;
					this.SendPropertyChanged("StudentAddress_ID");
					this.OnStudentAddress_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentEmail_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> StudentEmail_ID
		{
			get
			{
				return this._StudentEmail_ID;
			}
			set
			{
				if ((this._StudentEmail_ID != value))
				{
					this.OnStudentEmail_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentEmail_ID = value;
					this.SendPropertyChanged("StudentEmail_ID");
					this.OnStudentEmail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_Passed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Exam_Passed
		{
			get
			{
				return this._Exam_Passed;
			}
			set
			{
				if ((this._Exam_Passed != value))
				{
					this.OnExam_PassedChanging(value);
					this.SendPropertyChanging();
					this._Exam_Passed = value;
					this.SendPropertyChanged("Exam_Passed");
					this.OnExam_PassedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGivenOriginal", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsGivenOriginal
		{
			get
			{
				return this._IsGivenOriginal;
			}
			set
			{
				if ((this._IsGivenOriginal != value))
				{
					this.OnIsGivenOriginalChanging(value);
					this.SendPropertyChanging();
					this._IsGivenOriginal = value;
					this.SendPropertyChanged("IsGivenOriginal");
					this.OnIsGivenOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentCertNum", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PresentCertNum
		{
			get
			{
				return this._PresentCertNum;
			}
			set
			{
				if ((this._PresentCertNum != value))
				{
					this.OnPresentCertNumChanging(value);
					this.SendPropertyChanging();
					this._PresentCertNum = value;
					this.SendPropertyChanged("PresentCertNum");
					this.OnPresentCertNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertGiven", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CertGiven
		{
			get
			{
				return this._CertGiven;
			}
			set
			{
				if ((this._CertGiven != value))
				{
					this.OnCertGivenChanging(value);
					this.SendPropertyChanging();
					this._CertGiven = value;
					this.SendPropertyChanged("CertGiven");
					this.OnCertGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertGivenDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CertGivenDate
		{
			get
			{
				return this._CertGivenDate;
			}
			set
			{
				if ((this._CertGivenDate != value))
				{
					this.OnCertGivenDateChanging(value);
					this.SendPropertyChanging();
					this._CertGivenDate = value;
					this.SendPropertyChanged("CertGivenDate");
					this.OnCertGivenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertGivenEmployee_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string CertGivenEmployee_TC
		{
			get
			{
				return this._CertGivenEmployee_TC;
			}
			set
			{
				if ((this._CertGivenEmployee_TC != value))
				{
					this.OnCertGivenEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._CertGivenEmployee_TC = value;
					this.SendPropertyChanged("CertGivenEmployee_TC");
					this.OnCertGivenEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGivenInvoiceAct", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsGivenInvoiceAct
		{
			get
			{
				return this._IsGivenInvoiceAct;
			}
			set
			{
				if ((this._IsGivenInvoiceAct != value))
				{
					this.OnIsGivenInvoiceActChanging(value);
					this.SendPropertyChanging();
					this._IsGivenInvoiceAct = value;
					this.SendPropertyChanged("IsGivenInvoiceAct");
					this.OnIsGivenInvoiceActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(2,1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQualificationAdvancement", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsQualificationAdvancement
		{
			get
			{
				return this._IsQualificationAdvancement;
			}
			set
			{
				if ((this._IsQualificationAdvancement != value))
				{
					this.OnIsQualificationAdvancementChanging(value);
					this.SendPropertyChanging();
					this._IsQualificationAdvancement = value;
					this.SendPropertyChanged("IsQualificationAdvancement");
					this.OnIsQualificationAdvancementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformedDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> InformedDate
		{
			get
			{
				return this._InformedDate;
			}
			set
			{
				if ((this._InformedDate != value))
				{
					this.OnInformedDateChanging(value);
					this.SendPropertyChanging();
					this._InformedDate = value;
					this.SendPropertyChanged("InformedDate");
					this.OnInformedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutedDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RoutedDate
		{
			get
			{
				return this._RoutedDate;
			}
			set
			{
				if ((this._RoutedDate != value))
				{
					this.OnRoutedDateChanging(value);
					this.SendPropertyChanging();
					this._RoutedDate = value;
					this.SendPropertyChanged("RoutedDate");
					this.OnRoutedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransferDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastTransferDate
		{
			get
			{
				return this._LastTransferDate;
			}
			set
			{
				if ((this._LastTransferDate != value))
				{
					this.OnLastTransferDateChanging(value);
					this.SendPropertyChanging();
					this._LastTransferDate = value;
					this.SendPropertyChanged("LastTransferDate");
					this.OnLastTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualAdv_TC", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string QualAdv_TC
		{
			get
			{
				return this._QualAdv_TC;
			}
			set
			{
				if ((this._QualAdv_TC != value))
				{
					this.OnQualAdv_TCChanging(value);
					this.SendPropertyChanging();
					this._QualAdv_TC = value;
					this.SendPropertyChanged("QualAdv_TC");
					this.OnQualAdv_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualAdv_Number", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> QualAdv_Number
		{
			get
			{
				return this._QualAdv_Number;
			}
			set
			{
				if ((this._QualAdv_Number != value))
				{
					this.OnQualAdv_NumberChanging(value);
					this.SendPropertyChanging();
					this._QualAdv_Number = value;
					this.SendPropertyChanged("QualAdv_Number");
					this.OnQualAdv_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTakenInGroupDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastTakenInGroupDate
		{
			get
			{
				return this._LastTakenInGroupDate;
			}
			set
			{
				if ((this._LastTakenInGroupDate != value))
				{
					this.OnLastTakenInGroupDateChanging(value);
					this.SendPropertyChanging();
					this._LastTakenInGroupDate = value;
					this.SendPropertyChanged("LastTakenInGroupDate");
					this.OnLastTakenInGroupDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresenceType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PresenceType_TC
		{
			get
			{
				return this._PresenceType_TC;
			}
			set
			{
				if ((this._PresenceType_TC != value))
				{
					this.OnPresenceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PresenceType_TC = value;
					this.SendPropertyChanged("PresenceType_TC");
					this.OnPresenceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assistant_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Assistant_TC
		{
			get
			{
				return this._Assistant_TC;
			}
			set
			{
				if ((this._Assistant_TC != value))
				{
					this.OnAssistant_TCChanging(value);
					this.SendPropertyChanging();
					this._Assistant_TC = value;
					this.SendPropertyChanged("Assistant_TC");
					this.OnAssistant_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHungry", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsHungry
		{
			get
			{
				return this._IsHungry;
			}
			set
			{
				if ((this._IsHungry != value))
				{
					this.OnIsHungryChanging(value);
					this.SendPropertyChanging();
					this._IsHungry = value;
					this.SendPropertyChanged("IsHungry");
					this.OnIsHungryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextContactDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> NextContactDate
		{
			get
			{
				return this._NextContactDate;
			}
			set
			{
				if ((this._NextContactDate != value))
				{
					this.OnNextContactDateChanging(value);
					this.SendPropertyChanging();
					this._NextContactDate = value;
					this.SendPropertyChanged("NextContactDate");
					this.OnNextContactDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="Money")]
		public System.Nullable<decimal> Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonForLearning")]
		public string ReasonForLearning
		{
			get
			{
				return this._ReasonForLearning;
			}
			set
			{
				if ((this._ReasonForLearning != value))
				{
					this.OnReasonForLearningChanging(value);
					this.SendPropertyChanging();
					this._ReasonForLearning = value;
					this.SendPropertyChanged("ReasonForLearning");
					this.OnReasonForLearningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpressOrder")]
		public bool IsExpressOrder
		{
			get
			{
				return this._IsExpressOrder;
			}
			set
			{
				if ((this._IsExpressOrder != value))
				{
					this.OnIsExpressOrderChanging(value);
					this.SendPropertyChanging();
					this._IsExpressOrder = value;
					this.SendPropertyChanged("IsExpressOrder");
					this.OnIsExpressOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputSource_TC")]
		public char InputSource_TC
		{
			get
			{
				return this._InputSource_TC;
			}
			set
			{
				if ((this._InputSource_TC != value))
				{
					this.OnInputSource_TCChanging(value);
					this.SendPropertyChanging();
					this._InputSource_TC = value;
					this.SendPropertyChanged("InputSource_TC");
					this.OnInputSource_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatNumber")]
		public System.Nullable<short> SeatNumber
		{
			get
			{
				return this._SeatNumber;
			}
			set
			{
				if ((this._SeatNumber != value))
				{
					this.OnSeatNumberChanging(value);
					this.SendPropertyChanging();
					this._SeatNumber = value;
					this.SendPropertyChanged("SeatNumber");
					this.OnSeatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountMoney")]
		public System.Nullable<decimal> DiscountMoney
		{
			get
			{
				return this._DiscountMoney;
			}
			set
			{
				if ((this._DiscountMoney != value))
				{
					this.OnDiscountMoneyChanging(value);
					this.SendPropertyChanging();
					this._DiscountMoney = value;
					this.SendPropertyChanged("DiscountMoney");
					this.OnDiscountMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPromocode")]
		public string OrderPromocode
		{
			get
			{
				return this._OrderPromocode;
			}
			set
			{
				if ((this._OrderPromocode != value))
				{
					this.OnOrderPromocodeChanging(value);
					this.SendPropertyChanging();
					this._OrderPromocode = value;
					this.SendPropertyChanged("OrderPromocode");
					this.OnOrderPromocodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEntryTestPassed")]
		public bool IsEntryTestPassed
		{
			get
			{
				return this._IsEntryTestPassed;
			}
			set
			{
				if ((this._IsEntryTestPassed != value))
				{
					this.OnIsEntryTestPassedChanging(value);
					this.SendPropertyChanging();
					this._IsEntryTestPassed = value;
					this.SendPropertyChanged("IsEntryTestPassed");
					this.OnIsEntryTestPassedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPartialPayment")]
		public bool IsPartialPayment
		{
			get
			{
				return this._IsPartialPayment;
			}
			set
			{
				if ((this._IsPartialPayment != value))
				{
					this.OnIsPartialPaymentChanging(value);
					this.SendPropertyChanging();
					this._IsPartialPayment = value;
					this.SendPropertyChanged("IsPartialPayment");
					this.OnIsPartialPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartialPayment")]
		public System.Nullable<decimal> PartialPayment
		{
			get
			{
				return this._PartialPayment;
			}
			set
			{
				if ((this._PartialPayment != value))
				{
					this.OnPartialPaymentChanging(value);
					this.SendPropertyChanging();
					this._PartialPayment = value;
					this.SendPropertyChanged("PartialPayment");
					this.OnPartialPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode")]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditRequest_ID")]
		public System.Nullable<decimal> CreditRequest_ID
		{
			get
			{
				return this._CreditRequest_ID;
			}
			set
			{
				if ((this._CreditRequest_ID != value))
				{
					this.OnCreditRequest_IDChanging(value);
					this.SendPropertyChanging();
					this._CreditRequest_ID = value;
					this.SendPropertyChanged("CreditRequest_ID");
					this.OnCreditRequest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalExamMark_TC")]
		public string FinalExamMark_TC
		{
			get
			{
				return this._FinalExamMark_TC;
			}
			set
			{
				if ((this._FinalExamMark_TC != value))
				{
					this.OnFinalExamMark_TCChanging(value);
					this.SendPropertyChanging();
					this._FinalExamMark_TC = value;
					this.SendPropertyChanged("FinalExamMark_TC");
					this.OnFinalExamMark_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteTeacher1")]
		public string FavoriteTeacher1
		{
			get
			{
				return this._FavoriteTeacher1;
			}
			set
			{
				if ((this._FavoriteTeacher1 != value))
				{
					this.OnFavoriteTeacher1Changing(value);
					this.SendPropertyChanging();
					this._FavoriteTeacher1 = value;
					this.SendPropertyChanged("FavoriteTeacher1");
					this.OnFavoriteTeacher1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentsInGroupsCalc", Storage="_StudentsInGroupsCalc", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsUnique=true, IsForeignKey=false)]
		public StudentsInGroupsCalc StudentsInGroupsCalc
		{
			get
			{
				return this._StudentsInGroupsCalc.Entity;
			}
			set
			{
				StudentsInGroupsCalc previousValue = this._StudentsInGroupsCalc.Entity;
				if (((previousValue != value) 
							|| (this._StudentsInGroupsCalc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentsInGroupsCalc.Entity = null;
						previousValue.StudentInGroup = null;
					}
					this._StudentsInGroupsCalc.Entity = value;
					if ((value != null))
					{
						value.StudentInGroup = this;
					}
					this.SendPropertyChanged("StudentsInGroupsCalc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_Questionnaire", Storage="_Questionnaires", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID")]
		public EntitySet<Questionnaire> Questionnaires
		{
			get
			{
				return this._Questionnaires;
			}
			set
			{
				this._Questionnaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupLecture", Storage="_StudentInGroupLectures", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID")]
		public EntitySet<StudentInGroupLecture> StudentInGroupLectures
		{
			get
			{
				return this._StudentInGroupLectures;
			}
			set
			{
				this._StudentInGroupLectures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupSource", Storage="_StudentInGroupSources", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID")]
		public EntitySet<StudentInGroupSource> StudentInGroupSources
		{
			get
			{
				return this._StudentInGroupSources;
			}
			set
			{
				this._StudentInGroupSources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupExtras", Storage="_StudentInGroupExtras", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID")]
		public EntitySet<StudentInGroupExtras> StudentInGroupExtras
		{
			get
			{
				return this._StudentInGroupExtras;
			}
			set
			{
				this._StudentInGroupExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_Certificate", Storage="_Certificates", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID")]
		public EntitySet<Certificate> Certificates
		{
			get
			{
				return this._Certificates;
			}
			set
			{
				this._Certificates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_StudentInGroup", Storage="_Group", ThisKey="Group_ID", OtherKey="Group_ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.StudentInGroups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.StudentInGroups.Add(this);
						this._Group_ID = value.Group_ID;
					}
					else
					{
						this._Group_ID = default(decimal);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_StudentInGroup", Storage="_Employee", ThisKey="Consultant_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Consultant
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.StudentInGroups.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.StudentInGroups.Add(this);
						this._Consultant_TC = value.Employee_TC;
					}
					else
					{
						this._Consultant_TC = default(string);
					}
					this.SendPropertyChanged("Consultant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentInGroup", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentInGroups.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentInGroups.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_StudentInGroup", Storage="_Exam", ThisKey="Exam_ID", OtherKey="Exam_ID", IsForeignKey=true)]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.StudentInGroups.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.StudentInGroups.Add(this);
						this._Exam_ID = value.Exam_ID;
					}
					else
					{
						this._Exam_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Org_StudentInGroup", Storage="_Org", ThisKey="Org_ID", OtherKey="Org_ID", IsForeignKey=true)]
		public Org Org
		{
			get
			{
				return this._Org.Entity;
			}
			set
			{
				Org previousValue = this._Org.Entity;
				if (((previousValue != value) 
							|| (this._Org.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Org.Entity = null;
						previousValue.StudentInGroups.Remove(this);
					}
					this._Org.Entity = value;
					if ((value != null))
					{
						value.StudentInGroups.Add(this);
						this._Org_ID = value.Org_ID;
					}
					else
					{
						this._Org_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Org");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = this;
		}
		
		private void detach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = null;
		}
		
		private void attach_StudentInGroupLectures(StudentInGroupLecture entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = this;
		}
		
		private void detach_StudentInGroupLectures(StudentInGroupLecture entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = null;
		}
		
		private void attach_StudentInGroupSources(StudentInGroupSource entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = this;
		}
		
		private void detach_StudentInGroupSources(StudentInGroupSource entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = null;
		}
		
		private void attach_StudentInGroupExtras(StudentInGroupExtras entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = this;
		}
		
		private void detach_StudentInGroupExtras(StudentInGroupExtras entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = null;
		}
		
		private void attach_Certificates(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = this;
		}
		
		private void detach_Certificates(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.StudentInGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tVendors")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vendor_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private string _AuthorizationType_TC;
		
		private bool _ForMainPage;
		
		private string _CertificationDescription;
		
		private string _TestingDescription;
		
		private int _WebSortOrder;
		
		private EntitySet<Certification> _Certifications;
		
		private EntitySet<Exam> _Exams;
		
		private EntityRef<AuthorizationType> _AuthorizationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendor_IDChanging(int value);
    partial void OnVendor_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnAuthorizationType_TCChanging(string value);
    partial void OnAuthorizationType_TCChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    partial void OnCertificationDescriptionChanging(string value);
    partial void OnCertificationDescriptionChanged();
    partial void OnTestingDescriptionChanging(string value);
    partial void OnTestingDescriptionChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    #endregion
		
		public Vendor()
		{
			this._Certifications = new EntitySet<Certification>(new Action<Certification>(this.attach_Certifications), new Action<Certification>(this.detach_Certifications));
			this._Exams = new EntitySet<Exam>(new Action<Exam>(this.attach_Exams), new Action<Exam>(this.detach_Exams));
			this._AuthorizationType = default(EntityRef<AuthorizationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vendor_ID
		{
			get
			{
				return this._Vendor_ID;
			}
			set
			{
				if ((this._Vendor_ID != value))
				{
					this.OnVendor_IDChanging(value);
					this.SendPropertyChanging();
					this._Vendor_ID = value;
					this.SendPropertyChanged("Vendor_ID");
					this.OnVendor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationType_TC", DbType="VarChar(10)")]
		public string AuthorizationType_TC
		{
			get
			{
				return this._AuthorizationType_TC;
			}
			set
			{
				if ((this._AuthorizationType_TC != value))
				{
					if (this._AuthorizationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorizationType_TCChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationType_TC = value;
					this.SendPropertyChanged("AuthorizationType_TC");
					this.OnAuthorizationType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage")]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationDescription", UpdateCheck=UpdateCheck.Never)]
		public string CertificationDescription
		{
			get
			{
				return this._CertificationDescription;
			}
			set
			{
				if ((this._CertificationDescription != value))
				{
					this.OnCertificationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CertificationDescription = value;
					this.SendPropertyChanged("CertificationDescription");
					this.OnCertificationDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingDescription", UpdateCheck=UpdateCheck.Never)]
		public string TestingDescription
		{
			get
			{
				return this._TestingDescription;
			}
			set
			{
				if ((this._TestingDescription != value))
				{
					this.OnTestingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TestingDescription = value;
					this.SendPropertyChanged("TestingDescription");
					this.OnTestingDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Certification", Storage="_Certifications", ThisKey="Vendor_ID", OtherKey="Vendor_ID")]
		public EntitySet<Certification> Certifications
		{
			get
			{
				return this._Certifications;
			}
			set
			{
				this._Certifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Exam", Storage="_Exams", ThisKey="Vendor_ID", OtherKey="Vendor_ID")]
		public EntitySet<Exam> Exams
		{
			get
			{
				return this._Exams;
			}
			set
			{
				this._Exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorizationType_Vendor", Storage="_AuthorizationType", ThisKey="AuthorizationType_TC", OtherKey="AuthorizationType_TC", IsForeignKey=true)]
		public AuthorizationType AuthorizationType
		{
			get
			{
				return this._AuthorizationType.Entity;
			}
			set
			{
				AuthorizationType previousValue = this._AuthorizationType.Entity;
				if (((previousValue != value) 
							|| (this._AuthorizationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuthorizationType.Entity = null;
						previousValue.Vendors.Remove(this);
					}
					this._AuthorizationType.Entity = value;
					if ((value != null))
					{
						value.Vendors.Add(this);
						this._AuthorizationType_TC = value.AuthorizationType_TC;
					}
					else
					{
						this._AuthorizationType_TC = default(string);
					}
					this.SendPropertyChanged("AuthorizationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Certifications(Certification entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Certifications(Certification entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
		
		private void attach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Exams(Exam entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLectures")]
	public partial class Lecture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Lecture_ID;
		
		private decimal _Group_ID;
		
		private System.DateTime _LectureDateBeg;
		
		private System.DateTime _LectureDateEnd;
		
		private short _Breaks;
		
		private string _Teacher_TC;
		
		private string _ClassRoom_TC;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.Nullable<System.DateTime> _TrainerComingTime;
		
		private bool _IsQualityAssurance;
		
		private string _WebinarURL;
		
		private System.Nullable<decimal> _WebinarLicense_ID;
		
		private EntitySet<StudentInGroupLecture> _StudentInGroupLectures;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<ClassRoom> _ClassRoom;
		
		private EntityRef<WebinarLicense> _WebinarLicense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLecture_IDChanging(decimal value);
    partial void OnLecture_IDChanged();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnLectureDateBegChanging(System.DateTime value);
    partial void OnLectureDateBegChanged();
    partial void OnLectureDateEndChanging(System.DateTime value);
    partial void OnLectureDateEndChanged();
    partial void OnBreaksChanging(short value);
    partial void OnBreaksChanged();
    partial void OnTeacher_TCChanging(string value);
    partial void OnTeacher_TCChanged();
    partial void OnClassRoom_TCChanging(string value);
    partial void OnClassRoom_TCChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnTrainerComingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainerComingTimeChanged();
    partial void OnIsQualityAssuranceChanging(bool value);
    partial void OnIsQualityAssuranceChanged();
    partial void OnWebinarURLChanging(string value);
    partial void OnWebinarURLChanged();
    partial void OnWebinarLicense_IDChanging(System.Nullable<decimal> value);
    partial void OnWebinarLicense_IDChanged();
    #endregion
		
		public Lecture()
		{
			this._StudentInGroupLectures = new EntitySet<StudentInGroupLecture>(new Action<StudentInGroupLecture>(this.attach_StudentInGroupLectures), new Action<StudentInGroupLecture>(this.detach_StudentInGroupLectures));
			this._Group = default(EntityRef<Group>);
			this._ClassRoom = default(EntityRef<ClassRoom>);
			this._WebinarLicense = default(EntityRef<WebinarLicense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lecture_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Lecture_ID
		{
			get
			{
				return this._Lecture_ID;
			}
			set
			{
				if ((this._Lecture_ID != value))
				{
					this.OnLecture_IDChanging(value);
					this.SendPropertyChanging();
					this._Lecture_ID = value;
					this.SendPropertyChanged("Lecture_ID");
					this.OnLecture_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LectureDateBeg", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LectureDateBeg
		{
			get
			{
				return this._LectureDateBeg;
			}
			set
			{
				if ((this._LectureDateBeg != value))
				{
					this.OnLectureDateBegChanging(value);
					this.SendPropertyChanging();
					this._LectureDateBeg = value;
					this.SendPropertyChanged("LectureDateBeg");
					this.OnLectureDateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LectureDateEnd", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LectureDateEnd
		{
			get
			{
				return this._LectureDateEnd;
			}
			set
			{
				if ((this._LectureDateEnd != value))
				{
					this.OnLectureDateEndChanging(value);
					this.SendPropertyChanging();
					this._LectureDateEnd = value;
					this.SendPropertyChanged("LectureDateEnd");
					this.OnLectureDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breaks", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short Breaks
		{
			get
			{
				return this._Breaks;
			}
			set
			{
				if ((this._Breaks != value))
				{
					this.OnBreaksChanging(value);
					this.SendPropertyChanging();
					this._Breaks = value;
					this.SendPropertyChanged("Breaks");
					this.OnBreaksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Teacher_TC
		{
			get
			{
				return this._Teacher_TC;
			}
			set
			{
				if ((this._Teacher_TC != value))
				{
					this.OnTeacher_TCChanging(value);
					this.SendPropertyChanging();
					this._Teacher_TC = value;
					this.SendPropertyChanged("Teacher_TC");
					this.OnTeacher_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_TC", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string ClassRoom_TC
		{
			get
			{
				return this._ClassRoom_TC;
			}
			set
			{
				if ((this._ClassRoom_TC != value))
				{
					if (this._ClassRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassRoom_TCChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_TC = value;
					this.SendPropertyChanged("ClassRoom_TC");
					this.OnClassRoom_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainerComingTime", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TrainerComingTime
		{
			get
			{
				return this._TrainerComingTime;
			}
			set
			{
				if ((this._TrainerComingTime != value))
				{
					this.OnTrainerComingTimeChanging(value);
					this.SendPropertyChanging();
					this._TrainerComingTime = value;
					this.SendPropertyChanged("TrainerComingTime");
					this.OnTrainerComingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQualityAssurance", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsQualityAssurance
		{
			get
			{
				return this._IsQualityAssurance;
			}
			set
			{
				if ((this._IsQualityAssurance != value))
				{
					this.OnIsQualityAssuranceChanging(value);
					this.SendPropertyChanging();
					this._IsQualityAssurance = value;
					this.SendPropertyChanged("IsQualityAssurance");
					this.OnIsQualityAssuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarURL")]
		public string WebinarURL
		{
			get
			{
				return this._WebinarURL;
			}
			set
			{
				if ((this._WebinarURL != value))
				{
					this.OnWebinarURLChanging(value);
					this.SendPropertyChanging();
					this._WebinarURL = value;
					this.SendPropertyChanged("WebinarURL");
					this.OnWebinarURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarLicense_ID")]
		public System.Nullable<decimal> WebinarLicense_ID
		{
			get
			{
				return this._WebinarLicense_ID;
			}
			set
			{
				if ((this._WebinarLicense_ID != value))
				{
					if (this._WebinarLicense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebinarLicense_IDChanging(value);
					this.SendPropertyChanging();
					this._WebinarLicense_ID = value;
					this.SendPropertyChanged("WebinarLicense_ID");
					this.OnWebinarLicense_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_StudentInGroupLecture", Storage="_StudentInGroupLectures", ThisKey="Lecture_ID", OtherKey="Lecture_ID")]
		public EntitySet<StudentInGroupLecture> StudentInGroupLectures
		{
			get
			{
				return this._StudentInGroupLectures;
			}
			set
			{
				this._StudentInGroupLectures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Lecture", Storage="_Group", ThisKey="Group_ID", OtherKey="Group_ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Lectures.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Lectures.Add(this);
						this._Group_ID = value.Group_ID;
					}
					else
					{
						this._Group_ID = default(decimal);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_Lecture", Storage="_ClassRoom", ThisKey="ClassRoom_TC", OtherKey="ClassRoom_TC", IsForeignKey=true)]
		public ClassRoom ClassRoom
		{
			get
			{
				return this._ClassRoom.Entity;
			}
			set
			{
				ClassRoom previousValue = this._ClassRoom.Entity;
				if (((previousValue != value) 
							|| (this._ClassRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassRoom.Entity = null;
						previousValue.Lectures.Remove(this);
					}
					this._ClassRoom.Entity = value;
					if ((value != null))
					{
						value.Lectures.Add(this);
						this._ClassRoom_TC = value.ClassRoom_TC;
					}
					else
					{
						this._ClassRoom_TC = default(string);
					}
					this.SendPropertyChanged("ClassRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebinarLicense_Lecture", Storage="_WebinarLicense", ThisKey="WebinarLicense_ID", OtherKey="WebinarLicense_ID", IsForeignKey=true)]
		public WebinarLicense WebinarLicense
		{
			get
			{
				return this._WebinarLicense.Entity;
			}
			set
			{
				WebinarLicense previousValue = this._WebinarLicense.Entity;
				if (((previousValue != value) 
							|| (this._WebinarLicense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebinarLicense.Entity = null;
						previousValue.Lectures.Remove(this);
					}
					this._WebinarLicense.Entity = value;
					if ((value != null))
					{
						value.Lectures.Add(this);
						this._WebinarLicense_ID = value.WebinarLicense_ID;
					}
					else
					{
						this._WebinarLicense_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("WebinarLicense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInGroupLectures(StudentInGroupLecture entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = this;
		}
		
		private void detach_StudentInGroupLectures(StudentInGroupLecture entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCoursePrerequisites")]
	public partial class CoursePrerequisite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CoursePrerequisite_ID;
		
		private string _Course_TC;
		
		private string _Text;
		
		private string _RequiredCourse_TC;
		
		private System.Nullable<decimal> _Exam_ID;
		
		private System.Nullable<decimal> _Test_ID;
		
		private bool _IsRequired;
		
		private int _SortOrder;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Course> _RequiredCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoursePrerequisite_IDChanging(decimal value);
    partial void OnCoursePrerequisite_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnRequiredCourse_TCChanging(string value);
    partial void OnRequiredCourse_TCChanged();
    partial void OnExam_IDChanging(System.Nullable<decimal> value);
    partial void OnExam_IDChanged();
    partial void OnTest_IDChanging(System.Nullable<decimal> value);
    partial void OnTest_IDChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public CoursePrerequisite()
		{
			this._Course = default(EntityRef<Course>);
			this._RequiredCourse = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursePrerequisite_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CoursePrerequisite_ID
		{
			get
			{
				return this._CoursePrerequisite_ID;
			}
			set
			{
				if ((this._CoursePrerequisite_ID != value))
				{
					this.OnCoursePrerequisite_IDChanging(value);
					this.SendPropertyChanging();
					this._CoursePrerequisite_ID = value;
					this.SendPropertyChanged("CoursePrerequisite_ID");
					this.OnCoursePrerequisite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(1500)", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredCourse_TC", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RequiredCourse_TC
		{
			get
			{
				return this._RequiredCourse_TC;
			}
			set
			{
				if ((this._RequiredCourse_TC != value))
				{
					if (this._RequiredCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._RequiredCourse_TC = value;
					this.SendPropertyChanged("RequiredCourse_TC");
					this.OnRequiredCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_ID", DbType="Decimal(18,0)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Test_ID
		{
			get
			{
				return this._Test_ID;
			}
			set
			{
				if ((this._Test_ID != value))
				{
					this.OnTest_IDChanging(value);
					this.SendPropertyChanging();
					this._Test_ID = value;
					this.SendPropertyChanged("Test_ID");
					this.OnTest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursePrerequisite", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CoursePrerequisites.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CoursePrerequisites.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursePrerequisite1", Storage="_RequiredCourse", ThisKey="RequiredCourse_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course RequiredCourse
		{
			get
			{
				return this._RequiredCourse.Entity;
			}
			set
			{
				Course previousValue = this._RequiredCourse.Entity;
				if (((previousValue != value) 
							|| (this._RequiredCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequiredCourse.Entity = null;
						previousValue.RequiredPrerequisites.Remove(this);
					}
					this._RequiredCourse.Entity = value;
					if ((value != null))
					{
						value.RequiredPrerequisites.Add(this);
						this._RequiredCourse_TC = value.Course_TC;
					}
					else
					{
						this._RequiredCourse_TC = default(string);
					}
					this.SendPropertyChanged("RequiredCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tGroupsCalc")]
	public partial class GroupsCalc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Group_ID;
		
		private short _NumOfStudents;
		
		private short _NumOfReserves;
		
		private short _NumOfWebinarists;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroup_IDChanging(decimal value);
    partial void OnGroup_IDChanged();
    partial void OnNumOfStudentsChanging(short value);
    partial void OnNumOfStudentsChanged();
    partial void OnNumOfReservesChanging(short value);
    partial void OnNumOfReservesChanged();
    partial void OnNumOfWebinaristsChanging(short value);
    partial void OnNumOfWebinaristsChanged();
    #endregion
		
		public GroupsCalc()
		{
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfStudents", DbType="SmallInt NOT NULL")]
		public short NumOfStudents
		{
			get
			{
				return this._NumOfStudents;
			}
			set
			{
				if ((this._NumOfStudents != value))
				{
					this.OnNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._NumOfStudents = value;
					this.SendPropertyChanged("NumOfStudents");
					this.OnNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfReserves", DbType="SmallInt NOT NULL")]
		public short NumOfReserves
		{
			get
			{
				return this._NumOfReserves;
			}
			set
			{
				if ((this._NumOfReserves != value))
				{
					this.OnNumOfReservesChanging(value);
					this.SendPropertyChanging();
					this._NumOfReserves = value;
					this.SendPropertyChanged("NumOfReserves");
					this.OnNumOfReservesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfWebinarists")]
		public short NumOfWebinarists
		{
			get
			{
				return this._NumOfWebinarists;
			}
			set
			{
				if ((this._NumOfWebinarists != value))
				{
					this.OnNumOfWebinaristsChanging(value);
					this.SendPropertyChanging();
					this._NumOfWebinarists = value;
					this.SendPropertyChanged("NumOfWebinarists");
					this.OnNumOfWebinaristsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupsCalc_Group", Storage="_Group", ThisKey="Group_ID", OtherKey="Group_ID", IsUnique=true, IsForeignKey=false)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupCalc = null;
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupCalc = this;
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseCategories")]
	public partial class CourseCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseCategory_ID;
		
		private string _Category_TC;
		
		private string _Course_TC;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseCategory_IDChanging(decimal value);
    partial void OnCourseCategory_IDChanged();
    partial void OnCategory_TCChanging(string value);
    partial void OnCategory_TCChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    #endregion
		
		public CourseCategory()
		{
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCategory_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CourseCategory_ID
		{
			get
			{
				return this._CourseCategory_ID;
			}
			set
			{
				if ((this._CourseCategory_ID != value))
				{
					this.OnCourseCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseCategory_ID = value;
					this.SendPropertyChanged("CourseCategory_ID");
					this.OnCourseCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category_TC
		{
			get
			{
				return this._Category_TC;
			}
			set
			{
				if ((this._Category_TC != value))
				{
					this.OnCategory_TCChanging(value);
					this.SendPropertyChanging();
					this._Category_TC = value;
					this.SendPropertyChanged("Category_TC");
					this.OnCategory_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseCategory", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseCategories.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseCategories.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tProviders")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Provider_ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<ExamProvider> _ExamProviders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvider_IDChanging(int value);
    partial void OnProvider_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Provider()
		{
			this._ExamProviders = new EntitySet<ExamProvider>(new Action<ExamProvider>(this.attach_ExamProviders), new Action<ExamProvider>(this.detach_ExamProviders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Provider_ID
		{
			get
			{
				return this._Provider_ID;
			}
			set
			{
				if ((this._Provider_ID != value))
				{
					this.OnProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._Provider_ID = value;
					this.SendPropertyChanged("Provider_ID");
					this.OnProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_ExamProvider", Storage="_ExamProviders", ThisKey="Provider_ID", OtherKey="Provider_ID")]
		public EntitySet<ExamProvider> ExamProviders
		{
			get
			{
				return this._ExamProviders;
			}
			set
			{
				this._ExamProviders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamProviders(ExamProvider entity)
		{
			this.SendPropertyChanging();
			entity.Provider = this;
		}
		
		private void detach_ExamProviders(ExamProvider entity)
		{
			this.SendPropertyChanging();
			entity.Provider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _City_TC;
		
		private string _CityName;
		
		private string _ShortName;
		
		private int _SortOrder;
		
		private string _Suffix;
		
		private string _Description;
		
		private string _UrlName;
		
		private string _Email;
		
		private string _Phones;
		
		private EntitySet<BranchOffice> _BranchOffices;
		
		private EntitySet<CitiesPriceType> _CitiesPriceTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCity_TCChanging(string value);
    partial void OnCity_TCChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhonesChanging(string value);
    partial void OnPhonesChanged();
    #endregion
		
		public City()
		{
			this._BranchOffices = new EntitySet<BranchOffice>(new Action<BranchOffice>(this.attach_BranchOffices), new Action<BranchOffice>(this.detach_BranchOffices));
			this._CitiesPriceTypes = new EntitySet<CitiesPriceType>(new Action<CitiesPriceType>(this.attach_CitiesPriceTypes), new Action<CitiesPriceType>(this.detach_CitiesPriceTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string City_TC
		{
			get
			{
				return this._City_TC;
			}
			set
			{
				if ((this._City_TC != value))
				{
					this.OnCity_TCChanging(value);
					this.SendPropertyChanging();
					this._City_TC = value;
					this.SendPropertyChanged("City_TC");
					this.OnCity_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="VarChar(50)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(200)")]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phones", DbType="VarChar(500)")]
		public string Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				if ((this._Phones != value))
				{
					this.OnPhonesChanging(value);
					this.SendPropertyChanging();
					this._Phones = value;
					this.SendPropertyChanged("Phones");
					this.OnPhonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_BranchOffice", Storage="_BranchOffices", ThisKey="City_TC", OtherKey="TrueCity_TC")]
		public EntitySet<BranchOffice> BranchOffices
		{
			get
			{
				return this._BranchOffices;
			}
			set
			{
				this._BranchOffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CitiesPriceType", Storage="_CitiesPriceTypes", ThisKey="City_TC", OtherKey="City_TC")]
		public EntitySet<CitiesPriceType> CitiesPriceTypes
		{
			get
			{
				return this._CitiesPriceTypes;
			}
			set
			{
				this._CitiesPriceTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchOffices(BranchOffice entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_BranchOffices(BranchOffice entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_CitiesPriceTypes(CitiesPriceType entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_CitiesPriceTypes(CitiesPriceType entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPriceTypes")]
	public partial class PriceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PriceType_TC;
		
		private string _LongName;
		
		private System.DateTime _InputDate;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private char _PriceListType_TC;
		
		private string _Notes;
		
		private byte _SortOrder;
		
		private bool _IsFeeding;
		
		private bool _IsEWEOnly;
		
		private bool _IsEWEAvailable;
		
		private string _OppositePriceType_TC;
		
		private string _BasePriceType_TC;
		
		private System.Nullable<bool> _CalcTrackModulePrices;
		
		private string _Description;
		
		private bool _IsVisible;
		
		private bool _IsNotInGroup;
		
		private bool _UseInTracksPrice;
		
		private EntitySet<PriceView> _PriceViews;
		
		private EntitySet<CitiesPriceType> _CitiesPriceTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnPriceListType_TCChanging(char value);
    partial void OnPriceListType_TCChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortOrderChanging(byte value);
    partial void OnSortOrderChanged();
    partial void OnIsFeedingChanging(bool value);
    partial void OnIsFeedingChanged();
    partial void OnIsEWEOnlyChanging(bool value);
    partial void OnIsEWEOnlyChanged();
    partial void OnIsEWEAvailableChanging(bool value);
    partial void OnIsEWEAvailableChanged();
    partial void OnOppositePriceType_TCChanging(string value);
    partial void OnOppositePriceType_TCChanged();
    partial void OnBasePriceType_TCChanging(string value);
    partial void OnBasePriceType_TCChanged();
    partial void OnCalcTrackModulePricesChanging(System.Nullable<bool> value);
    partial void OnCalcTrackModulePricesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsNotInGroupChanging(bool value);
    partial void OnIsNotInGroupChanged();
    partial void OnUseInTracksPriceChanging(bool value);
    partial void OnUseInTracksPriceChanged();
    #endregion
		
		public PriceType()
		{
			this._PriceViews = new EntitySet<PriceView>(new Action<PriceView>(this.attach_PriceViews), new Action<PriceView>(this.detach_PriceViews));
			this._CitiesPriceTypes = new EntitySet<CitiesPriceType>(new Action<CitiesPriceType>(this.attach_CitiesPriceTypes), new Action<CitiesPriceType>(this.detach_CitiesPriceTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListType_TC", DbType="VarChar(1) NOT NULL")]
		public char PriceListType_TC
		{
			get
			{
				return this._PriceListType_TC;
			}
			set
			{
				if ((this._PriceListType_TC != value))
				{
					this.OnPriceListType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceListType_TC = value;
					this.SendPropertyChanged("PriceListType_TC");
					this.OnPriceListType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="TinyInt NOT NULL")]
		public byte SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeeding", DbType="Bit NOT NULL")]
		public bool IsFeeding
		{
			get
			{
				return this._IsFeeding;
			}
			set
			{
				if ((this._IsFeeding != value))
				{
					this.OnIsFeedingChanging(value);
					this.SendPropertyChanging();
					this._IsFeeding = value;
					this.SendPropertyChanged("IsFeeding");
					this.OnIsFeedingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEWEOnly", DbType="Bit NOT NULL")]
		public bool IsEWEOnly
		{
			get
			{
				return this._IsEWEOnly;
			}
			set
			{
				if ((this._IsEWEOnly != value))
				{
					this.OnIsEWEOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsEWEOnly = value;
					this.SendPropertyChanged("IsEWEOnly");
					this.OnIsEWEOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEWEAvailable", DbType="Bit NOT NULL")]
		public bool IsEWEAvailable
		{
			get
			{
				return this._IsEWEAvailable;
			}
			set
			{
				if ((this._IsEWEAvailable != value))
				{
					this.OnIsEWEAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsEWEAvailable = value;
					this.SendPropertyChanged("IsEWEAvailable");
					this.OnIsEWEAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OppositePriceType_TC", DbType="VarChar(5)")]
		public string OppositePriceType_TC
		{
			get
			{
				return this._OppositePriceType_TC;
			}
			set
			{
				if ((this._OppositePriceType_TC != value))
				{
					this.OnOppositePriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._OppositePriceType_TC = value;
					this.SendPropertyChanged("OppositePriceType_TC");
					this.OnOppositePriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePriceType_TC", DbType="VarChar(5)")]
		public string BasePriceType_TC
		{
			get
			{
				return this._BasePriceType_TC;
			}
			set
			{
				if ((this._BasePriceType_TC != value))
				{
					this.OnBasePriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._BasePriceType_TC = value;
					this.SendPropertyChanged("BasePriceType_TC");
					this.OnBasePriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcTrackModulePrices", DbType="Bit")]
		public System.Nullable<bool> CalcTrackModulePrices
		{
			get
			{
				return this._CalcTrackModulePrices;
			}
			set
			{
				if ((this._CalcTrackModulePrices != value))
				{
					this.OnCalcTrackModulePricesChanging(value);
					this.SendPropertyChanging();
					this._CalcTrackModulePrices = value;
					this.SendPropertyChanged("CalcTrackModulePrices");
					this.OnCalcTrackModulePricesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotInGroup", DbType="Bit NOT NULL")]
		public bool IsNotInGroup
		{
			get
			{
				return this._IsNotInGroup;
			}
			set
			{
				if ((this._IsNotInGroup != value))
				{
					this.OnIsNotInGroupChanging(value);
					this.SendPropertyChanging();
					this._IsNotInGroup = value;
					this.SendPropertyChanged("IsNotInGroup");
					this.OnIsNotInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseInTracksPrice", DbType="Bit NOT NULL")]
		public bool UseInTracksPrice
		{
			get
			{
				return this._UseInTracksPrice;
			}
			set
			{
				if ((this._UseInTracksPrice != value))
				{
					this.OnUseInTracksPriceChanging(value);
					this.SendPropertyChanging();
					this._UseInTracksPrice = value;
					this.SendPropertyChanged("UseInTracksPrice");
					this.OnUseInTracksPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceType_PriceView", Storage="_PriceViews", ThisKey="PriceType_TC", OtherKey="PriceType_TC")]
		public EntitySet<PriceView> PriceViews
		{
			get
			{
				return this._PriceViews;
			}
			set
			{
				this._PriceViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceType_CitiesPriceType", Storage="_CitiesPriceTypes", ThisKey="PriceType_TC", OtherKey="PriceType_TC")]
		public EntitySet<CitiesPriceType> CitiesPriceTypes
		{
			get
			{
				return this._CitiesPriceTypes;
			}
			set
			{
				this._CitiesPriceTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PriceViews(PriceView entity)
		{
			this.SendPropertyChanging();
			entity.PriceType = this;
		}
		
		private void detach_PriceViews(PriceView entity)
		{
			this.SendPropertyChanging();
			entity.PriceType = null;
		}
		
		private void attach_CitiesPriceTypes(CitiesPriceType entity)
		{
			this.SendPropertyChanging();
			entity.PriceType = this;
		}
		
		private void detach_CitiesPriceTypes(CitiesPriceType entity)
		{
			this.SendPropertyChanging();
			entity.PriceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCitiesPriceTypes")]
	public partial class CitiesPriceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _City_TC;
		
		private string _PriceType_TC;
		
		private System.Nullable<int> _SortOrder;
		
		private EntityRef<PriceType> _PriceType;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCity_TCChanging(string value);
    partial void OnCity_TCChanged();
    partial void OnPriceType_TCChanging(string value);
    partial void OnPriceType_TCChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public CitiesPriceType()
		{
			this._PriceType = default(EntityRef<PriceType>);
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string City_TC
		{
			get
			{
				return this._City_TC;
			}
			set
			{
				if ((this._City_TC != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCity_TCChanging(value);
					this.SendPropertyChanging();
					this._City_TC = value;
					this.SendPropertyChanged("City_TC");
					this.OnCity_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PriceType_TC
		{
			get
			{
				return this._PriceType_TC;
			}
			set
			{
				if ((this._PriceType_TC != value))
				{
					if (this._PriceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._PriceType_TC = value;
					this.SendPropertyChanged("PriceType_TC");
					this.OnPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceType_CitiesPriceType", Storage="_PriceType", ThisKey="PriceType_TC", OtherKey="PriceType_TC", IsForeignKey=true)]
		public PriceType PriceType
		{
			get
			{
				return this._PriceType.Entity;
			}
			set
			{
				PriceType previousValue = this._PriceType.Entity;
				if (((previousValue != value) 
							|| (this._PriceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceType.Entity = null;
						previousValue.CitiesPriceTypes.Remove(this);
					}
					this._PriceType.Entity = value;
					if ((value != null))
					{
						value.CitiesPriceTypes.Add(this);
						this._PriceType_TC = value.PriceType_TC;
					}
					else
					{
						this._PriceType_TC = default(string);
					}
					this.SendPropertyChanged("PriceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CitiesPriceType", Storage="_City", ThisKey="City_TC", OtherKey="City_TC", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.CitiesPriceTypes.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.CitiesPriceTypes.Add(this);
						this._City_TC = value.City_TC;
					}
					else
					{
						this._City_TC = default(string);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmpGroups")]
	public partial class EmpGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _EmpGroup_ID;
		
		private string _EmpGroup_TC;
		
		private string _EmpGroupCaption;
		
		private string _JobTitle;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<DepartmentEmpGroup> _DepartmentEmpGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpGroup_IDChanging(decimal value);
    partial void OnEmpGroup_IDChanged();
    partial void OnEmpGroup_TCChanging(string value);
    partial void OnEmpGroup_TCChanged();
    partial void OnEmpGroupCaptionChanging(string value);
    partial void OnEmpGroupCaptionChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    #endregion
		
		public EmpGroup()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._DepartmentEmpGroups = new EntitySet<DepartmentEmpGroup>(new Action<DepartmentEmpGroup>(this.attach_DepartmentEmpGroups), new Action<DepartmentEmpGroup>(this.detach_DepartmentEmpGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGroup_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal EmpGroup_ID
		{
			get
			{
				return this._EmpGroup_ID;
			}
			set
			{
				if ((this._EmpGroup_ID != value))
				{
					this.OnEmpGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._EmpGroup_ID = value;
					this.SendPropertyChanged("EmpGroup_ID");
					this.OnEmpGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGroup_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string EmpGroup_TC
		{
			get
			{
				return this._EmpGroup_TC;
			}
			set
			{
				if ((this._EmpGroup_TC != value))
				{
					this.OnEmpGroup_TCChanging(value);
					this.SendPropertyChanging();
					this._EmpGroup_TC = value;
					this.SendPropertyChanged("EmpGroup_TC");
					this.OnEmpGroup_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGroupCaption", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmpGroupCaption
		{
			get
			{
				return this._EmpGroupCaption;
			}
			set
			{
				if ((this._EmpGroupCaption != value))
				{
					this.OnEmpGroupCaptionChanging(value);
					this.SendPropertyChanging();
					this._EmpGroupCaption = value;
					this.SendPropertyChanged("EmpGroupCaption");
					this.OnEmpGroupCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="VarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpGroup_Employee", Storage="_Employees", ThisKey="EmpGroup_TC", OtherKey="EmpGroup_TC")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpGroup_DepartmentEmpGroup", Storage="_DepartmentEmpGroups", ThisKey="EmpGroup_TC", OtherKey="EmpGroup_TC")]
		public EntitySet<DepartmentEmpGroup> DepartmentEmpGroups
		{
			get
			{
				return this._DepartmentEmpGroups;
			}
			set
			{
				this._DepartmentEmpGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmpGroup = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmpGroup = null;
		}
		
		private void attach_DepartmentEmpGroups(DepartmentEmpGroup entity)
		{
			this.SendPropertyChanging();
			entity.EmpGroup = this;
		}
		
		private void detach_DepartmentEmpGroups(DepartmentEmpGroup entity)
		{
			this.SendPropertyChanging();
			entity.EmpGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDepartments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Department_ID;
		
		private string _Department_TC;
		
		private string _DepartmentCaption;
		
		private EntitySet<DepartmentEmpGroup> _DepartmentEmpGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartment_IDChanging(decimal value);
    partial void OnDepartment_IDChanged();
    partial void OnDepartment_TCChanging(string value);
    partial void OnDepartment_TCChanged();
    partial void OnDepartmentCaptionChanging(string value);
    partial void OnDepartmentCaptionChanged();
    #endregion
		
		public Department()
		{
			this._DepartmentEmpGroups = new EntitySet<DepartmentEmpGroup>(new Action<DepartmentEmpGroup>(this.attach_DepartmentEmpGroups), new Action<DepartmentEmpGroup>(this.detach_DepartmentEmpGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Department_ID
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.OnDepartment_IDChanging(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("Department_ID");
					this.OnDepartment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Department_TC
		{
			get
			{
				return this._Department_TC;
			}
			set
			{
				if ((this._Department_TC != value))
				{
					this.OnDepartment_TCChanging(value);
					this.SendPropertyChanging();
					this._Department_TC = value;
					this.SendPropertyChanged("Department_TC");
					this.OnDepartment_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCaption", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DepartmentCaption
		{
			get
			{
				return this._DepartmentCaption;
			}
			set
			{
				if ((this._DepartmentCaption != value))
				{
					this.OnDepartmentCaptionChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCaption = value;
					this.SendPropertyChanged("DepartmentCaption");
					this.OnDepartmentCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DepartmentEmpGroup", Storage="_DepartmentEmpGroups", ThisKey="Department_TC", OtherKey="Department_TC")]
		public EntitySet<DepartmentEmpGroup> DepartmentEmpGroups
		{
			get
			{
				return this._DepartmentEmpGroups;
			}
			set
			{
				this._DepartmentEmpGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepartmentEmpGroups(DepartmentEmpGroup entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_DepartmentEmpGroups(DepartmentEmpGroup entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDepartments_EmpGroups")]
	public partial class DepartmentEmpGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Departments_EmpGroups_ID;
		
		private string _Department_TC;
		
		private string _EmpGroup_TC;
		
		private EntityRef<EmpGroup> _EmpGroup;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartments_EmpGroups_IDChanging(decimal value);
    partial void OnDepartments_EmpGroups_IDChanged();
    partial void OnDepartment_TCChanging(string value);
    partial void OnDepartment_TCChanged();
    partial void OnEmpGroup_TCChanging(string value);
    partial void OnEmpGroup_TCChanged();
    #endregion
		
		public DepartmentEmpGroup()
		{
			this._EmpGroup = default(EntityRef<EmpGroup>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departments_EmpGroups_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Departments_EmpGroups_ID
		{
			get
			{
				return this._Departments_EmpGroups_ID;
			}
			set
			{
				if ((this._Departments_EmpGroups_ID != value))
				{
					this.OnDepartments_EmpGroups_IDChanging(value);
					this.SendPropertyChanging();
					this._Departments_EmpGroups_ID = value;
					this.SendPropertyChanged("Departments_EmpGroups_ID");
					this.OnDepartments_EmpGroups_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Department_TC
		{
			get
			{
				return this._Department_TC;
			}
			set
			{
				if ((this._Department_TC != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_TCChanging(value);
					this.SendPropertyChanging();
					this._Department_TC = value;
					this.SendPropertyChanged("Department_TC");
					this.OnDepartment_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpGroup_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmpGroup_TC
		{
			get
			{
				return this._EmpGroup_TC;
			}
			set
			{
				if ((this._EmpGroup_TC != value))
				{
					if (this._EmpGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpGroup_TCChanging(value);
					this.SendPropertyChanging();
					this._EmpGroup_TC = value;
					this.SendPropertyChanged("EmpGroup_TC");
					this.OnEmpGroup_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpGroup_DepartmentEmpGroup", Storage="_EmpGroup", ThisKey="EmpGroup_TC", OtherKey="EmpGroup_TC", IsForeignKey=true)]
		public EmpGroup EmpGroup
		{
			get
			{
				return this._EmpGroup.Entity;
			}
			set
			{
				EmpGroup previousValue = this._EmpGroup.Entity;
				if (((previousValue != value) 
							|| (this._EmpGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpGroup.Entity = null;
						previousValue.DepartmentEmpGroups.Remove(this);
					}
					this._EmpGroup.Entity = value;
					if ((value != null))
					{
						value.DepartmentEmpGroups.Add(this);
						this._EmpGroup_TC = value.EmpGroup_TC;
					}
					else
					{
						this._EmpGroup_TC = default(string);
					}
					this.SendPropertyChanged("EmpGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DepartmentEmpGroup", Storage="_Department", ThisKey="Department_TC", OtherKey="Department_TC", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.DepartmentEmpGroups.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.DepartmentEmpGroups.Add(this);
						this._Department_TC = value.Department_TC;
					}
					else
					{
						this._Department_TC = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tQuestionnaire")]
	public partial class Questionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Questionnaire_ID;
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Student_ID;
		
		private string _QuestionnaireVersion;
		
		private System.Nullable<char> _SkillsLetter;
		
		private string _SkillsComment;
		
		private System.Nullable<char> _CourseLetter;
		
		private string _CourseComment;
		
		private System.Nullable<char> _AdministrationLetter;
		
		private string _AdministrationComment;
		
		private System.Nullable<char> _OrganizingLetter;
		
		private string _OrganizingComment;
		
		private System.Nullable<char> _ExpectationLetter;
		
		private string _ExpectationComment;
		
		private System.Nullable<byte> _RecommendationMark;
		
		private System.Nullable<decimal> _AdministrationMark;
		
		private System.Nullable<decimal> _ManagerMark;
		
		private string _QualityNotes;
		
		private string _StudentHopes;
		
		private string _StudentSkills;
		
		private string _Practice;
		
		private string _Friends;
		
		private string _FriendsNotes;
		
		private string _ManagerNeededSituation;
		
		private string _DirectedBy;
		
		private string _StudentNotes;
		
		private bool _IsCompleted;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.Nullable<char> _RecordQualityLetter;
		
		private string _RecordQualityComment;
		
		private EntitySet<QuestionnaireTeachersMark> _QuestionnaireTeachersMarks;
		
		private EntitySet<QuestionnaireClassRoomsMark> _QuestionnaireClassRoomsMarks;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionnaire_IDChanging(decimal value);
    partial void OnQuestionnaire_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnQuestionnaireVersionChanging(string value);
    partial void OnQuestionnaireVersionChanged();
    partial void OnSkillsLetterChanging(System.Nullable<char> value);
    partial void OnSkillsLetterChanged();
    partial void OnSkillsCommentChanging(string value);
    partial void OnSkillsCommentChanged();
    partial void OnCourseLetterChanging(System.Nullable<char> value);
    partial void OnCourseLetterChanged();
    partial void OnCourseCommentChanging(string value);
    partial void OnCourseCommentChanged();
    partial void OnAdministrationLetterChanging(System.Nullable<char> value);
    partial void OnAdministrationLetterChanged();
    partial void OnAdministrationCommentChanging(string value);
    partial void OnAdministrationCommentChanged();
    partial void OnOrganizingLetterChanging(System.Nullable<char> value);
    partial void OnOrganizingLetterChanged();
    partial void OnOrganizingCommentChanging(string value);
    partial void OnOrganizingCommentChanged();
    partial void OnExpectationLetterChanging(System.Nullable<char> value);
    partial void OnExpectationLetterChanged();
    partial void OnExpectationCommentChanging(string value);
    partial void OnExpectationCommentChanged();
    partial void OnRecommendationMarkChanging(System.Nullable<byte> value);
    partial void OnRecommendationMarkChanged();
    partial void OnAdministrationMarkChanging(System.Nullable<decimal> value);
    partial void OnAdministrationMarkChanged();
    partial void OnManagerMarkChanging(System.Nullable<decimal> value);
    partial void OnManagerMarkChanged();
    partial void OnQualityNotesChanging(string value);
    partial void OnQualityNotesChanged();
    partial void OnStudentHopesChanging(string value);
    partial void OnStudentHopesChanged();
    partial void OnStudentSkillsChanging(string value);
    partial void OnStudentSkillsChanged();
    partial void OnPracticeChanging(string value);
    partial void OnPracticeChanged();
    partial void OnFriendsChanging(string value);
    partial void OnFriendsChanged();
    partial void OnFriendsNotesChanging(string value);
    partial void OnFriendsNotesChanged();
    partial void OnManagerNeededSituationChanging(string value);
    partial void OnManagerNeededSituationChanged();
    partial void OnDirectedByChanging(string value);
    partial void OnDirectedByChanged();
    partial void OnStudentNotesChanging(string value);
    partial void OnStudentNotesChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnRecordQualityLetterChanging(System.Nullable<char> value);
    partial void OnRecordQualityLetterChanged();
    partial void OnRecordQualityCommentChanging(string value);
    partial void OnRecordQualityCommentChanged();
    #endregion
		
		public Questionnaire()
		{
			this._QuestionnaireTeachersMarks = new EntitySet<QuestionnaireTeachersMark>(new Action<QuestionnaireTeachersMark>(this.attach_QuestionnaireTeachersMarks), new Action<QuestionnaireTeachersMark>(this.detach_QuestionnaireTeachersMarks));
			this._QuestionnaireClassRoomsMarks = new EntitySet<QuestionnaireClassRoomsMark>(new Action<QuestionnaireClassRoomsMark>(this.attach_QuestionnaireClassRoomsMarks), new Action<QuestionnaireClassRoomsMark>(this.detach_QuestionnaireClassRoomsMarks));
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Questionnaire_ID
		{
			get
			{
				return this._Questionnaire_ID;
			}
			set
			{
				if ((this._Questionnaire_ID != value))
				{
					this.OnQuestionnaire_IDChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_ID = value;
					this.SendPropertyChanged("Questionnaire_ID");
					this.OnQuestionnaire_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnaireVersion", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string QuestionnaireVersion
		{
			get
			{
				return this._QuestionnaireVersion;
			}
			set
			{
				if ((this._QuestionnaireVersion != value))
				{
					this.OnQuestionnaireVersionChanging(value);
					this.SendPropertyChanging();
					this._QuestionnaireVersion = value;
					this.SendPropertyChanged("QuestionnaireVersion");
					this.OnQuestionnaireVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillsLetter", DbType="Char(1)")]
		public System.Nullable<char> SkillsLetter
		{
			get
			{
				return this._SkillsLetter;
			}
			set
			{
				if ((this._SkillsLetter != value))
				{
					this.OnSkillsLetterChanging(value);
					this.SendPropertyChanging();
					this._SkillsLetter = value;
					this.SendPropertyChanged("SkillsLetter");
					this.OnSkillsLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillsComment", DbType="VarChar(1500)")]
		public string SkillsComment
		{
			get
			{
				return this._SkillsComment;
			}
			set
			{
				if ((this._SkillsComment != value))
				{
					this.OnSkillsCommentChanging(value);
					this.SendPropertyChanging();
					this._SkillsComment = value;
					this.SendPropertyChanged("SkillsComment");
					this.OnSkillsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseLetter", DbType="Char(1)")]
		public System.Nullable<char> CourseLetter
		{
			get
			{
				return this._CourseLetter;
			}
			set
			{
				if ((this._CourseLetter != value))
				{
					this.OnCourseLetterChanging(value);
					this.SendPropertyChanging();
					this._CourseLetter = value;
					this.SendPropertyChanged("CourseLetter");
					this.OnCourseLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseComment", DbType="VarChar(1500)")]
		public string CourseComment
		{
			get
			{
				return this._CourseComment;
			}
			set
			{
				if ((this._CourseComment != value))
				{
					this.OnCourseCommentChanging(value);
					this.SendPropertyChanging();
					this._CourseComment = value;
					this.SendPropertyChanged("CourseComment");
					this.OnCourseCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationLetter", DbType="Char(1)")]
		public System.Nullable<char> AdministrationLetter
		{
			get
			{
				return this._AdministrationLetter;
			}
			set
			{
				if ((this._AdministrationLetter != value))
				{
					this.OnAdministrationLetterChanging(value);
					this.SendPropertyChanging();
					this._AdministrationLetter = value;
					this.SendPropertyChanged("AdministrationLetter");
					this.OnAdministrationLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationComment", DbType="VarChar(1500)")]
		public string AdministrationComment
		{
			get
			{
				return this._AdministrationComment;
			}
			set
			{
				if ((this._AdministrationComment != value))
				{
					this.OnAdministrationCommentChanging(value);
					this.SendPropertyChanging();
					this._AdministrationComment = value;
					this.SendPropertyChanged("AdministrationComment");
					this.OnAdministrationCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizingLetter", DbType="Char(1)")]
		public System.Nullable<char> OrganizingLetter
		{
			get
			{
				return this._OrganizingLetter;
			}
			set
			{
				if ((this._OrganizingLetter != value))
				{
					this.OnOrganizingLetterChanging(value);
					this.SendPropertyChanging();
					this._OrganizingLetter = value;
					this.SendPropertyChanged("OrganizingLetter");
					this.OnOrganizingLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizingComment", DbType="VarChar(1500)")]
		public string OrganizingComment
		{
			get
			{
				return this._OrganizingComment;
			}
			set
			{
				if ((this._OrganizingComment != value))
				{
					this.OnOrganizingCommentChanging(value);
					this.SendPropertyChanging();
					this._OrganizingComment = value;
					this.SendPropertyChanged("OrganizingComment");
					this.OnOrganizingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectationLetter", DbType="Char(1)")]
		public System.Nullable<char> ExpectationLetter
		{
			get
			{
				return this._ExpectationLetter;
			}
			set
			{
				if ((this._ExpectationLetter != value))
				{
					this.OnExpectationLetterChanging(value);
					this.SendPropertyChanging();
					this._ExpectationLetter = value;
					this.SendPropertyChanged("ExpectationLetter");
					this.OnExpectationLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectationComment", DbType="VarChar(1500)")]
		public string ExpectationComment
		{
			get
			{
				return this._ExpectationComment;
			}
			set
			{
				if ((this._ExpectationComment != value))
				{
					this.OnExpectationCommentChanging(value);
					this.SendPropertyChanging();
					this._ExpectationComment = value;
					this.SendPropertyChanged("ExpectationComment");
					this.OnExpectationCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecommendationMark", DbType="TinyInt")]
		public System.Nullable<byte> RecommendationMark
		{
			get
			{
				return this._RecommendationMark;
			}
			set
			{
				if ((this._RecommendationMark != value))
				{
					this.OnRecommendationMarkChanging(value);
					this.SendPropertyChanging();
					this._RecommendationMark = value;
					this.SendPropertyChanged("RecommendationMark");
					this.OnRecommendationMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationMark", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> AdministrationMark
		{
			get
			{
				return this._AdministrationMark;
			}
			set
			{
				if ((this._AdministrationMark != value))
				{
					this.OnAdministrationMarkChanging(value);
					this.SendPropertyChanging();
					this._AdministrationMark = value;
					this.SendPropertyChanged("AdministrationMark");
					this.OnAdministrationMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerMark", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> ManagerMark
		{
			get
			{
				return this._ManagerMark;
			}
			set
			{
				if ((this._ManagerMark != value))
				{
					this.OnManagerMarkChanging(value);
					this.SendPropertyChanging();
					this._ManagerMark = value;
					this.SendPropertyChanged("ManagerMark");
					this.OnManagerMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityNotes", DbType="VarChar(150)")]
		public string QualityNotes
		{
			get
			{
				return this._QualityNotes;
			}
			set
			{
				if ((this._QualityNotes != value))
				{
					this.OnQualityNotesChanging(value);
					this.SendPropertyChanging();
					this._QualityNotes = value;
					this.SendPropertyChanged("QualityNotes");
					this.OnQualityNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentHopes", DbType="VarChar(150)")]
		public string StudentHopes
		{
			get
			{
				return this._StudentHopes;
			}
			set
			{
				if ((this._StudentHopes != value))
				{
					this.OnStudentHopesChanging(value);
					this.SendPropertyChanging();
					this._StudentHopes = value;
					this.SendPropertyChanged("StudentHopes");
					this.OnStudentHopesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSkills", DbType="VarChar(150)")]
		public string StudentSkills
		{
			get
			{
				return this._StudentSkills;
			}
			set
			{
				if ((this._StudentSkills != value))
				{
					this.OnStudentSkillsChanging(value);
					this.SendPropertyChanging();
					this._StudentSkills = value;
					this.SendPropertyChanged("StudentSkills");
					this.OnStudentSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice", DbType="VarChar(150)")]
		public string Practice
		{
			get
			{
				return this._Practice;
			}
			set
			{
				if ((this._Practice != value))
				{
					this.OnPracticeChanging(value);
					this.SendPropertyChanging();
					this._Practice = value;
					this.SendPropertyChanged("Practice");
					this.OnPracticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friends", DbType="VarChar(10)")]
		public string Friends
		{
			get
			{
				return this._Friends;
			}
			set
			{
				if ((this._Friends != value))
				{
					this.OnFriendsChanging(value);
					this.SendPropertyChanging();
					this._Friends = value;
					this.SendPropertyChanged("Friends");
					this.OnFriendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendsNotes", DbType="VarChar(300)")]
		public string FriendsNotes
		{
			get
			{
				return this._FriendsNotes;
			}
			set
			{
				if ((this._FriendsNotes != value))
				{
					this.OnFriendsNotesChanging(value);
					this.SendPropertyChanging();
					this._FriendsNotes = value;
					this.SendPropertyChanged("FriendsNotes");
					this.OnFriendsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerNeededSituation", DbType="VarChar(700)")]
		public string ManagerNeededSituation
		{
			get
			{
				return this._ManagerNeededSituation;
			}
			set
			{
				if ((this._ManagerNeededSituation != value))
				{
					this.OnManagerNeededSituationChanging(value);
					this.SendPropertyChanging();
					this._ManagerNeededSituation = value;
					this.SendPropertyChanged("ManagerNeededSituation");
					this.OnManagerNeededSituationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectedBy", DbType="VarChar(700)")]
		public string DirectedBy
		{
			get
			{
				return this._DirectedBy;
			}
			set
			{
				if ((this._DirectedBy != value))
				{
					this.OnDirectedByChanging(value);
					this.SendPropertyChanging();
					this._DirectedBy = value;
					this.SendPropertyChanged("DirectedBy");
					this.OnDirectedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNotes", DbType="VarChar(8000)")]
		public string StudentNotes
		{
			get
			{
				return this._StudentNotes;
			}
			set
			{
				if ((this._StudentNotes != value))
				{
					this.OnStudentNotesChanging(value);
					this.SendPropertyChanging();
					this._StudentNotes = value;
					this.SendPropertyChanged("StudentNotes");
					this.OnStudentNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordQualityLetter")]
		public System.Nullable<char> RecordQualityLetter
		{
			get
			{
				return this._RecordQualityLetter;
			}
			set
			{
				if ((this._RecordQualityLetter != value))
				{
					this.OnRecordQualityLetterChanging(value);
					this.SendPropertyChanging();
					this._RecordQualityLetter = value;
					this.SendPropertyChanged("RecordQualityLetter");
					this.OnRecordQualityLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordQualityComment")]
		public string RecordQualityComment
		{
			get
			{
				return this._RecordQualityComment;
			}
			set
			{
				if ((this._RecordQualityComment != value))
				{
					this.OnRecordQualityCommentChanging(value);
					this.SendPropertyChanging();
					this._RecordQualityComment = value;
					this.SendPropertyChanged("RecordQualityComment");
					this.OnRecordQualityCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QuestionnaireTeachersMark", Storage="_QuestionnaireTeachersMarks", ThisKey="Questionnaire_ID", OtherKey="Questionnaire_ID")]
		public EntitySet<QuestionnaireTeachersMark> QuestionnaireTeachersMarks
		{
			get
			{
				return this._QuestionnaireTeachersMarks;
			}
			set
			{
				this._QuestionnaireTeachersMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QuestionnaireClassRoomsMark", Storage="_QuestionnaireClassRoomsMarks", ThisKey="Questionnaire_ID", OtherKey="Questionnaire_ID")]
		public EntitySet<QuestionnaireClassRoomsMark> QuestionnaireClassRoomsMarks
		{
			get
			{
				return this._QuestionnaireClassRoomsMarks;
			}
			set
			{
				this._QuestionnaireClassRoomsMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_Questionnaire", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true)]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.Questionnaires.Remove(this);
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.Questionnaires.Add(this);
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Questionnaire", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Questionnaires.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Questionnaires.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionnaireTeachersMarks(QuestionnaireTeachersMark entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = this;
		}
		
		private void detach_QuestionnaireTeachersMarks(QuestionnaireTeachersMark entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = null;
		}
		
		private void attach_QuestionnaireClassRoomsMarks(QuestionnaireClassRoomsMark entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = this;
		}
		
		private void detach_QuestionnaireClassRoomsMarks(QuestionnaireClassRoomsMark entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tQuestionnaireTeachersMarks")]
	public partial class QuestionnaireTeachersMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _QuestionnaireTeacherMark_ID;
		
		private decimal _Questionnaire_ID;
		
		private string _Teacher_TC;
		
		private System.Nullable<char> _TeacherLetter;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _InputDate;
		
		private string _Employee_TC;
		
		private EntityRef<Questionnaire> _Questionnaire;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionnaireTeacherMark_IDChanging(decimal value);
    partial void OnQuestionnaireTeacherMark_IDChanged();
    partial void OnQuestionnaire_IDChanging(decimal value);
    partial void OnQuestionnaire_IDChanged();
    partial void OnTeacher_TCChanging(string value);
    partial void OnTeacher_TCChanged();
    partial void OnTeacherLetterChanging(System.Nullable<char> value);
    partial void OnTeacherLetterChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    #endregion
		
		public QuestionnaireTeachersMark()
		{
			this._Questionnaire = default(EntityRef<Questionnaire>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnaireTeacherMark_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal QuestionnaireTeacherMark_ID
		{
			get
			{
				return this._QuestionnaireTeacherMark_ID;
			}
			set
			{
				if ((this._QuestionnaireTeacherMark_ID != value))
				{
					this.OnQuestionnaireTeacherMark_IDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnaireTeacherMark_ID = value;
					this.SendPropertyChanged("QuestionnaireTeacherMark_ID");
					this.OnQuestionnaireTeacherMark_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Questionnaire_ID
		{
			get
			{
				return this._Questionnaire_ID;
			}
			set
			{
				if ((this._Questionnaire_ID != value))
				{
					if (this._Questionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaire_IDChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_ID = value;
					this.SendPropertyChanged("Questionnaire_ID");
					this.OnQuestionnaire_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Teacher_TC
		{
			get
			{
				return this._Teacher_TC;
			}
			set
			{
				if ((this._Teacher_TC != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacher_TCChanging(value);
					this.SendPropertyChanging();
					this._Teacher_TC = value;
					this.SendPropertyChanged("Teacher_TC");
					this.OnTeacher_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherLetter", DbType="Char(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> TeacherLetter
		{
			get
			{
				return this._TeacherLetter;
			}
			set
			{
				if ((this._TeacherLetter != value))
				{
					this.OnTeacherLetterChanging(value);
					this.SendPropertyChanging();
					this._TeacherLetter = value;
					this.SendPropertyChanged("TeacherLetter");
					this.OnTeacherLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(8000)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QuestionnaireTeachersMark", Storage="_Questionnaire", ThisKey="Questionnaire_ID", OtherKey="Questionnaire_ID", IsForeignKey=true)]
		public Questionnaire Questionnaire
		{
			get
			{
				return this._Questionnaire.Entity;
			}
			set
			{
				Questionnaire previousValue = this._Questionnaire.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire.Entity = null;
						previousValue.QuestionnaireTeachersMarks.Remove(this);
					}
					this._Questionnaire.Entity = value;
					if ((value != null))
					{
						value.QuestionnaireTeachersMarks.Add(this);
						this._Questionnaire_ID = value.Questionnaire_ID;
					}
					else
					{
						this._Questionnaire_ID = default(decimal);
					}
					this.SendPropertyChanged("Questionnaire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_QuestionnaireTeachersMark", Storage="_Employee", ThisKey="Teacher_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Teacher
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.QuestionnaireTeachersMarks.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.QuestionnaireTeachersMarks.Add(this);
						this._Teacher_TC = value.Employee_TC;
					}
					else
					{
						this._Teacher_TC = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCurrency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CurrencyType_TC;
		
		private System.DateTime _FiscalDate;
		
		private decimal _Rate;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyType_TCChanging(string value);
    partial void OnCurrencyType_TCChanged();
    partial void OnFiscalDateChanging(System.DateTime value);
    partial void OnFiscalDateChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CurrencyType_TC
		{
			get
			{
				return this._CurrencyType_TC;
			}
			set
			{
				if ((this._CurrencyType_TC != value))
				{
					this.OnCurrencyType_TCChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType_TC = value;
					this.SendPropertyChanged("CurrencyType_TC");
					this.OnCurrencyType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalDate", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FiscalDate
		{
			get
			{
				return this._FiscalDate;
			}
			set
			{
				if ((this._FiscalDate != value))
				{
					this.OnFiscalDateChanging(value);
					this.SendPropertyChanging();
					this._FiscalDate = value;
					this.SendPropertyChanged("FiscalDate");
					this.OnFiscalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Money NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(100)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPaymentTypes")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PaymentType_TC;
		
		private string _Name;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentType_TCChanging(string value);
    partial void OnPaymentType_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PaymentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType_TC", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PaymentType_TC
		{
			get
			{
				return this._PaymentType_TC;
			}
			set
			{
				if ((this._PaymentType_TC != value))
				{
					this.OnPaymentType_TCChanging(value);
					this.SendPropertyChanging();
					this._PaymentType_TC = value;
					this.SendPropertyChanged("PaymentType_TC");
					this.OnPaymentType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudents")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Student_ID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private char _Sex;
		
		private System.Nullable<int> _WebStudent_ID;
		
		private string _WebLogin;
		
		private string _WebKeyword;
		
		private System.Nullable<long> _BCTC_Student_ID;
		
		private string _HostingType_TC;
		
		private string _HostingSite;
		
		private string _HostingLogin;
		
		private string _HostingPassword;
		
		private System.Nullable<System.DateTime> _HostingRegDate;
		
		private System.Nullable<System.DateTime> _HostingUpdateDate;
		
		private System.Nullable<System.DateTime> _HostingDateBeg;
		
		private System.Nullable<System.DateTime> _HostingDateEnd;
		
		private System.Nullable<bool> _HostingHttpEnabled;
		
		private System.Nullable<bool> _HostingFtpEnabled;
		
		private System.Nullable<byte> _HostingStatus_ID;
		
		private bool _Nonresident;
		
		private System.Nullable<bool> _IsGivenConsent;
		
		private System.Nullable<System.DateTime> _ConsentCancelDate;
		
		private System.Nullable<decimal> _Terrain_ID;
		
		private System.Nullable<decimal> _Country_ID;
		
		private System.Nullable<decimal> _Branch_ID;
		
		private System.Nullable<decimal> _Metier_ID;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _LastNameEn;
		
		private string _FirstNameEn;
		
		private string _MiddleNameEn;
		
		private EntitySet<StudentInGroup> _StudentInGroups;
		
		private EntitySet<Questionnaire> _Questionnaires;
		
		private EntitySet<StudentEmail> _StudentEmails;
		
		private EntitySet<StudentPhone> _StudentPhones;
		
		private EntityRef<StudentCalc> _StudentCalc;
		
		private EntitySet<StudentRating> _StudentRatings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnSexChanging(char value);
    partial void OnSexChanged();
    partial void OnWebStudent_IDChanging(System.Nullable<int> value);
    partial void OnWebStudent_IDChanged();
    partial void OnWebLoginChanging(string value);
    partial void OnWebLoginChanged();
    partial void OnWebKeywordChanging(string value);
    partial void OnWebKeywordChanged();
    partial void OnBCTC_Student_IDChanging(System.Nullable<long> value);
    partial void OnBCTC_Student_IDChanged();
    partial void OnHostingType_TCChanging(string value);
    partial void OnHostingType_TCChanged();
    partial void OnHostingSiteChanging(string value);
    partial void OnHostingSiteChanged();
    partial void OnHostingLoginChanging(string value);
    partial void OnHostingLoginChanged();
    partial void OnHostingPasswordChanging(string value);
    partial void OnHostingPasswordChanged();
    partial void OnHostingRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHostingRegDateChanged();
    partial void OnHostingUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHostingUpdateDateChanged();
    partial void OnHostingDateBegChanging(System.Nullable<System.DateTime> value);
    partial void OnHostingDateBegChanged();
    partial void OnHostingDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnHostingDateEndChanged();
    partial void OnHostingHttpEnabledChanging(System.Nullable<bool> value);
    partial void OnHostingHttpEnabledChanged();
    partial void OnHostingFtpEnabledChanging(System.Nullable<bool> value);
    partial void OnHostingFtpEnabledChanged();
    partial void OnHostingStatus_IDChanging(System.Nullable<byte> value);
    partial void OnHostingStatus_IDChanged();
    partial void OnNonresidentChanging(bool value);
    partial void OnNonresidentChanged();
    partial void OnIsGivenConsentChanging(System.Nullable<bool> value);
    partial void OnIsGivenConsentChanged();
    partial void OnConsentCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConsentCancelDateChanged();
    partial void OnTerrain_IDChanging(System.Nullable<decimal> value);
    partial void OnTerrain_IDChanged();
    partial void OnCountry_IDChanging(System.Nullable<decimal> value);
    partial void OnCountry_IDChanged();
    partial void OnBranch_IDChanging(System.Nullable<decimal> value);
    partial void OnBranch_IDChanged();
    partial void OnMetier_IDChanging(System.Nullable<decimal> value);
    partial void OnMetier_IDChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnLastNameEnChanging(string value);
    partial void OnLastNameEnChanged();
    partial void OnFirstNameEnChanging(string value);
    partial void OnFirstNameEnChanged();
    partial void OnMiddleNameEnChanging(string value);
    partial void OnMiddleNameEnChanged();
    #endregion
		
		public Student()
		{
			this._StudentInGroups = new EntitySet<StudentInGroup>(new Action<StudentInGroup>(this.attach_StudentInGroups), new Action<StudentInGroup>(this.detach_StudentInGroups));
			this._Questionnaires = new EntitySet<Questionnaire>(new Action<Questionnaire>(this.attach_Questionnaires), new Action<Questionnaire>(this.detach_Questionnaires));
			this._StudentEmails = new EntitySet<StudentEmail>(new Action<StudentEmail>(this.attach_StudentEmails), new Action<StudentEmail>(this.detach_StudentEmails));
			this._StudentPhones = new EntitySet<StudentPhone>(new Action<StudentPhone>(this.attach_StudentPhones), new Action<StudentPhone>(this.detach_StudentPhones));
			this._StudentCalc = default(EntityRef<StudentCalc>);
			this._StudentRatings = new EntitySet<StudentRating>(new Action<StudentRating>(this.attach_StudentRatings), new Action<StudentRating>(this.detach_StudentRatings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebStudent_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> WebStudent_ID
		{
			get
			{
				return this._WebStudent_ID;
			}
			set
			{
				if ((this._WebStudent_ID != value))
				{
					this.OnWebStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._WebStudent_ID = value;
					this.SendPropertyChanged("WebStudent_ID");
					this.OnWebStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebLogin", DbType="VarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string WebLogin
		{
			get
			{
				return this._WebLogin;
			}
			set
			{
				if ((this._WebLogin != value))
				{
					this.OnWebLoginChanging(value);
					this.SendPropertyChanging();
					this._WebLogin = value;
					this.SendPropertyChanged("WebLogin");
					this.OnWebLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebKeyword", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string WebKeyword
		{
			get
			{
				return this._WebKeyword;
			}
			set
			{
				if ((this._WebKeyword != value))
				{
					this.OnWebKeywordChanging(value);
					this.SendPropertyChanging();
					this._WebKeyword = value;
					this.SendPropertyChanged("WebKeyword");
					this.OnWebKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCTC_Student_ID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> BCTC_Student_ID
		{
			get
			{
				return this._BCTC_Student_ID;
			}
			set
			{
				if ((this._BCTC_Student_ID != value))
				{
					this.OnBCTC_Student_IDChanging(value);
					this.SendPropertyChanging();
					this._BCTC_Student_ID = value;
					this.SendPropertyChanged("BCTC_Student_ID");
					this.OnBCTC_Student_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingType_TC", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string HostingType_TC
		{
			get
			{
				return this._HostingType_TC;
			}
			set
			{
				if ((this._HostingType_TC != value))
				{
					this.OnHostingType_TCChanging(value);
					this.SendPropertyChanging();
					this._HostingType_TC = value;
					this.SendPropertyChanged("HostingType_TC");
					this.OnHostingType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingSite", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string HostingSite
		{
			get
			{
				return this._HostingSite;
			}
			set
			{
				if ((this._HostingSite != value))
				{
					this.OnHostingSiteChanging(value);
					this.SendPropertyChanging();
					this._HostingSite = value;
					this.SendPropertyChanged("HostingSite");
					this.OnHostingSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingLogin", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HostingLogin
		{
			get
			{
				return this._HostingLogin;
			}
			set
			{
				if ((this._HostingLogin != value))
				{
					this.OnHostingLoginChanging(value);
					this.SendPropertyChanging();
					this._HostingLogin = value;
					this.SendPropertyChanged("HostingLogin");
					this.OnHostingLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingPassword", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HostingPassword
		{
			get
			{
				return this._HostingPassword;
			}
			set
			{
				if ((this._HostingPassword != value))
				{
					this.OnHostingPasswordChanging(value);
					this.SendPropertyChanging();
					this._HostingPassword = value;
					this.SendPropertyChanged("HostingPassword");
					this.OnHostingPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingRegDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HostingRegDate
		{
			get
			{
				return this._HostingRegDate;
			}
			set
			{
				if ((this._HostingRegDate != value))
				{
					this.OnHostingRegDateChanging(value);
					this.SendPropertyChanging();
					this._HostingRegDate = value;
					this.SendPropertyChanged("HostingRegDate");
					this.OnHostingRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingUpdateDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HostingUpdateDate
		{
			get
			{
				return this._HostingUpdateDate;
			}
			set
			{
				if ((this._HostingUpdateDate != value))
				{
					this.OnHostingUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._HostingUpdateDate = value;
					this.SendPropertyChanged("HostingUpdateDate");
					this.OnHostingUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingDateBeg", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HostingDateBeg
		{
			get
			{
				return this._HostingDateBeg;
			}
			set
			{
				if ((this._HostingDateBeg != value))
				{
					this.OnHostingDateBegChanging(value);
					this.SendPropertyChanging();
					this._HostingDateBeg = value;
					this.SendPropertyChanged("HostingDateBeg");
					this.OnHostingDateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingDateEnd", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HostingDateEnd
		{
			get
			{
				return this._HostingDateEnd;
			}
			set
			{
				if ((this._HostingDateEnd != value))
				{
					this.OnHostingDateEndChanging(value);
					this.SendPropertyChanging();
					this._HostingDateEnd = value;
					this.SendPropertyChanged("HostingDateEnd");
					this.OnHostingDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingHttpEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HostingHttpEnabled
		{
			get
			{
				return this._HostingHttpEnabled;
			}
			set
			{
				if ((this._HostingHttpEnabled != value))
				{
					this.OnHostingHttpEnabledChanging(value);
					this.SendPropertyChanging();
					this._HostingHttpEnabled = value;
					this.SendPropertyChanged("HostingHttpEnabled");
					this.OnHostingHttpEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingFtpEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HostingFtpEnabled
		{
			get
			{
				return this._HostingFtpEnabled;
			}
			set
			{
				if ((this._HostingFtpEnabled != value))
				{
					this.OnHostingFtpEnabledChanging(value);
					this.SendPropertyChanging();
					this._HostingFtpEnabled = value;
					this.SendPropertyChanged("HostingFtpEnabled");
					this.OnHostingFtpEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostingStatus_ID", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> HostingStatus_ID
		{
			get
			{
				return this._HostingStatus_ID;
			}
			set
			{
				if ((this._HostingStatus_ID != value))
				{
					this.OnHostingStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._HostingStatus_ID = value;
					this.SendPropertyChanged("HostingStatus_ID");
					this.OnHostingStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nonresident", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Nonresident
		{
			get
			{
				return this._Nonresident;
			}
			set
			{
				if ((this._Nonresident != value))
				{
					this.OnNonresidentChanging(value);
					this.SendPropertyChanging();
					this._Nonresident = value;
					this.SendPropertyChanged("Nonresident");
					this.OnNonresidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGivenConsent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsGivenConsent
		{
			get
			{
				return this._IsGivenConsent;
			}
			set
			{
				if ((this._IsGivenConsent != value))
				{
					this.OnIsGivenConsentChanging(value);
					this.SendPropertyChanging();
					this._IsGivenConsent = value;
					this.SendPropertyChanged("IsGivenConsent");
					this.OnIsGivenConsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsentCancelDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ConsentCancelDate
		{
			get
			{
				return this._ConsentCancelDate;
			}
			set
			{
				if ((this._ConsentCancelDate != value))
				{
					this.OnConsentCancelDateChanging(value);
					this.SendPropertyChanging();
					this._ConsentCancelDate = value;
					this.SendPropertyChanged("ConsentCancelDate");
					this.OnConsentCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terrain_ID")]
		public System.Nullable<decimal> Terrain_ID
		{
			get
			{
				return this._Terrain_ID;
			}
			set
			{
				if ((this._Terrain_ID != value))
				{
					this.OnTerrain_IDChanging(value);
					this.SendPropertyChanging();
					this._Terrain_ID = value;
					this.SendPropertyChanged("Terrain_ID");
					this.OnTerrain_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_ID")]
		public System.Nullable<decimal> Country_ID
		{
			get
			{
				return this._Country_ID;
			}
			set
			{
				if ((this._Country_ID != value))
				{
					this.OnCountry_IDChanging(value);
					this.SendPropertyChanging();
					this._Country_ID = value;
					this.SendPropertyChanged("Country_ID");
					this.OnCountry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID")]
		public System.Nullable<decimal> Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this.OnBranch_IDChanging(value);
					this.SendPropertyChanging();
					this._Branch_ID = value;
					this.SendPropertyChanged("Branch_ID");
					this.OnBranch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metier_ID")]
		public System.Nullable<decimal> Metier_ID
		{
			get
			{
				return this._Metier_ID;
			}
			set
			{
				if ((this._Metier_ID != value))
				{
					this.OnMetier_IDChanging(value);
					this.SendPropertyChanging();
					this._Metier_ID = value;
					this.SendPropertyChanged("Metier_ID");
					this.OnMetier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameEn")]
		public string LastNameEn
		{
			get
			{
				return this._LastNameEn;
			}
			set
			{
				if ((this._LastNameEn != value))
				{
					this.OnLastNameEnChanging(value);
					this.SendPropertyChanging();
					this._LastNameEn = value;
					this.SendPropertyChanged("LastNameEn");
					this.OnLastNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameEn")]
		public string FirstNameEn
		{
			get
			{
				return this._FirstNameEn;
			}
			set
			{
				if ((this._FirstNameEn != value))
				{
					this.OnFirstNameEnChanging(value);
					this.SendPropertyChanging();
					this._FirstNameEn = value;
					this.SendPropertyChanged("FirstNameEn");
					this.OnFirstNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleNameEn")]
		public string MiddleNameEn
		{
			get
			{
				return this._MiddleNameEn;
			}
			set
			{
				if ((this._MiddleNameEn != value))
				{
					this.OnMiddleNameEnChanging(value);
					this.SendPropertyChanging();
					this._MiddleNameEn = value;
					this.SendPropertyChanged("MiddleNameEn");
					this.OnMiddleNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentInGroup", Storage="_StudentInGroups", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<StudentInGroup> StudentInGroups
		{
			get
			{
				return this._StudentInGroups;
			}
			set
			{
				this._StudentInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Questionnaire", Storage="_Questionnaires", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<Questionnaire> Questionnaires
		{
			get
			{
				return this._Questionnaires;
			}
			set
			{
				this._Questionnaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentEmail", Storage="_StudentEmails", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<StudentEmail> StudentEmails
		{
			get
			{
				return this._StudentEmails;
			}
			set
			{
				this._StudentEmails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentPhone", Storage="_StudentPhones", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<StudentPhone> StudentPhones
		{
			get
			{
				return this._StudentPhones;
			}
			set
			{
				this._StudentPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentCalc", Storage="_StudentCalc", ThisKey="Student_ID", OtherKey="Student_ID", IsUnique=true, IsForeignKey=false)]
		public StudentCalc StudentCalc
		{
			get
			{
				return this._StudentCalc.Entity;
			}
			set
			{
				StudentCalc previousValue = this._StudentCalc.Entity;
				if (((previousValue != value) 
							|| (this._StudentCalc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentCalc.Entity = null;
						previousValue.Student = null;
					}
					this._StudentCalc.Entity = value;
					if ((value != null))
					{
						value.Student = this;
					}
					this.SendPropertyChanged("StudentCalc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRating", Storage="_StudentRatings", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<StudentRating> StudentRatings
		{
			get
			{
				return this._StudentRatings;
			}
			set
			{
				this._StudentRatings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentEmails(StudentEmail entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentEmails(StudentEmail entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentPhones(StudentPhone entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentPhones(StudentPhone entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentRatings(StudentRating entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentRatings(StudentRating entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClassRooms")]
	public partial class ClassRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ClassRoom_ID;
		
		private string _ClassRoom_TC;
		
		private string _Complex_TC;
		
		private string _Notes;
		
		private string _NotesTech;
		
		private byte _NormNumOfStudents;
		
		private byte _MaxNumOfStudents;
		
		private bool _IsInUse;
		
		private System.Nullable<short> _ReportsClassRoomSortOrder;
		
		private EntitySet<Lecture> _Lectures;
		
		private EntityRef<Complex> _Complex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassRoom_IDChanging(decimal value);
    partial void OnClassRoom_IDChanged();
    partial void OnClassRoom_TCChanging(string value);
    partial void OnClassRoom_TCChanged();
    partial void OnComplex_TCChanging(string value);
    partial void OnComplex_TCChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnNotesTechChanging(string value);
    partial void OnNotesTechChanged();
    partial void OnNormNumOfStudentsChanging(byte value);
    partial void OnNormNumOfStudentsChanged();
    partial void OnMaxNumOfStudentsChanging(byte value);
    partial void OnMaxNumOfStudentsChanged();
    partial void OnIsInUseChanging(bool value);
    partial void OnIsInUseChanged();
    partial void OnReportsClassRoomSortOrderChanging(System.Nullable<short> value);
    partial void OnReportsClassRoomSortOrderChanged();
    #endregion
		
		public ClassRoom()
		{
			this._Lectures = new EntitySet<Lecture>(new Action<Lecture>(this.attach_Lectures), new Action<Lecture>(this.detach_Lectures));
			this._Complex = default(EntityRef<Complex>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal ClassRoom_ID
		{
			get
			{
				return this._ClassRoom_ID;
			}
			set
			{
				if ((this._ClassRoom_ID != value))
				{
					this.OnClassRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_ID = value;
					this.SendPropertyChanged("ClassRoom_ID");
					this.OnClassRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_TC", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string ClassRoom_TC
		{
			get
			{
				return this._ClassRoom_TC;
			}
			set
			{
				if ((this._ClassRoom_TC != value))
				{
					this.OnClassRoom_TCChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_TC = value;
					this.SendPropertyChanged("ClassRoom_TC");
					this.OnClassRoom_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complex_TC", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Complex_TC
		{
			get
			{
				return this._Complex_TC;
			}
			set
			{
				if ((this._Complex_TC != value))
				{
					if (this._Complex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComplex_TCChanging(value);
					this.SendPropertyChanging();
					this._Complex_TC = value;
					this.SendPropertyChanged("Complex_TC");
					this.OnComplex_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesTech", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string NotesTech
		{
			get
			{
				return this._NotesTech;
			}
			set
			{
				if ((this._NotesTech != value))
				{
					this.OnNotesTechChanging(value);
					this.SendPropertyChanging();
					this._NotesTech = value;
					this.SendPropertyChanged("NotesTech");
					this.OnNotesTechChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormNumOfStudents", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte NormNumOfStudents
		{
			get
			{
				return this._NormNumOfStudents;
			}
			set
			{
				if ((this._NormNumOfStudents != value))
				{
					this.OnNormNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._NormNumOfStudents = value;
					this.SendPropertyChanged("NormNumOfStudents");
					this.OnNormNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumOfStudents", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte MaxNumOfStudents
		{
			get
			{
				return this._MaxNumOfStudents;
			}
			set
			{
				if ((this._MaxNumOfStudents != value))
				{
					this.OnMaxNumOfStudentsChanging(value);
					this.SendPropertyChanging();
					this._MaxNumOfStudents = value;
					this.SendPropertyChanged("MaxNumOfStudents");
					this.OnMaxNumOfStudentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInUse", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInUse
		{
			get
			{
				return this._IsInUse;
			}
			set
			{
				if ((this._IsInUse != value))
				{
					this.OnIsInUseChanging(value);
					this.SendPropertyChanging();
					this._IsInUse = value;
					this.SendPropertyChanged("IsInUse");
					this.OnIsInUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportsClassRoomSortOrder", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ReportsClassRoomSortOrder
		{
			get
			{
				return this._ReportsClassRoomSortOrder;
			}
			set
			{
				if ((this._ReportsClassRoomSortOrder != value))
				{
					this.OnReportsClassRoomSortOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportsClassRoomSortOrder = value;
					this.SendPropertyChanged("ReportsClassRoomSortOrder");
					this.OnReportsClassRoomSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_Lecture", Storage="_Lectures", ThisKey="ClassRoom_TC", OtherKey="ClassRoom_TC")]
		public EntitySet<Lecture> Lectures
		{
			get
			{
				return this._Lectures;
			}
			set
			{
				this._Lectures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Complex_ClassRoom", Storage="_Complex", ThisKey="Complex_TC", OtherKey="Complex_TC", IsForeignKey=true)]
		public Complex Complex
		{
			get
			{
				return this._Complex.Entity;
			}
			set
			{
				Complex previousValue = this._Complex.Entity;
				if (((previousValue != value) 
							|| (this._Complex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Complex.Entity = null;
						previousValue.ClassRooms.Remove(this);
					}
					this._Complex.Entity = value;
					if ((value != null))
					{
						value.ClassRooms.Add(this);
						this._Complex_TC = value.Complex_TC;
					}
					else
					{
						this._Complex_TC = default(string);
					}
					this.SendPropertyChanged("Complex");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = this;
		}
		
		private void detach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentInGroupLectures")]
	public partial class StudentInGroupLecture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentInGroupLecture_ID;
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Lecture_ID;
		
		private System.Nullable<bool> _Truancy;
		
		private System.Nullable<short> _Lateness;
		
		private System.Nullable<short> _Departure;
		
		private string _Notes;
		
		private System.Nullable<decimal> _Mark;
		
		private System.Nullable<bool> _IsRecognized;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
		private EntityRef<Lecture> _Lecture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentInGroupLecture_IDChanging(decimal value);
    partial void OnStudentInGroupLecture_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnLecture_IDChanging(decimal value);
    partial void OnLecture_IDChanged();
    partial void OnTruancyChanging(System.Nullable<bool> value);
    partial void OnTruancyChanged();
    partial void OnLatenessChanging(System.Nullable<short> value);
    partial void OnLatenessChanged();
    partial void OnDepartureChanging(System.Nullable<short> value);
    partial void OnDepartureChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    partial void OnIsRecognizedChanging(System.Nullable<bool> value);
    partial void OnIsRecognizedChanged();
    #endregion
		
		public StudentInGroupLecture()
		{
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			this._Lecture = default(EntityRef<Lecture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroupLecture_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StudentInGroupLecture_ID
		{
			get
			{
				return this._StudentInGroupLecture_ID;
			}
			set
			{
				if ((this._StudentInGroupLecture_ID != value))
				{
					this.OnStudentInGroupLecture_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroupLecture_ID = value;
					this.SendPropertyChanged("StudentInGroupLecture_ID");
					this.OnStudentInGroupLecture_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lecture_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Lecture_ID
		{
			get
			{
				return this._Lecture_ID;
			}
			set
			{
				if ((this._Lecture_ID != value))
				{
					if (this._Lecture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLecture_IDChanging(value);
					this.SendPropertyChanging();
					this._Lecture_ID = value;
					this.SendPropertyChanged("Lecture_ID");
					this.OnLecture_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Truancy", DbType="Bit")]
		public System.Nullable<bool> Truancy
		{
			get
			{
				return this._Truancy;
			}
			set
			{
				if ((this._Truancy != value))
				{
					this.OnTruancyChanging(value);
					this.SendPropertyChanging();
					this._Truancy = value;
					this.SendPropertyChanged("Truancy");
					this.OnTruancyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lateness", DbType="SmallInt")]
		public System.Nullable<short> Lateness
		{
			get
			{
				return this._Lateness;
			}
			set
			{
				if ((this._Lateness != value))
				{
					this.OnLatenessChanging(value);
					this.SendPropertyChanging();
					this._Lateness = value;
					this.SendPropertyChanged("Lateness");
					this.OnLatenessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure", DbType="SmallInt")]
		public System.Nullable<short> Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(300)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(2,1)")]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecognized")]
		public System.Nullable<bool> IsRecognized
		{
			get
			{
				return this._IsRecognized;
			}
			set
			{
				if ((this._IsRecognized != value))
				{
					this.OnIsRecognizedChanging(value);
					this.SendPropertyChanging();
					this._IsRecognized = value;
					this.SendPropertyChanged("IsRecognized");
					this.OnIsRecognizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupLecture", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true)]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.StudentInGroupLectures.Remove(this);
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.StudentInGroupLectures.Add(this);
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_StudentInGroupLecture", Storage="_Lecture", ThisKey="Lecture_ID", OtherKey="Lecture_ID", IsForeignKey=true)]
		public Lecture Lecture
		{
			get
			{
				return this._Lecture.Entity;
			}
			set
			{
				Lecture previousValue = this._Lecture.Entity;
				if (((previousValue != value) 
							|| (this._Lecture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecture.Entity = null;
						previousValue.StudentInGroupLectures.Remove(this);
					}
					this._Lecture.Entity = value;
					if ((value != null))
					{
						value.StudentInGroupLectures.Add(this);
						this._Lecture_ID = value.Lecture_ID;
					}
					else
					{
						this._Lecture_ID = default(decimal);
					}
					this.SendPropertyChanged("Lecture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertifications")]
	public partial class Certification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Certification_ID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Vendor_ID;
		
		private string _UrlName;
		
		private bool _IsActive;
		
		private bool _IsStatus;
		
		private int _SortOrder;
		
		private EntitySet<EmployeeCertification> _EmployeeCertifications;
		
		private EntitySet<CertificationExam> _CertificationExams;
		
		private EntitySet<CertificationTable> _CertificationTables;
		
		private EntitySet<CertificationVariant> _CertificationVariants;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertification_IDChanging(decimal value);
    partial void OnCertification_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVendor_IDChanging(int value);
    partial void OnVendor_IDChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsStatusChanging(bool value);
    partial void OnIsStatusChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Certification()
		{
			this._EmployeeCertifications = new EntitySet<EmployeeCertification>(new Action<EmployeeCertification>(this.attach_EmployeeCertifications), new Action<EmployeeCertification>(this.detach_EmployeeCertifications));
			this._CertificationExams = new EntitySet<CertificationExam>(new Action<CertificationExam>(this.attach_CertificationExams), new Action<CertificationExam>(this.detach_CertificationExams));
			this._CertificationTables = new EntitySet<CertificationTable>(new Action<CertificationTable>(this.attach_CertificationTables), new Action<CertificationTable>(this.detach_CertificationTables));
			this._CertificationVariants = new EntitySet<CertificationVariant>(new Action<CertificationVariant>(this.attach_CertificationVariants), new Action<CertificationVariant>(this.detach_CertificationVariants));
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Certification_ID
		{
			get
			{
				return this._Certification_ID;
			}
			set
			{
				if ((this._Certification_ID != value))
				{
					this.OnCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._Certification_ID = value;
					this.SendPropertyChanged("Certification_ID");
					this.OnCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Certification_Name", Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Vendor_ID
		{
			get
			{
				return this._Vendor_ID;
			}
			set
			{
				if ((this._Vendor_ID != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendor_IDChanging(value);
					this.SendPropertyChanging();
					this._Vendor_ID = value;
					this.SendPropertyChanged("Vendor_ID");
					this.OnVendor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStatus")]
		public bool IsStatus
		{
			get
			{
				return this._IsStatus;
			}
			set
			{
				if ((this._IsStatus != value))
				{
					this.OnIsStatusChanging(value);
					this.SendPropertyChanging();
					this._IsStatus = value;
					this.SendPropertyChanged("IsStatus");
					this.OnIsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_EmployeeCertification", Storage="_EmployeeCertifications", ThisKey="Certification_ID", OtherKey="Certification_ID")]
		public EntitySet<EmployeeCertification> EmployeeCertifications
		{
			get
			{
				return this._EmployeeCertifications;
			}
			set
			{
				this._EmployeeCertifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationExam", Storage="_CertificationExams", ThisKey="Certification_ID", OtherKey="Certification_ID")]
		public EntitySet<CertificationExam> CertificationExams
		{
			get
			{
				return this._CertificationExams;
			}
			set
			{
				this._CertificationExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationTable", Storage="_CertificationTables", ThisKey="Certification_ID", OtherKey="Certification_ID")]
		public EntitySet<CertificationTable> CertificationTables
		{
			get
			{
				return this._CertificationTables;
			}
			set
			{
				this._CertificationTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationVariant", Storage="_CertificationVariants", ThisKey="Certification_ID", OtherKey="Certification_ID")]
		public EntitySet<CertificationVariant> CertificationVariants
		{
			get
			{
				return this._CertificationVariants;
			}
			set
			{
				this._CertificationVariants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Certification", Storage="_Vendor", ThisKey="Vendor_ID", OtherKey="Vendor_ID", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Certifications.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Certifications.Add(this);
						this._Vendor_ID = value.Vendor_ID;
					}
					else
					{
						this._Vendor_ID = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeCertifications(EmployeeCertification entity)
		{
			this.SendPropertyChanging();
			entity.Certification = this;
		}
		
		private void detach_EmployeeCertifications(EmployeeCertification entity)
		{
			this.SendPropertyChanging();
			entity.Certification = null;
		}
		
		private void attach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.Certification = this;
		}
		
		private void detach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.Certification = null;
		}
		
		private void attach_CertificationTables(CertificationTable entity)
		{
			this.SendPropertyChanging();
			entity.Certification = this;
		}
		
		private void detach_CertificationTables(CertificationTable entity)
		{
			this.SendPropertyChanging();
			entity.Certification = null;
		}
		
		private void attach_CertificationVariants(CertificationVariant entity)
		{
			this.SendPropertyChanging();
			entity.Certification = this;
		}
		
		private void detach_CertificationVariants(CertificationVariant entity)
		{
			this.SendPropertyChanging();
			entity.Certification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tExams")]
	public partial class Exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Exam_ID;
		
		private string _Exam_TC;
		
		private string _ExamName;
		
		private bool _Available;
		
		private string _ExamType;
		
		private string _Languages;
		
		private string _Minutes;
		
		private int _Vendor_ID;
		
		private System.Nullable<decimal> _ExamPrice;
		
		private System.Nullable<System.DateTime> _DatePublished;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private string _NumberOfQuestions;
		
		private System.Nullable<decimal> _ProviderPrice;
		
		private System.DateTime _LastChangeDate;
		
		private string _AdditionalInfo;
		
		private EntitySet<StudentInGroup> _StudentInGroups;
		
		private EntitySet<ExamProvider> _ExamProviders;
		
		private EntitySet<ExamCourse> _ExamCourses;
		
		private EntitySet<CertificationExam> _CertificationExams;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExam_IDChanging(decimal value);
    partial void OnExam_IDChanged();
    partial void OnExam_TCChanging(string value);
    partial void OnExam_TCChanged();
    partial void OnExamNameChanging(string value);
    partial void OnExamNameChanged();
    partial void OnAvailableChanging(bool value);
    partial void OnAvailableChanged();
    partial void OnExamTypeChanging(string value);
    partial void OnExamTypeChanged();
    partial void OnLanguagesChanging(string value);
    partial void OnLanguagesChanged();
    partial void OnMinutesChanging(string value);
    partial void OnMinutesChanged();
    partial void OnVendor_IDChanging(int value);
    partial void OnVendor_IDChanged();
    partial void OnExamPriceChanging(System.Nullable<decimal> value);
    partial void OnExamPriceChanged();
    partial void OnDatePublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePublishedChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    partial void OnNumberOfQuestionsChanging(string value);
    partial void OnNumberOfQuestionsChanged();
    partial void OnProviderPriceChanging(System.Nullable<decimal> value);
    partial void OnProviderPriceChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnAdditionalInfoChanging(string value);
    partial void OnAdditionalInfoChanged();
    #endregion
		
		public Exam()
		{
			this._StudentInGroups = new EntitySet<StudentInGroup>(new Action<StudentInGroup>(this.attach_StudentInGroups), new Action<StudentInGroup>(this.detach_StudentInGroups));
			this._ExamProviders = new EntitySet<ExamProvider>(new Action<ExamProvider>(this.attach_ExamProviders), new Action<ExamProvider>(this.detach_ExamProviders));
			this._ExamCourses = new EntitySet<ExamCourse>(new Action<ExamCourse>(this.attach_ExamCourses), new Action<ExamCourse>(this.detach_ExamCourses));
			this._CertificationExams = new EntitySet<CertificationExam>(new Action<CertificationExam>(this.attach_CertificationExams), new Action<CertificationExam>(this.detach_CertificationExams));
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Exam_TC
		{
			get
			{
				return this._Exam_TC;
			}
			set
			{
				if ((this._Exam_TC != value))
				{
					this.OnExam_TCChanging(value);
					this.SendPropertyChanging();
					this._Exam_TC = value;
					this.SendPropertyChanged("Exam_TC");
					this.OnExam_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamName", DbType="VarChar(1000)")]
		public string ExamName
		{
			get
			{
				return this._ExamName;
			}
			set
			{
				if ((this._ExamName != value))
				{
					this.OnExamNameChanging(value);
					this.SendPropertyChanging();
					this._ExamName = value;
					this.SendPropertyChanged("ExamName");
					this.OnExamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExamType
		{
			get
			{
				return this._ExamType;
			}
			set
			{
				if ((this._ExamType != value))
				{
					this.OnExamTypeChanging(value);
					this.SendPropertyChanging();
					this._ExamType = value;
					this.SendPropertyChanged("ExamType");
					this.OnExamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Languages", DbType="VarChar(50)")]
		public string Languages
		{
			get
			{
				return this._Languages;
			}
			set
			{
				if ((this._Languages != value))
				{
					this.OnLanguagesChanging(value);
					this.SendPropertyChanging();
					this._Languages = value;
					this.SendPropertyChanged("Languages");
					this.OnLanguagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minutes", DbType="VarChar(50)")]
		public string Minutes
		{
			get
			{
				return this._Minutes;
			}
			set
			{
				if ((this._Minutes != value))
				{
					this.OnMinutesChanging(value);
					this.SendPropertyChanging();
					this._Minutes = value;
					this.SendPropertyChanged("Minutes");
					this.OnMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor_ID", DbType="Int NOT NULL")]
		public int Vendor_ID
		{
			get
			{
				return this._Vendor_ID;
			}
			set
			{
				if ((this._Vendor_ID != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendor_IDChanging(value);
					this.SendPropertyChanging();
					this._Vendor_ID = value;
					this.SendPropertyChanged("Vendor_ID");
					this.OnVendor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPrice", DbType="Money")]
		public System.Nullable<decimal> ExamPrice
		{
			get
			{
				return this._ExamPrice;
			}
			set
			{
				if ((this._ExamPrice != value))
				{
					this.OnExamPriceChanging(value);
					this.SendPropertyChanging();
					this._ExamPrice = value;
					this.SendPropertyChanged("ExamPrice");
					this.OnExamPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePublished")]
		public System.Nullable<System.DateTime> DatePublished
		{
			get
			{
				return this._DatePublished;
			}
			set
			{
				if ((this._DatePublished != value))
				{
					this.OnDatePublishedChanging(value);
					this.SendPropertyChanging();
					this._DatePublished = value;
					this.SendPropertyChanged("DatePublished");
					this.OnDatePublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfQuestions")]
		public string NumberOfQuestions
		{
			get
			{
				return this._NumberOfQuestions;
			}
			set
			{
				if ((this._NumberOfQuestions != value))
				{
					this.OnNumberOfQuestionsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfQuestions = value;
					this.SendPropertyChanged("NumberOfQuestions");
					this.OnNumberOfQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderPrice")]
		public System.Nullable<decimal> ProviderPrice
		{
			get
			{
				return this._ProviderPrice;
			}
			set
			{
				if ((this._ProviderPrice != value))
				{
					this.OnProviderPriceChanging(value);
					this.SendPropertyChanging();
					this._ProviderPrice = value;
					this.SendPropertyChanged("ProviderPrice");
					this.OnProviderPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo")]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this.OnAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInfo = value;
					this.SendPropertyChanged("AdditionalInfo");
					this.OnAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_StudentInGroup", Storage="_StudentInGroups", ThisKey="Exam_ID", OtherKey="Exam_ID")]
		public EntitySet<StudentInGroup> StudentInGroups
		{
			get
			{
				return this._StudentInGroups;
			}
			set
			{
				this._StudentInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamProvider", Storage="_ExamProviders", ThisKey="Exam_ID", OtherKey="Exam_ID")]
		public EntitySet<ExamProvider> ExamProviders
		{
			get
			{
				return this._ExamProviders;
			}
			set
			{
				this._ExamProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamCourse", Storage="_ExamCourses", ThisKey="Exam_ID", OtherKey="Exam_ID")]
		public EntitySet<ExamCourse> ExamCourses
		{
			get
			{
				return this._ExamCourses;
			}
			set
			{
				this._ExamCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_CertificationExam", Storage="_CertificationExams", ThisKey="Exam_ID", OtherKey="Exam_ID")]
		public EntitySet<CertificationExam> CertificationExams
		{
			get
			{
				return this._CertificationExams;
			}
			set
			{
				this._CertificationExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Exam", Storage="_Vendor", ThisKey="Vendor_ID", OtherKey="Vendor_ID", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Exams.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Exams.Add(this);
						this._Vendor_ID = value.Vendor_ID;
					}
					else
					{
						this._Vendor_ID = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
		
		private void attach_ExamProviders(ExamProvider entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_ExamProviders(ExamProvider entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
		
		private void attach_ExamCourses(ExamCourse entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_ExamCourses(ExamCourse entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
		
		private void attach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.Exam = this;
		}
		
		private void detach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.Exam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tExamProviders")]
	public partial class ExamProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamProvider_ID;
		
		private decimal _Exam_ID;
		
		private int _Provider_ID;
		
		private EntityRef<Provider> _Provider;
		
		private EntityRef<Exam> _Exam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamProvider_IDChanging(int value);
    partial void OnExamProvider_IDChanged();
    partial void OnExam_IDChanging(decimal value);
    partial void OnExam_IDChanged();
    partial void OnProvider_IDChanging(int value);
    partial void OnProvider_IDChanged();
    #endregion
		
		public ExamProvider()
		{
			this._Provider = default(EntityRef<Provider>);
			this._Exam = default(EntityRef<Exam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamProvider_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamProvider_ID
		{
			get
			{
				return this._ExamProvider_ID;
			}
			set
			{
				if ((this._ExamProvider_ID != value))
				{
					this.OnExamProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._ExamProvider_ID = value;
					this.SendPropertyChanged("ExamProvider_ID");
					this.OnExamProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_ID", DbType="Int NOT NULL")]
		public int Provider_ID
		{
			get
			{
				return this._Provider_ID;
			}
			set
			{
				if ((this._Provider_ID != value))
				{
					if (this._Provider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvider_IDChanging(value);
					this.SendPropertyChanging();
					this._Provider_ID = value;
					this.SendPropertyChanged("Provider_ID");
					this.OnProvider_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_ExamProvider", Storage="_Provider", ThisKey="Provider_ID", OtherKey="Provider_ID", IsForeignKey=true)]
		public Provider Provider
		{
			get
			{
				return this._Provider.Entity;
			}
			set
			{
				Provider previousValue = this._Provider.Entity;
				if (((previousValue != value) 
							|| (this._Provider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provider.Entity = null;
						previousValue.ExamProviders.Remove(this);
					}
					this._Provider.Entity = value;
					if ((value != null))
					{
						value.ExamProviders.Add(this);
						this._Provider_ID = value.Provider_ID;
					}
					else
					{
						this._Provider_ID = default(int);
					}
					this.SendPropertyChanged("Provider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamProvider", Storage="_Exam", ThisKey="Exam_ID", OtherKey="Exam_ID", IsForeignKey=true)]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.ExamProviders.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.ExamProviders.Add(this);
						this._Exam_ID = value.Exam_ID;
					}
					else
					{
						this._Exam_ID = default(decimal);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tExamCourses")]
	public partial class ExamCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamCourse_ID;
		
		private decimal _Exam_ID;
		
		private string _Course_TC;
		
		private int _SortOrder;
		
		private EntityRef<Exam> _Exam;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamCourse_IDChanging(int value);
    partial void OnExamCourse_IDChanged();
    partial void OnExam_IDChanging(decimal value);
    partial void OnExam_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public ExamCourse()
		{
			this._Exam = default(EntityRef<Exam>);
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamCourse_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExamCourse_ID
		{
			get
			{
				return this._ExamCourse_ID;
			}
			set
			{
				if ((this._ExamCourse_ID != value))
				{
					this.OnExamCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._ExamCourse_ID = value;
					this.SendPropertyChanged("ExamCourse_ID");
					this.OnExamCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_ExamCourse", Storage="_Exam", ThisKey="Exam_ID", OtherKey="Exam_ID", IsForeignKey=true)]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.ExamCourses.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.ExamCourses.Add(this);
						this._Exam_ID = value.Exam_ID;
					}
					else
					{
						this._Exam_ID = default(decimal);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_ExamCourse", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.ExamCourses.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.ExamCourses.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tContactTypes")]
	public partial class ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ContactType_ID;
		
		private string _ContactType;
		
		private EntitySet<EmployeeContact> _EmployeeContacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactType_IDChanging(decimal value);
    partial void OnContactType_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContactType()
		{
			this._EmployeeContacts = new EntitySet<EmployeeContact>(new Action<EmployeeContact>(this.attach_EmployeeContacts), new Action<EmployeeContact>(this.detach_EmployeeContacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactType_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ContactType_ID
		{
			get
			{
				return this._ContactType_ID;
			}
			set
			{
				if ((this._ContactType_ID != value))
				{
					this.OnContactType_IDChanging(value);
					this.SendPropertyChanging();
					this._ContactType_ID = value;
					this.SendPropertyChanged("ContactType_ID");
					this.OnContactType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContactType", Storage="_ContactType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._ContactType;
			}
			set
			{
				if ((this._ContactType != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._ContactType = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_EmployeeContact", Storage="_EmployeeContacts", ThisKey="ContactType_ID", OtherKey="ContactType_ID")]
		public EntitySet<EmployeeContact> EmployeeContacts
		{
			get
			{
				return this._EmployeeContacts;
			}
			set
			{
				this._EmployeeContacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeContacts(EmployeeContact entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = this;
		}
		
		private void detach_EmployeeContacts(EmployeeContact entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeContacts")]
	public partial class EmployeeContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeContact_ID;
		
		private string _EmployeeFK_TC;
		
		private decimal _ContactType_ID;
		
		private string _ContactValue;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<ContactType> _ContactType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeContact_IDChanging(int value);
    partial void OnEmployeeContact_IDChanged();
    partial void OnEmployeeFK_TCChanging(string value);
    partial void OnEmployeeFK_TCChanged();
    partial void OnContactType_IDChanging(decimal value);
    partial void OnContactType_IDChanged();
    partial void OnContactValueChanging(string value);
    partial void OnContactValueChanged();
    #endregion
		
		public EmployeeContact()
		{
			this._Employee = default(EntityRef<Employee>);
			this._ContactType = default(EntityRef<ContactType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeContact_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeContact_ID
		{
			get
			{
				return this._EmployeeContact_ID;
			}
			set
			{
				if ((this._EmployeeContact_ID != value))
				{
					this.OnEmployeeContact_IDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeContact_ID = value;
					this.SendPropertyChanged("EmployeeContact_ID");
					this.OnEmployeeContact_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeFK_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string EmployeeFK_TC
		{
			get
			{
				return this._EmployeeFK_TC;
			}
			set
			{
				if ((this._EmployeeFK_TC != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeFK_TCChanging(value);
					this.SendPropertyChanging();
					this._EmployeeFK_TC = value;
					this.SendPropertyChanged("EmployeeFK_TC");
					this.OnEmployeeFK_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactType_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal ContactType_ID
		{
			get
			{
				return this._ContactType_ID;
			}
			set
			{
				if ((this._ContactType_ID != value))
				{
					if (this._ContactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactType_IDChanging(value);
					this.SendPropertyChanging();
					this._ContactType_ID = value;
					this.SendPropertyChanged("ContactType_ID");
					this.OnContactType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactValue", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ContactValue
		{
			get
			{
				return this._ContactValue;
			}
			set
			{
				if ((this._ContactValue != value))
				{
					this.OnContactValueChanging(value);
					this.SendPropertyChanging();
					this._ContactValue = value;
					this.SendPropertyChanged("ContactValue");
					this.OnContactValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeContact", Storage="_Employee", ThisKey="EmployeeFK_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeContacts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeContacts.Add(this);
						this._EmployeeFK_TC = value.Employee_TC;
					}
					else
					{
						this._EmployeeFK_TC = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_EmployeeContact", Storage="_ContactType", ThisKey="ContactType_ID", OtherKey="ContactType_ID", IsForeignKey=true)]
		public ContactType ContactType
		{
			get
			{
				return this._ContactType.Entity;
			}
			set
			{
				ContactType previousValue = this._ContactType.Entity;
				if (((previousValue != value) 
							|| (this._ContactType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactType.Entity = null;
						previousValue.EmployeeContacts.Remove(this);
					}
					this._ContactType.Entity = value;
					if ((value != null))
					{
						value.EmployeeContacts.Add(this);
						this._ContactType_ID = value.ContactType_ID;
					}
					else
					{
						this._ContactType_ID = default(decimal);
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeCertifications")]
	public partial class EmployeeCertification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeCertification_ID;
		
		private string _EmployeeFK_TC;
		
		private decimal _Certification_ID;
		
		private int _SortOrder;
		
		private System.DateTime _LastChangeDate;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Certification> _Certification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCertification_IDChanging(int value);
    partial void OnEmployeeCertification_IDChanged();
    partial void OnEmployeeFK_TCChanging(string value);
    partial void OnEmployeeFK_TCChanged();
    partial void OnCertification_IDChanging(decimal value);
    partial void OnCertification_IDChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    #endregion
		
		public EmployeeCertification()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Certification = default(EntityRef<Certification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCertification_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeCertification_ID
		{
			get
			{
				return this._EmployeeCertification_ID;
			}
			set
			{
				if ((this._EmployeeCertification_ID != value))
				{
					this.OnEmployeeCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCertification_ID = value;
					this.SendPropertyChanged("EmployeeCertification_ID");
					this.OnEmployeeCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeFK_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string EmployeeFK_TC
		{
			get
			{
				return this._EmployeeFK_TC;
			}
			set
			{
				if ((this._EmployeeFK_TC != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeFK_TCChanging(value);
					this.SendPropertyChanging();
					this._EmployeeFK_TC = value;
					this.SendPropertyChanged("EmployeeFK_TC");
					this.OnEmployeeFK_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Certification_ID
		{
			get
			{
				return this._Certification_ID;
			}
			set
			{
				if ((this._Certification_ID != value))
				{
					if (this._Certification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._Certification_ID = value;
					this.SendPropertyChanged("Certification_ID");
					this.OnCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeCertification", Storage="_Employee", ThisKey="EmployeeFK_TC", OtherKey="Employee_TC", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeCertifications.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeCertifications.Add(this);
						this._EmployeeFK_TC = value.Employee_TC;
					}
					else
					{
						this._EmployeeFK_TC = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_EmployeeCertification", Storage="_Certification", ThisKey="Certification_ID", OtherKey="Certification_ID", IsForeignKey=true)]
		public Certification Certification
		{
			get
			{
				return this._Certification.Entity;
			}
			set
			{
				Certification previousValue = this._Certification.Entity;
				if (((previousValue != value) 
							|| (this._Certification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certification.Entity = null;
						previousValue.EmployeeCertifications.Remove(this);
					}
					this._Certification.Entity = value;
					if ((value != null))
					{
						value.EmployeeCertifications.Add(this);
						this._Certification_ID = value.Certification_ID;
					}
					else
					{
						this._Certification_ID = default(decimal);
					}
					this.SendPropertyChanged("Certification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCoursesChains")]
	public partial class CoursesChain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseChain_ID;
		
		private string _Course_TC;
		
		private string _NextCourse_TC;
		
		private int _SortOrder;
		
		private EntityRef<Course> _NextCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseChain_IDChanging(decimal value);
    partial void OnCourseChain_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnNextCourse_TCChanging(string value);
    partial void OnNextCourse_TCChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public CoursesChain()
		{
			this._NextCourse = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseChain_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CourseChain_ID
		{
			get
			{
				return this._CourseChain_ID;
			}
			set
			{
				if ((this._CourseChain_ID != value))
				{
					this.OnCourseChain_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseChain_ID = value;
					this.SendPropertyChanged("CourseChain_ID");
					this.OnCourseChain_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextCourse_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NextCourse_TC
		{
			get
			{
				return this._NextCourse_TC;
			}
			set
			{
				if ((this._NextCourse_TC != value))
				{
					if (this._NextCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNextCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._NextCourse_TC = value;
					this.SendPropertyChanged("NextCourse_TC");
					this.OnNextCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CoursesChain", Storage="_NextCourse", ThisKey="NextCourse_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course NextCourse
		{
			get
			{
				return this._NextCourse.Entity;
			}
			set
			{
				Course previousValue = this._NextCourse.Entity;
				if (((previousValue != value) 
							|| (this._NextCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NextCourse.Entity = null;
						previousValue.CoursesChains.Remove(this);
					}
					this._NextCourse.Entity = value;
					if ((value != null))
					{
						value.CoursesChains.Add(this);
						this._NextCourse_TC = value.Course_TC;
					}
					else
					{
						this._NextCourse_TC = default(string);
					}
					this.SendPropertyChanged("NextCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertTypes")]
	public partial class CertType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CertType_TC;
		
		private string _CertTypeName;
		
		private bool _IsVisible;
		
		private int _SortOrder;
		
		private string _Description;
		
		private string _UrlName;
		
		private EntitySet<CourseCertificate> _CourseCertificates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertType_TCChanging(string value);
    partial void OnCertType_TCChanged();
    partial void OnCertTypeNameChanging(string value);
    partial void OnCertTypeNameChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    #endregion
		
		public CertType()
		{
			this._CourseCertificates = new EntitySet<CourseCertificate>(new Action<CourseCertificate>(this.attach_CourseCertificates), new Action<CourseCertificate>(this.detach_CourseCertificates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertType_TC
		{
			get
			{
				return this._CertType_TC;
			}
			set
			{
				if ((this._CertType_TC != value))
				{
					this.OnCertType_TCChanging(value);
					this.SendPropertyChanging();
					this._CertType_TC = value;
					this.SendPropertyChanged("CertType_TC");
					this.OnCertType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertTypeName", DbType="VarChar(1000)")]
		public string CertTypeName
		{
			get
			{
				return this._CertTypeName;
			}
			set
			{
				if ((this._CertTypeName != value))
				{
					this.OnCertTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CertTypeName = value;
					this.SendPropertyChanged("CertTypeName");
					this.OnCertTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(5000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(200)")]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertType_CourseCertificate", Storage="_CourseCertificates", ThisKey="CertType_TC", OtherKey="CertType_TC")]
		public EntitySet<CourseCertificate> CourseCertificates
		{
			get
			{
				return this._CourseCertificates;
			}
			set
			{
				this._CourseCertificates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseCertificates(CourseCertificate entity)
		{
			this.SendPropertyChanging();
			entity.CertType = this;
		}
		
		private void detach_CourseCertificates(CourseCertificate entity)
		{
			this.SendPropertyChanging();
			entity.CertType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseCertificates")]
	public partial class CourseCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseCertificate_ID;
		
		private string _Course_TC;
		
		private string _CertType_TC;
		
		private EntityRef<CertType> _CertType;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseCertificate_IDChanging(int value);
    partial void OnCourseCertificate_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnCertType_TCChanging(string value);
    partial void OnCertType_TCChanged();
    #endregion
		
		public CourseCertificate()
		{
			this._CertType = default(EntityRef<CertType>);
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCertificate_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int CourseCertificate_ID
		{
			get
			{
				return this._CourseCertificate_ID;
			}
			set
			{
				if ((this._CourseCertificate_ID != value))
				{
					this.OnCourseCertificate_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseCertificate_ID = value;
					this.SendPropertyChanged("CourseCertificate_ID");
					this.OnCourseCertificate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CertType_TC
		{
			get
			{
				return this._CertType_TC;
			}
			set
			{
				if ((this._CertType_TC != value))
				{
					if (this._CertType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertType_TCChanging(value);
					this.SendPropertyChanging();
					this._CertType_TC = value;
					this.SendPropertyChanged("CertType_TC");
					this.OnCertType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertType_CourseCertificate", Storage="_CertType", ThisKey="CertType_TC", OtherKey="CertType_TC", IsForeignKey=true)]
		public CertType CertType
		{
			get
			{
				return this._CertType.Entity;
			}
			set
			{
				CertType previousValue = this._CertType.Entity;
				if (((previousValue != value) 
							|| (this._CertType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CertType.Entity = null;
						previousValue.CourseCertificates.Remove(this);
					}
					this._CertType.Entity = value;
					if ((value != null))
					{
						value.CourseCertificates.Add(this);
						this._CertType_TC = value.CertType_TC;
					}
					else
					{
						this._CertType_TC = default(string);
					}
					this.SendPropertyChanged("CertType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseCertificate", Storage="_Course", ThisKey="Course_TC", OtherKey="Course_TC", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseCertificates.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseCertificates.Add(this);
						this._Course_TC = value.Course_TC;
					}
					else
					{
						this._Course_TC = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertificationExams")]
	public partial class CertificationExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CertificationExam_ID;
		
		private decimal _Certification_ID;
		
		private decimal _Exam_ID;
		
		private bool _IsRequired;
		
		private string _CertificationExamsSet;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private System.Nullable<decimal> _CertificationVariant_ID;
		
		private System.Nullable<decimal> _CertificationTable_ID;
		
		private EntityRef<CertificationTable> _CertificationTable;
		
		private EntityRef<CertificationVariant> _CertificationVariant;
		
		private EntityRef<Certification> _Certification;
		
		private EntityRef<Exam> _Exam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificationExam_IDChanging(int value);
    partial void OnCertificationExam_IDChanged();
    partial void OnCertification_IDChanging(decimal value);
    partial void OnCertification_IDChanged();
    partial void OnExam_IDChanging(decimal value);
    partial void OnExam_IDChanged();
    partial void OnIsRequiredChanging(bool value);
    partial void OnIsRequiredChanged();
    partial void OnCertificationExamsSetChanging(string value);
    partial void OnCertificationExamsSetChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnCertificationVariant_IDChanging(System.Nullable<decimal> value);
    partial void OnCertificationVariant_IDChanged();
    partial void OnCertificationTable_IDChanging(System.Nullable<decimal> value);
    partial void OnCertificationTable_IDChanged();
    #endregion
		
		public CertificationExam()
		{
			this._CertificationTable = default(EntityRef<CertificationTable>);
			this._CertificationVariant = default(EntityRef<CertificationVariant>);
			this._Certification = default(EntityRef<Certification>);
			this._Exam = default(EntityRef<Exam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationExam_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CertificationExam_ID
		{
			get
			{
				return this._CertificationExam_ID;
			}
			set
			{
				if ((this._CertificationExam_ID != value))
				{
					this.OnCertificationExam_IDChanging(value);
					this.SendPropertyChanging();
					this._CertificationExam_ID = value;
					this.SendPropertyChanged("CertificationExam_ID");
					this.OnCertificationExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Certification_ID
		{
			get
			{
				return this._Certification_ID;
			}
			set
			{
				if ((this._Certification_ID != value))
				{
					if (this._Certification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._Certification_ID = value;
					this.SendPropertyChanged("Certification_ID");
					this.OnCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exam_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Exam_ID
		{
			get
			{
				return this._Exam_ID;
			}
			set
			{
				if ((this._Exam_ID != value))
				{
					if (this._Exam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExam_IDChanging(value);
					this.SendPropertyChanging();
					this._Exam_ID = value;
					this.SendPropertyChanged("Exam_ID");
					this.OnExam_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequired", DbType="Bit NOT NULL")]
		public bool IsRequired
		{
			get
			{
				return this._IsRequired;
			}
			set
			{
				if ((this._IsRequired != value))
				{
					this.OnIsRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsRequired = value;
					this.SendPropertyChanged("IsRequired");
					this.OnIsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationExamsSet", DbType="VarChar(250)")]
		public string CertificationExamsSet
		{
			get
			{
				return this._CertificationExamsSet;
			}
			set
			{
				if ((this._CertificationExamsSet != value))
				{
					this.OnCertificationExamsSetChanging(value);
					this.SendPropertyChanging();
					this._CertificationExamsSet = value;
					this.SendPropertyChanged("CertificationExamsSet");
					this.OnCertificationExamsSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationVariant_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CertificationVariant_ID
		{
			get
			{
				return this._CertificationVariant_ID;
			}
			set
			{
				if ((this._CertificationVariant_ID != value))
				{
					if (this._CertificationVariant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificationVariant_IDChanging(value);
					this.SendPropertyChanging();
					this._CertificationVariant_ID = value;
					this.SendPropertyChanged("CertificationVariant_ID");
					this.OnCertificationVariant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationTable_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CertificationTable_ID
		{
			get
			{
				return this._CertificationTable_ID;
			}
			set
			{
				if ((this._CertificationTable_ID != value))
				{
					if (this._CertificationTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificationTable_IDChanging(value);
					this.SendPropertyChanging();
					this._CertificationTable_ID = value;
					this.SendPropertyChanged("CertificationTable_ID");
					this.OnCertificationTable_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificationTable_CertificationExam", Storage="_CertificationTable", ThisKey="CertificationTable_ID", OtherKey="CertificationTable_ID", IsForeignKey=true)]
		public CertificationTable CertificationTable
		{
			get
			{
				return this._CertificationTable.Entity;
			}
			set
			{
				CertificationTable previousValue = this._CertificationTable.Entity;
				if (((previousValue != value) 
							|| (this._CertificationTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CertificationTable.Entity = null;
						previousValue.CertificationExams.Remove(this);
					}
					this._CertificationTable.Entity = value;
					if ((value != null))
					{
						value.CertificationExams.Add(this);
						this._CertificationTable_ID = value.CertificationTable_ID;
					}
					else
					{
						this._CertificationTable_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("CertificationTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificationVariant_CertificationExam", Storage="_CertificationVariant", ThisKey="CertificationVariant_ID", OtherKey="CertificationVariant_ID", IsForeignKey=true)]
		public CertificationVariant CertificationVariant
		{
			get
			{
				return this._CertificationVariant.Entity;
			}
			set
			{
				CertificationVariant previousValue = this._CertificationVariant.Entity;
				if (((previousValue != value) 
							|| (this._CertificationVariant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CertificationVariant.Entity = null;
						previousValue.CertificationExams.Remove(this);
					}
					this._CertificationVariant.Entity = value;
					if ((value != null))
					{
						value.CertificationExams.Add(this);
						this._CertificationVariant_ID = value.CertificationVariant_ID;
					}
					else
					{
						this._CertificationVariant_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("CertificationVariant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationExam", Storage="_Certification", ThisKey="Certification_ID", OtherKey="Certification_ID", IsForeignKey=true)]
		public Certification Certification
		{
			get
			{
				return this._Certification.Entity;
			}
			set
			{
				Certification previousValue = this._Certification.Entity;
				if (((previousValue != value) 
							|| (this._Certification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certification.Entity = null;
						previousValue.CertificationExams.Remove(this);
					}
					this._Certification.Entity = value;
					if ((value != null))
					{
						value.CertificationExams.Add(this);
						this._Certification_ID = value.Certification_ID;
					}
					else
					{
						this._Certification_ID = default(decimal);
					}
					this.SendPropertyChanged("Certification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_CertificationExam", Storage="_Exam", ThisKey="Exam_ID", OtherKey="Exam_ID", IsForeignKey=true)]
		public Exam Exam
		{
			get
			{
				return this._Exam.Entity;
			}
			set
			{
				Exam previousValue = this._Exam.Entity;
				if (((previousValue != value) 
							|| (this._Exam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exam.Entity = null;
						previousValue.CertificationExams.Remove(this);
					}
					this._Exam.Entity = value;
					if ((value != null))
					{
						value.CertificationExams.Add(this);
						this._Exam_ID = value.Exam_ID;
					}
					else
					{
						this._Exam_ID = default(decimal);
					}
					this.SendPropertyChanged("Exam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertificationTables")]
	public partial class CertificationTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CertificationTable_ID;
		
		private decimal _Certification_ID;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<CertificationExam> _CertificationExams;
		
		private EntityRef<Certification> _Certification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificationTable_IDChanging(decimal value);
    partial void OnCertificationTable_IDChanged();
    partial void OnCertification_IDChanging(decimal value);
    partial void OnCertification_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CertificationTable()
		{
			this._CertificationExams = new EntitySet<CertificationExam>(new Action<CertificationExam>(this.attach_CertificationExams), new Action<CertificationExam>(this.detach_CertificationExams));
			this._Certification = default(EntityRef<Certification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationTable_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CertificationTable_ID
		{
			get
			{
				return this._CertificationTable_ID;
			}
			set
			{
				if ((this._CertificationTable_ID != value))
				{
					this.OnCertificationTable_IDChanging(value);
					this.SendPropertyChanging();
					this._CertificationTable_ID = value;
					this.SendPropertyChanged("CertificationTable_ID");
					this.OnCertificationTable_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Certification_ID
		{
			get
			{
				return this._Certification_ID;
			}
			set
			{
				if ((this._Certification_ID != value))
				{
					if (this._Certification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._Certification_ID = value;
					this.SendPropertyChanged("Certification_ID");
					this.OnCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificationTable_CertificationExam", Storage="_CertificationExams", ThisKey="CertificationTable_ID", OtherKey="CertificationTable_ID")]
		public EntitySet<CertificationExam> CertificationExams
		{
			get
			{
				return this._CertificationExams;
			}
			set
			{
				this._CertificationExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationTable", Storage="_Certification", ThisKey="Certification_ID", OtherKey="Certification_ID", IsForeignKey=true)]
		public Certification Certification
		{
			get
			{
				return this._Certification.Entity;
			}
			set
			{
				Certification previousValue = this._Certification.Entity;
				if (((previousValue != value) 
							|| (this._Certification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certification.Entity = null;
						previousValue.CertificationTables.Remove(this);
					}
					this._Certification.Entity = value;
					if ((value != null))
					{
						value.CertificationTables.Add(this);
						this._Certification_ID = value.Certification_ID;
					}
					else
					{
						this._Certification_ID = default(decimal);
					}
					this.SendPropertyChanged("Certification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.CertificationTable = this;
		}
		
		private void detach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.CertificationTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertificationVariants")]
	public partial class CertificationVariant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CertificationVariant_ID;
		
		private decimal _Certification_ID;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<CertificationExam> _CertificationExams;
		
		private EntityRef<Certification> _Certification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificationVariant_IDChanging(decimal value);
    partial void OnCertificationVariant_IDChanged();
    partial void OnCertification_IDChanging(decimal value);
    partial void OnCertification_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CertificationVariant()
		{
			this._CertificationExams = new EntitySet<CertificationExam>(new Action<CertificationExam>(this.attach_CertificationExams), new Action<CertificationExam>(this.detach_CertificationExams));
			this._Certification = default(EntityRef<Certification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationVariant_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal CertificationVariant_ID
		{
			get
			{
				return this._CertificationVariant_ID;
			}
			set
			{
				if ((this._CertificationVariant_ID != value))
				{
					this.OnCertificationVariant_IDChanging(value);
					this.SendPropertyChanging();
					this._CertificationVariant_ID = value;
					this.SendPropertyChanged("CertificationVariant_ID");
					this.OnCertificationVariant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Certification_ID
		{
			get
			{
				return this._Certification_ID;
			}
			set
			{
				if ((this._Certification_ID != value))
				{
					if (this._Certification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertification_IDChanging(value);
					this.SendPropertyChanging();
					this._Certification_ID = value;
					this.SendPropertyChanged("Certification_ID");
					this.OnCertification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificationVariant_CertificationExam", Storage="_CertificationExams", ThisKey="CertificationVariant_ID", OtherKey="CertificationVariant_ID")]
		public EntitySet<CertificationExam> CertificationExams
		{
			get
			{
				return this._CertificationExams;
			}
			set
			{
				this._CertificationExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certification_CertificationVariant", Storage="_Certification", ThisKey="Certification_ID", OtherKey="Certification_ID", IsForeignKey=true)]
		public Certification Certification
		{
			get
			{
				return this._Certification.Entity;
			}
			set
			{
				Certification previousValue = this._Certification.Entity;
				if (((previousValue != value) 
							|| (this._Certification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certification.Entity = null;
						previousValue.CertificationVariants.Remove(this);
					}
					this._Certification.Entity = value;
					if ((value != null))
					{
						value.CertificationVariants.Add(this);
						this._Certification_ID = value.Certification_ID;
					}
					else
					{
						this._Certification_ID = default(decimal);
					}
					this.SendPropertyChanged("Certification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.CertificationVariant = this;
		}
		
		private void detach_CertificationExams(CertificationExam entity)
		{
			this.SendPropertyChanging();
			entity.CertificationVariant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentEmails")]
	public partial class StudentEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentEmail_ID;
		
		private decimal _Student_ID;
		
		private string _Email;
		
		private bool _NoSpam;
		
		private bool _NotActual;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentEmail_IDChanging(decimal value);
    partial void OnStudentEmail_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNoSpamChanging(bool value);
    partial void OnNoSpamChanged();
    partial void OnNotActualChanging(bool value);
    partial void OnNotActualChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public StudentEmail()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentEmail_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal StudentEmail_ID
		{
			get
			{
				return this._StudentEmail_ID;
			}
			set
			{
				if ((this._StudentEmail_ID != value))
				{
					this.OnStudentEmail_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentEmail_ID = value;
					this.SendPropertyChanged("StudentEmail_ID");
					this.OnStudentEmail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoSpam", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NoSpam
		{
			get
			{
				return this._NoSpam;
			}
			set
			{
				if ((this._NoSpam != value))
				{
					this.OnNoSpamChanging(value);
					this.SendPropertyChanging();
					this._NoSpam = value;
					this.SendPropertyChanged("NoSpam");
					this.OnNoSpamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotActual", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NotActual
		{
			get
			{
				return this._NotActual;
			}
			set
			{
				if ((this._NotActual != value))
				{
					this.OnNotActualChanging(value);
					this.SendPropertyChanging();
					this._NotActual = value;
					this.SendPropertyChanged("NotActual");
					this.OnNotActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentEmail", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentEmails.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentEmails.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentPhones")]
	public partial class StudentPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentPhone_ID;
		
		private decimal _Student_ID;
		
		private System.Nullable<char> _PhoneType_TC;
		
		private string _PhoneNumber;
		
		private bool _IsFax;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _InputDate;
		
		private string _Employee_TC;
		
		private System.Nullable<System.DateTime> _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private string _DigitPhoneNumber;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentPhone_IDChanging(decimal value);
    partial void OnStudentPhone_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnPhoneType_TCChanging(System.Nullable<char> value);
    partial void OnPhoneType_TCChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIsFaxChanging(bool value);
    partial void OnIsFaxChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnDigitPhoneNumberChanging(string value);
    partial void OnDigitPhoneNumberChanged();
    #endregion
		
		public StudentPhone()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhone_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StudentPhone_ID
		{
			get
			{
				return this._StudentPhone_ID;
			}
			set
			{
				if ((this._StudentPhone_ID != value))
				{
					this.OnStudentPhone_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentPhone_ID = value;
					this.SendPropertyChanged("StudentPhone_ID");
					this.OnStudentPhone_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneType_TC", DbType="Char(1)")]
		public System.Nullable<char> PhoneType_TC
		{
			get
			{
				return this._PhoneType_TC;
			}
			set
			{
				if ((this._PhoneType_TC != value))
				{
					this.OnPhoneType_TCChanging(value);
					this.SendPropertyChanging();
					this._PhoneType_TC = value;
					this.SendPropertyChanged("PhoneType_TC");
					this.OnPhoneType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFax", DbType="Bit NOT NULL")]
		public bool IsFax
		{
			get
			{
				return this._IsFax;
			}
			set
			{
				if ((this._IsFax != value))
				{
					this.OnIsFaxChanging(value);
					this.SendPropertyChanging();
					this._IsFax = value;
					this.SendPropertyChanged("IsFax");
					this.OnIsFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7)")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7)")]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitPhoneNumber", AutoSync=AutoSync.Always, DbType="VarChar(150)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string DigitPhoneNumber
		{
			get
			{
				return this._DigitPhoneNumber;
			}
			set
			{
				if ((this._DigitPhoneNumber != value))
				{
					this.OnDigitPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._DigitPhoneNumber = value;
					this.SendPropertyChanged("DigitPhoneNumber");
					this.OnDigitPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentPhone", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentPhones.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentPhones.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentInGroupSources")]
	public partial class StudentInGroupSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentInGroupSource_ID;
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Source_ID;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _InputDate;
		
		private string _Employee_TC;
		
		private System.Nullable<System.DateTime> _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private System.Nullable<bool> _IsPrimarySource;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentInGroupSource_IDChanging(decimal value);
    partial void OnStudentInGroupSource_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnSource_IDChanging(decimal value);
    partial void OnSource_IDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnInputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnIsPrimarySourceChanging(System.Nullable<bool> value);
    partial void OnIsPrimarySourceChanged();
    #endregion
		
		public StudentInGroupSource()
		{
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroupSource_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StudentInGroupSource_ID
		{
			get
			{
				return this._StudentInGroupSource_ID;
			}
			set
			{
				if ((this._StudentInGroupSource_ID != value))
				{
					this.OnStudentInGroupSource_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroupSource_ID = value;
					this.SendPropertyChanged("StudentInGroupSource_ID");
					this.OnStudentInGroupSource_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Source_ID
		{
			get
			{
				return this._Source_ID;
			}
			set
			{
				if ((this._Source_ID != value))
				{
					this.OnSource_IDChanging(value);
					this.SendPropertyChanging();
					this._Source_ID = value;
					this.SendPropertyChanged("Source_ID");
					this.OnSource_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(100)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7)")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7)")]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimarySource", DbType="Bit")]
		public System.Nullable<bool> IsPrimarySource
		{
			get
			{
				return this._IsPrimarySource;
			}
			set
			{
				if ((this._IsPrimarySource != value))
				{
					this.OnIsPrimarySourceChanging(value);
					this.SendPropertyChanging();
					this._IsPrimarySource = value;
					this.SendPropertyChanged("IsPrimarySource");
					this.OnIsPrimarySourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupSource", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true)]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.StudentInGroupSources.Remove(this);
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.StudentInGroupSources.Add(this);
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOurOrgBanks")]
	public partial class OurOrgBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _OurOrgBank_ID;
		
		private string _OurOrg_TC;
		
		private byte _BankSortOrder;
		
		private string _SettlementAccount;
		
		private string _CorrespondentAccount;
		
		private string _BIK;
		
		private string _BankName;
		
		private bool _Visible;
		
		private bool _IsUsedForSBReceipt;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private string _BankMainName;
		
		private string _BankDepartment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOurOrgBank_IDChanging(byte value);
    partial void OnOurOrgBank_IDChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnBankSortOrderChanging(byte value);
    partial void OnBankSortOrderChanged();
    partial void OnSettlementAccountChanging(string value);
    partial void OnSettlementAccountChanged();
    partial void OnCorrespondentAccountChanging(string value);
    partial void OnCorrespondentAccountChanged();
    partial void OnBIKChanging(string value);
    partial void OnBIKChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnIsUsedForSBReceiptChanging(bool value);
    partial void OnIsUsedForSBReceiptChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnBankMainNameChanging(string value);
    partial void OnBankMainNameChanged();
    partial void OnBankDepartmentChanging(string value);
    partial void OnBankDepartmentChanged();
    #endregion
		
		public OurOrgBank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrgBank_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte OurOrgBank_ID
		{
			get
			{
				return this._OurOrgBank_ID;
			}
			set
			{
				if ((this._OurOrgBank_ID != value))
				{
					this.OnOurOrgBank_IDChanging(value);
					this.SendPropertyChanging();
					this._OurOrgBank_ID = value;
					this.SendPropertyChanged("OurOrgBank_ID");
					this.OnOurOrgBank_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankSortOrder", DbType="TinyInt NOT NULL")]
		public byte BankSortOrder
		{
			get
			{
				return this._BankSortOrder;
			}
			set
			{
				if ((this._BankSortOrder != value))
				{
					this.OnBankSortOrderChanging(value);
					this.SendPropertyChanging();
					this._BankSortOrder = value;
					this.SendPropertyChanged("BankSortOrder");
					this.OnBankSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SettlementAccount
		{
			get
			{
				return this._SettlementAccount;
			}
			set
			{
				if ((this._SettlementAccount != value))
				{
					this.OnSettlementAccountChanging(value);
					this.SendPropertyChanging();
					this._SettlementAccount = value;
					this.SendPropertyChanged("SettlementAccount");
					this.OnSettlementAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondentAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CorrespondentAccount
		{
			get
			{
				return this._CorrespondentAccount;
			}
			set
			{
				if ((this._CorrespondentAccount != value))
				{
					this.OnCorrespondentAccountChanging(value);
					this.SendPropertyChanging();
					this._CorrespondentAccount = value;
					this.SendPropertyChanged("CorrespondentAccount");
					this.OnCorrespondentAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIK", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BIK
		{
			get
			{
				return this._BIK;
			}
			set
			{
				if ((this._BIK != value))
				{
					this.OnBIKChanging(value);
					this.SendPropertyChanging();
					this._BIK = value;
					this.SendPropertyChanged("BIK");
					this.OnBIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsedForSBReceipt", DbType="Bit NOT NULL")]
		public bool IsUsedForSBReceipt
		{
			get
			{
				return this._IsUsedForSBReceipt;
			}
			set
			{
				if ((this._IsUsedForSBReceipt != value))
				{
					this.OnIsUsedForSBReceiptChanging(value);
					this.SendPropertyChanging();
					this._IsUsedForSBReceipt = value;
					this.SendPropertyChanged("IsUsedForSBReceipt");
					this.OnIsUsedForSBReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankMainName", DbType="VarChar(500)")]
		public string BankMainName
		{
			get
			{
				return this._BankMainName;
			}
			set
			{
				if ((this._BankMainName != value))
				{
					this.OnBankMainNameChanging(value);
					this.SendPropertyChanging();
					this._BankMainName = value;
					this.SendPropertyChanged("BankMainName");
					this.OnBankMainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDepartment", DbType="VarChar(500)")]
		public string BankDepartment
		{
			get
			{
				return this._BankDepartment;
			}
			set
			{
				if ((this._BankDepartment != value))
				{
					this.OnBankDepartmentChanging(value);
					this.SendPropertyChanging();
					this._BankDepartment = value;
					this.SendPropertyChanged("BankDepartment");
					this.OnBankDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tProfessions")]
	public partial class Profession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Profession_ID;
		
		private decimal _Industry_ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private decimal _Salary;
		
		private bool _ForMainPage;
		
		private int _WebSortOrder;
		
		private string _SuperJobID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfession_IDChanging(int value);
    partial void OnProfession_IDChanged();
    partial void OnIndustry_IDChanging(decimal value);
    partial void OnIndustry_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnForMainPageChanging(bool value);
    partial void OnForMainPageChanged();
    partial void OnWebSortOrderChanging(int value);
    partial void OnWebSortOrderChanged();
    partial void OnSuperJobIDChanging(string value);
    partial void OnSuperJobIDChanged();
    #endregion
		
		public Profession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Profession_ID
		{
			get
			{
				return this._Profession_ID;
			}
			set
			{
				if ((this._Profession_ID != value))
				{
					this.OnProfession_IDChanging(value);
					this.SendPropertyChanging();
					this._Profession_ID = value;
					this.SendPropertyChanged("Profession_ID");
					this.OnProfession_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Industry_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Industry_ID
		{
			get
			{
				return this._Industry_ID;
			}
			set
			{
				if ((this._Industry_ID != value))
				{
					this.OnIndustry_IDChanging(value);
					this.SendPropertyChanging();
					this._Industry_ID = value;
					this.SendPropertyChanged("Industry_ID");
					this.OnIndustry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProfessionName", Storage="_Name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="VarChar(100)")]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(3000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Money NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForMainPage", DbType="Bit NOT NULL")]
		public bool ForMainPage
		{
			get
			{
				return this._ForMainPage;
			}
			set
			{
				if ((this._ForMainPage != value))
				{
					this.OnForMainPageChanging(value);
					this.SendPropertyChanging();
					this._ForMainPage = value;
					this.SendPropertyChanged("ForMainPage");
					this.OnForMainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSortOrder", DbType="Int NOT NULL")]
		public int WebSortOrder
		{
			get
			{
				return this._WebSortOrder;
			}
			set
			{
				if ((this._WebSortOrder != value))
				{
					this.OnWebSortOrderChanging(value);
					this.SendPropertyChanging();
					this._WebSortOrder = value;
					this.SendPropertyChanged("WebSortOrder");
					this.OnWebSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperJobID")]
		public string SuperJobID
		{
			get
			{
				return this._SuperJobID;
			}
			set
			{
				if ((this._SuperJobID != value))
				{
					this.OnSuperJobIDChanging(value);
					this.SendPropertyChanging();
					this._SuperJobID = value;
					this.SendPropertyChanged("SuperJobID");
					this.OnSuperJobIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tExtras")]
	public partial class Extras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Extras_ID;
		
		private string _ExtrasName;
		
		private string _ExtrasPriceType_TC;
		
		private System.Nullable<decimal> _CurrentPrice;
		
		private System.Nullable<decimal> _CalkCoeffCert;
		
		private bool _IsVisible;
		
		private int _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtras_IDChanging(decimal value);
    partial void OnExtras_IDChanged();
    partial void OnExtrasNameChanging(string value);
    partial void OnExtrasNameChanged();
    partial void OnExtrasPriceType_TCChanging(string value);
    partial void OnExtrasPriceType_TCChanged();
    partial void OnCurrentPriceChanging(System.Nullable<decimal> value);
    partial void OnCurrentPriceChanged();
    partial void OnCalkCoeffCertChanging(System.Nullable<decimal> value);
    partial void OnCalkCoeffCertChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Extras()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extras_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Extras_ID
		{
			get
			{
				return this._Extras_ID;
			}
			set
			{
				if ((this._Extras_ID != value))
				{
					this.OnExtras_IDChanging(value);
					this.SendPropertyChanging();
					this._Extras_ID = value;
					this.SendPropertyChanged("Extras_ID");
					this.OnExtras_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtrasName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ExtrasName
		{
			get
			{
				return this._ExtrasName;
			}
			set
			{
				if ((this._ExtrasName != value))
				{
					this.OnExtrasNameChanging(value);
					this.SendPropertyChanging();
					this._ExtrasName = value;
					this.SendPropertyChanged("ExtrasName");
					this.OnExtrasNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtrasPriceType_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExtrasPriceType_TC
		{
			get
			{
				return this._ExtrasPriceType_TC;
			}
			set
			{
				if ((this._ExtrasPriceType_TC != value))
				{
					this.OnExtrasPriceType_TCChanging(value);
					this.SendPropertyChanging();
					this._ExtrasPriceType_TC = value;
					this.SendPropertyChanged("ExtrasPriceType_TC");
					this.OnExtrasPriceType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Money")]
		public System.Nullable<decimal> CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalkCoeffCert", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> CalkCoeffCert
		{
			get
			{
				return this._CalkCoeffCert;
			}
			set
			{
				if ((this._CalkCoeffCert != value))
				{
					this.OnCalkCoeffCertChanging(value);
					this.SendPropertyChanging();
					this._CalkCoeffCert = value;
					this.SendPropertyChanged("CalkCoeffCert");
					this.OnCalkCoeffCertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentInGroupExtras")]
	public partial class StudentInGroupExtras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentInGroupExtras_ID;
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Extras_ID;
		
		private string _SIGExtraNote;
		
		private System.Nullable<decimal> _AgreedPrice;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentInGroupExtras_IDChanging(decimal value);
    partial void OnStudentInGroupExtras_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnExtras_IDChanging(decimal value);
    partial void OnExtras_IDChanged();
    partial void OnSIGExtraNoteChanging(string value);
    partial void OnSIGExtraNoteChanged();
    partial void OnAgreedPriceChanging(System.Nullable<decimal> value);
    partial void OnAgreedPriceChanged();
    #endregion
		
		public StudentInGroupExtras()
		{
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroupExtras_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal StudentInGroupExtras_ID
		{
			get
			{
				return this._StudentInGroupExtras_ID;
			}
			set
			{
				if ((this._StudentInGroupExtras_ID != value))
				{
					this.OnStudentInGroupExtras_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroupExtras_ID = value;
					this.SendPropertyChanged("StudentInGroupExtras_ID");
					this.OnStudentInGroupExtras_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extras_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Extras_ID
		{
			get
			{
				return this._Extras_ID;
			}
			set
			{
				if ((this._Extras_ID != value))
				{
					this.OnExtras_IDChanging(value);
					this.SendPropertyChanging();
					this._Extras_ID = value;
					this.SendPropertyChanged("Extras_ID");
					this.OnExtras_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIGExtraNote", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string SIGExtraNote
		{
			get
			{
				return this._SIGExtraNote;
			}
			set
			{
				if ((this._SIGExtraNote != value))
				{
					this.OnSIGExtraNoteChanging(value);
					this.SendPropertyChanging();
					this._SIGExtraNote = value;
					this.SendPropertyChanged("SIGExtraNote");
					this.OnSIGExtraNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreedPrice", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AgreedPrice
		{
			get
			{
				return this._AgreedPrice;
			}
			set
			{
				if ((this._AgreedPrice != value))
				{
					this.OnAgreedPriceChanging(value);
					this.SendPropertyChanging();
					this._AgreedPrice = value;
					this.SendPropertyChanged("AgreedPrice");
					this.OnAgreedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_StudentInGroupExtras", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true)]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.StudentInGroupExtras.Remove(this);
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.StudentInGroupExtras.Add(this);
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCertificates")]
	public partial class Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Certificate_ID;
		
		private decimal _StudentInGroup_ID;
		
		private string _CourseFullName;
		
		private System.Nullable<System.DateTime> _DateBeg;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _FullNumber;
		
		private decimal _Hours;
		
		private string _OurOrg_TC;
		
		private bool _ForPrint;
		
		private string _CertType_TC;
		
		private EntityRef<StudentInGroup> _StudentInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificate_IDChanging(decimal value);
    partial void OnCertificate_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnCourseFullNameChanging(string value);
    partial void OnCourseFullNameChanged();
    partial void OnDateBegChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBegChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnFullNumberChanging(string value);
    partial void OnFullNumberChanged();
    partial void OnHoursChanging(decimal value);
    partial void OnHoursChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnForPrintChanging(bool value);
    partial void OnForPrintChanged();
    partial void OnCertType_TCChanging(string value);
    partial void OnCertType_TCChanged();
    #endregion
		
		public Certificate()
		{
			this._StudentInGroup = default(EntityRef<StudentInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Certificate_ID
		{
			get
			{
				return this._Certificate_ID;
			}
			set
			{
				if ((this._Certificate_ID != value))
				{
					this.OnCertificate_IDChanging(value);
					this.SendPropertyChanging();
					this._Certificate_ID = value;
					this.SendPropertyChanged("Certificate_ID");
					this.OnCertificate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					if (this._StudentInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFullName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string CourseFullName
		{
			get
			{
				return this._CourseFullName;
			}
			set
			{
				if ((this._CourseFullName != value))
				{
					this.OnCourseFullNameChanging(value);
					this.SendPropertyChanging();
					this._CourseFullName = value;
					this.SendPropertyChanged("CourseFullName");
					this.OnCourseFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBeg", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateBeg
		{
			get
			{
				return this._DateBeg;
			}
			set
			{
				if ((this._DateBeg != value))
				{
					this.OnDateBegChanging(value);
					this.SendPropertyChanging();
					this._DateBeg = value;
					this.SendPropertyChanged("DateBeg");
					this.OnDateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNumber", AutoSync=AutoSync.Always, DbType="VarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FullNumber
		{
			get
			{
				return this._FullNumber;
			}
			set
			{
				if ((this._FullNumber != value))
				{
					this.OnFullNumberChanging(value);
					this.SendPropertyChanging();
					this._FullNumber = value;
					this.SendPropertyChanged("FullNumber");
					this.OnFullNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours")]
		public decimal Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", CanBeNull=false)]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForPrint")]
		public bool ForPrint
		{
			get
			{
				return this._ForPrint;
			}
			set
			{
				if ((this._ForPrint != value))
				{
					this.OnForPrintChanging(value);
					this.SendPropertyChanging();
					this._ForPrint = value;
					this.SendPropertyChanged("ForPrint");
					this.OnForPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertType_TC")]
		public string CertType_TC
		{
			get
			{
				return this._CertType_TC;
			}
			set
			{
				if ((this._CertType_TC != value))
				{
					this.OnCertType_TCChanging(value);
					this.SendPropertyChanging();
					this._CertType_TC = value;
					this.SendPropertyChanged("CertType_TC");
					this.OnCertType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentInGroup_Certificate", Storage="_StudentInGroup", ThisKey="StudentInGroup_ID", OtherKey="StudentInGroup_ID", IsForeignKey=true)]
		public StudentInGroup StudentInGroup
		{
			get
			{
				return this._StudentInGroup.Entity;
			}
			set
			{
				StudentInGroup previousValue = this._StudentInGroup.Entity;
				if (((previousValue != value) 
							|| (this._StudentInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentInGroup.Entity = null;
						previousValue.Certificates.Remove(this);
					}
					this._StudentInGroup.Entity = value;
					if ((value != null))
					{
						value.Certificates.Add(this);
						this._StudentInGroup_ID = value.StudentInGroup_ID;
					}
					else
					{
						this._StudentInGroup_ID = default(decimal);
					}
					this.SendPropertyChanged("StudentInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentNotes")]
	public partial class StudentNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentNote_ID;
		
		private decimal _Student_ID;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentNote_IDChanging(decimal value);
    partial void OnStudentNote_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public StudentNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNote_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StudentNote_ID
		{
			get
			{
				return this._StudentNote_ID;
			}
			set
			{
				if ((this._StudentNote_ID != value))
				{
					this.OnStudentNote_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentNote_ID = value;
					this.SendPropertyChanged("StudentNote_ID");
					this.OnStudentNote_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudyReasons")]
	public partial class StudyReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Reason_ID;
		
		private string _Description;
		
		private int _SortOrder;
		
		private bool _IsVisible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReason_IDChanging(decimal value);
    partial void OnReason_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public StudyReason()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Reason_ID
		{
			get
			{
				return this._Reason_ID;
			}
			set
			{
				if ((this._Reason_ID != value))
				{
					this.OnReason_IDChanging(value);
					this.SendPropertyChanging();
					this._Reason_ID = value;
					this.SendPropertyChanged("Reason_ID");
					this.OnReason_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentsCalc")]
	public partial class StudentCalc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Student_ID;
		
		private System.Nullable<decimal> _ВestClabCard_ID;
		
		private decimal _CoursesScore;
		
		private decimal _FriendsScore;
		
		private System.Nullable<decimal> _ClabCardScore;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<StudentClabCard> _StudentClabCard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnВestClabCard_IDChanging(System.Nullable<decimal> value);
    partial void OnВestClabCard_IDChanged();
    partial void OnCoursesScoreChanging(decimal value);
    partial void OnCoursesScoreChanged();
    partial void OnFriendsScoreChanging(decimal value);
    partial void OnFriendsScoreChanged();
    partial void OnClabCardScoreChanging(System.Nullable<decimal> value);
    partial void OnClabCardScoreChanged();
    #endregion
		
		public StudentCalc()
		{
			this._Student = default(EntityRef<Student>);
			this._StudentClabCard = default(EntityRef<StudentClabCard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВestClabCard_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ВestClabCard_ID
		{
			get
			{
				return this._ВestClabCard_ID;
			}
			set
			{
				if ((this._ВestClabCard_ID != value))
				{
					if (this._StudentClabCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВestClabCard_IDChanging(value);
					this.SendPropertyChanging();
					this._ВestClabCard_ID = value;
					this.SendPropertyChanged("ВestClabCard_ID");
					this.OnВestClabCard_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursesScore", DbType="Decimal(10,2) NOT NULL")]
		public decimal CoursesScore
		{
			get
			{
				return this._CoursesScore;
			}
			set
			{
				if ((this._CoursesScore != value))
				{
					this.OnCoursesScoreChanging(value);
					this.SendPropertyChanging();
					this._CoursesScore = value;
					this.SendPropertyChanged("CoursesScore");
					this.OnCoursesScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendsScore", DbType="Decimal(10,2) NOT NULL")]
		public decimal FriendsScore
		{
			get
			{
				return this._FriendsScore;
			}
			set
			{
				if ((this._FriendsScore != value))
				{
					this.OnFriendsScoreChanging(value);
					this.SendPropertyChanging();
					this._FriendsScore = value;
					this.SendPropertyChanged("FriendsScore");
					this.OnFriendsScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClabCardScore", AutoSync=AutoSync.Always, DbType="Decimal(11,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ClabCardScore
		{
			get
			{
				return this._ClabCardScore;
			}
			set
			{
				if ((this._ClabCardScore != value))
				{
					this.OnClabCardScoreChanging(value);
					this.SendPropertyChanging();
					this._ClabCardScore = value;
					this.SendPropertyChanged("ClabCardScore");
					this.OnClabCardScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentCalc", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentCalc = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentCalc = this;
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentClabCard_StudentCalc", Storage="_StudentClabCard", ThisKey="ВestClabCard_ID", OtherKey="StudentClabCard_ID", IsForeignKey=true)]
		public StudentClabCard StudentClabCard
		{
			get
			{
				return this._StudentClabCard.Entity;
			}
			set
			{
				StudentClabCard previousValue = this._StudentClabCard.Entity;
				if (((previousValue != value) 
							|| (this._StudentClabCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentClabCard.Entity = null;
						previousValue.StudentCalc = null;
					}
					this._StudentClabCard.Entity = value;
					if ((value != null))
					{
						value.StudentCalc = this;
						this._ВestClabCard_ID = value.StudentClabCard_ID;
					}
					else
					{
						this._ВestClabCard_ID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("StudentClabCard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentClabCards")]
	public partial class StudentClabCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentClabCard_ID;
		
		private decimal _Student_ID;
		
		private string _ClabCardColor_TC;
		
		private int _ClabCardNumber;
		
		private string _FullNumber;
		
		private System.DateTime _IssuedDate;
		
		private string _Note;
		
		private EntityRef<StudentCalc> _StudentCalc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentClabCard_IDChanging(decimal value);
    partial void OnStudentClabCard_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnClabCardColor_TCChanging(string value);
    partial void OnClabCardColor_TCChanged();
    partial void OnClabCardNumberChanging(int value);
    partial void OnClabCardNumberChanged();
    partial void OnFullNumberChanging(string value);
    partial void OnFullNumberChanged();
    partial void OnIssuedDateChanging(System.DateTime value);
    partial void OnIssuedDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public StudentClabCard()
		{
			this._StudentCalc = default(EntityRef<StudentCalc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentClabCard_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal StudentClabCard_ID
		{
			get
			{
				return this._StudentClabCard_ID;
			}
			set
			{
				if ((this._StudentClabCard_ID != value))
				{
					this.OnStudentClabCard_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentClabCard_ID = value;
					this.SendPropertyChanged("StudentClabCard_ID");
					this.OnStudentClabCard_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClabCardColor_TC", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string ClabCardColor_TC
		{
			get
			{
				return this._ClabCardColor_TC;
			}
			set
			{
				if ((this._ClabCardColor_TC != value))
				{
					this.OnClabCardColor_TCChanging(value);
					this.SendPropertyChanging();
					this._ClabCardColor_TC = value;
					this.SendPropertyChanged("ClabCardColor_TC");
					this.OnClabCardColor_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClabCardNumber", DbType="Int NOT NULL")]
		public int ClabCardNumber
		{
			get
			{
				return this._ClabCardNumber;
			}
			set
			{
				if ((this._ClabCardNumber != value))
				{
					this.OnClabCardNumberChanging(value);
					this.SendPropertyChanging();
					this._ClabCardNumber = value;
					this.SendPropertyChanged("ClabCardNumber");
					this.OnClabCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string FullNumber
		{
			get
			{
				return this._FullNumber;
			}
			set
			{
				if ((this._FullNumber != value))
				{
					this.OnFullNumberChanging(value);
					this.SendPropertyChanging();
					this._FullNumber = value;
					this.SendPropertyChanged("FullNumber");
					this.OnFullNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime IssuedDate
		{
			get
			{
				return this._IssuedDate;
			}
			set
			{
				if ((this._IssuedDate != value))
				{
					this.OnIssuedDateChanging(value);
					this.SendPropertyChanging();
					this._IssuedDate = value;
					this.SendPropertyChanged("IssuedDate");
					this.OnIssuedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentClabCard_StudentCalc", Storage="_StudentCalc", ThisKey="StudentClabCard_ID", OtherKey="ВestClabCard_ID", IsUnique=true, IsForeignKey=false)]
		public StudentCalc StudentCalc
		{
			get
			{
				return this._StudentCalc.Entity;
			}
			set
			{
				StudentCalc previousValue = this._StudentCalc.Entity;
				if (((previousValue != value) 
							|| (this._StudentCalc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentCalc.Entity = null;
						previousValue.StudentClabCard = null;
					}
					this._StudentCalc.Entity = value;
					if ((value != null))
					{
						value.StudentClabCard = this;
					}
					this.SendPropertyChanged("StudentCalc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tClabCardColors")]
	public partial class ClabCardColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClabCardColor_TC;
		
		private string _ColorName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClabCardColor_TCChanging(string value);
    partial void OnClabCardColor_TCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ClabCardColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClabCardColor_TC", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClabCardColor_TC
		{
			get
			{
				return this._ClabCardColor_TC;
			}
			set
			{
				if ((this._ClabCardColor_TC != value))
				{
					this.OnClabCardColor_TCChanging(value);
					this.SendPropertyChanging();
					this._ClabCardColor_TC = value;
					this.SendPropertyChanged("ClabCardColor_TC");
					this.OnClabCardColor_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ColorName", Storage="_ColorName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOrgs")]
	public partial class SpecOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Org_ID;
		
		private string _FullName;
		
		private string _Manager_TC;
		
		private string _ContractNumber;
		
		private System.Nullable<System.DateTime> _ContractDate;
		
		private System.Nullable<decimal> _Field_ID;
		
		private decimal _Owner_ID;
		
		private string _PartnerType_TC;
		
		private string _WebKeyword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrg_IDChanging(decimal value);
    partial void OnOrg_IDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnManager_TCChanging(string value);
    partial void OnManager_TCChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnContractDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractDateChanged();
    partial void OnField_IDChanging(System.Nullable<decimal> value);
    partial void OnField_IDChanged();
    partial void OnOwner_IDChanging(decimal value);
    partial void OnOwner_IDChanged();
    partial void OnPartnerType_TCChanging(string value);
    partial void OnPartnerType_TCChanged();
    partial void OnWebKeywordChanging(string value);
    partial void OnWebKeywordChanged();
    #endregion
		
		public SpecOrg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Org_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Org_ID
		{
			get
			{
				return this._Org_ID;
			}
			set
			{
				if ((this._Org_ID != value))
				{
					this.OnOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._Org_ID = value;
					this.SendPropertyChanged("Org_ID");
					this.OnOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_TC", DbType="VarChar(7)")]
		public string Manager_TC
		{
			get
			{
				return this._Manager_TC;
			}
			set
			{
				if ((this._Manager_TC != value))
				{
					this.OnManager_TCChanging(value);
					this.SendPropertyChanging();
					this._Manager_TC = value;
					this.SendPropertyChanged("Manager_TC");
					this.OnManager_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="VarChar(50)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Field_ID
		{
			get
			{
				return this._Field_ID;
			}
			set
			{
				if ((this._Field_ID != value))
				{
					this.OnField_IDChanging(value);
					this.SendPropertyChanging();
					this._Field_ID = value;
					this.SendPropertyChanged("Field_ID");
					this.OnField_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerType_TC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PartnerType_TC
		{
			get
			{
				return this._PartnerType_TC;
			}
			set
			{
				if ((this._PartnerType_TC != value))
				{
					this.OnPartnerType_TCChanging(value);
					this.SendPropertyChanging();
					this._PartnerType_TC = value;
					this.SendPropertyChanged("PartnerType_TC");
					this.OnPartnerType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebKeyword", CanBeNull=false)]
		public string WebKeyword
		{
			get
			{
				return this._WebKeyword;
			}
			set
			{
				if ((this._WebKeyword != value))
				{
					this.OnWebKeywordChanging(value);
					this.SendPropertyChanging();
					this._WebKeyword = value;
					this.SendPropertyChanged("WebKeyword");
					this.OnWebKeywordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTerrains")]
	public partial class Terrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Terrain_ID;
		
		private decimal _Country_ID;
		
		private System.Nullable<decimal> _Region_ID;
		
		private string _TerrainName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerrain_IDChanging(decimal value);
    partial void OnTerrain_IDChanged();
    partial void OnCountry_IDChanging(decimal value);
    partial void OnCountry_IDChanged();
    partial void OnRegion_IDChanging(System.Nullable<decimal> value);
    partial void OnRegion_IDChanged();
    partial void OnTerrainNameChanging(string value);
    partial void OnTerrainNameChanged();
    #endregion
		
		public Terrain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terrain_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Terrain_ID
		{
			get
			{
				return this._Terrain_ID;
			}
			set
			{
				if ((this._Terrain_ID != value))
				{
					this.OnTerrain_IDChanging(value);
					this.SendPropertyChanging();
					this._Terrain_ID = value;
					this.SendPropertyChanged("Terrain_ID");
					this.OnTerrain_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Country_ID
		{
			get
			{
				return this._Country_ID;
			}
			set
			{
				if ((this._Country_ID != value))
				{
					this.OnCountry_IDChanging(value);
					this.SendPropertyChanging();
					this._Country_ID = value;
					this.SendPropertyChanged("Country_ID");
					this.OnCountry_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Region_ID
		{
			get
			{
				return this._Region_ID;
			}
			set
			{
				if ((this._Region_ID != value))
				{
					this.OnRegion_IDChanging(value);
					this.SendPropertyChanging();
					this._Region_ID = value;
					this.SendPropertyChanged("Region_ID");
					this.OnRegion_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerrainName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TerrainName
		{
			get
			{
				return this._TerrainName;
			}
			set
			{
				if ((this._TerrainName != value))
				{
					this.OnTerrainNameChanging(value);
					this.SendPropertyChanging();
					this._TerrainName = value;
					this.SendPropertyChanged("TerrainName");
					this.OnTerrainNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSIGEvents")]
	public partial class SigEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _SIGEvent_ID;
		
		private decimal _StudentInGroup_ID;
		
		private decimal _Event_ID;
		
		private System.DateTime _EventDate;
		
		private string _PostalTrackingNumber;
		
		private string _EventNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIGEvent_IDChanging(decimal value);
    partial void OnSIGEvent_IDChanged();
    partial void OnStudentInGroup_IDChanging(decimal value);
    partial void OnStudentInGroup_IDChanged();
    partial void OnEvent_IDChanging(decimal value);
    partial void OnEvent_IDChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnPostalTrackingNumberChanging(string value);
    partial void OnPostalTrackingNumberChanged();
    partial void OnEventNotesChanging(string value);
    partial void OnEventNotesChanged();
    #endregion
		
		public SigEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIGEvent_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal SIGEvent_ID
		{
			get
			{
				return this._SIGEvent_ID;
			}
			set
			{
				if ((this._SIGEvent_ID != value))
				{
					this.OnSIGEvent_IDChanging(value);
					this.SendPropertyChanging();
					this._SIGEvent_ID = value;
					this.SendPropertyChanged("SIGEvent_ID");
					this.OnSIGEvent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentInGroup_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal StudentInGroup_ID
		{
			get
			{
				return this._StudentInGroup_ID;
			}
			set
			{
				if ((this._StudentInGroup_ID != value))
				{
					this.OnStudentInGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentInGroup_ID = value;
					this.SendPropertyChanged("StudentInGroup_ID");
					this.OnStudentInGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					this.OnEvent_IDChanging(value);
					this.SendPropertyChanging();
					this._Event_ID = value;
					this.SendPropertyChanged("Event_ID");
					this.OnEvent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalTrackingNumber", DbType="VarChar(20)")]
		public string PostalTrackingNumber
		{
			get
			{
				return this._PostalTrackingNumber;
			}
			set
			{
				if ((this._PostalTrackingNumber != value))
				{
					this.OnPostalTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._PostalTrackingNumber = value;
					this.SendPropertyChanged("PostalTrackingNumber");
					this.OnPostalTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventNotes", DbType="VarChar(500)")]
		public string EventNotes
		{
			get
			{
				return this._EventNotes;
			}
			set
			{
				if ((this._EventNotes != value))
				{
					this.OnEventNotesChanging(value);
					this.SendPropertyChanging();
					this._EventNotes = value;
					this.SendPropertyChanged("EventNotes");
					this.OnEventNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOurOrgs")]
	public partial class OurOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _OurOrg_ID;
		
		private string _OurOrg_TC;
		
		private string _ShortName;
		
		private string _FullName;
		
		private string _FullNameCase6;
		
		private string _INN;
		
		private string _KPP;
		
		private string _LegalAddress;
		
		private string _PhysicalAddress;
		
		private string _PhoneNumber;
		
		private string _OKVED;
		
		private string _OKPO;
		
		private string _LicenceNumber;
		
		private string _VeryLongName;
		
		private string _Boss_TC;
		
		private string _ChiefAccountant_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOurOrg_IDChanging(decimal value);
    partial void OnOurOrg_IDChanged();
    partial void OnOurOrg_TCChanging(string value);
    partial void OnOurOrg_TCChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnFullNameCase6Changing(string value);
    partial void OnFullNameCase6Changed();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnLegalAddressChanging(string value);
    partial void OnLegalAddressChanged();
    partial void OnPhysicalAddressChanging(string value);
    partial void OnPhysicalAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnOKVEDChanging(string value);
    partial void OnOKVEDChanged();
    partial void OnOKPOChanging(string value);
    partial void OnOKPOChanged();
    partial void OnLicenceNumberChanging(string value);
    partial void OnLicenceNumberChanged();
    partial void OnVeryLongNameChanging(string value);
    partial void OnVeryLongNameChanged();
    partial void OnBoss_TCChanging(string value);
    partial void OnBoss_TCChanged();
    partial void OnChiefAccountant_TCChanging(string value);
    partial void OnChiefAccountant_TCChanged();
    #endregion
		
		public OurOrg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_ID", AutoSync=AutoSync.Always, DbType="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated=true)]
		public decimal OurOrg_ID
		{
			get
			{
				return this._OurOrg_ID;
			}
			set
			{
				if ((this._OurOrg_ID != value))
				{
					this.OnOurOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_ID = value;
					this.SendPropertyChanged("OurOrg_ID");
					this.OnOurOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurOrg_TC", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OurOrg_TC
		{
			get
			{
				return this._OurOrg_TC;
			}
			set
			{
				if ((this._OurOrg_TC != value))
				{
					this.OnOurOrg_TCChanging(value);
					this.SendPropertyChanging();
					this._OurOrg_TC = value;
					this.SendPropertyChanged("OurOrg_TC");
					this.OnOurOrg_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameCase6", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FullNameCase6
		{
			get
			{
				return this._FullNameCase6;
			}
			set
			{
				if ((this._FullNameCase6 != value))
				{
					this.OnFullNameCase6Changing(value);
					this.SendPropertyChanging();
					this._FullNameCase6 = value;
					this.SendPropertyChanged("FullNameCase6");
					this.OnFullNameCase6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string LegalAddress
		{
			get
			{
				return this._LegalAddress;
			}
			set
			{
				if ((this._LegalAddress != value))
				{
					this.OnLegalAddressChanging(value);
					this.SendPropertyChanging();
					this._LegalAddress = value;
					this.SendPropertyChanged("LegalAddress");
					this.OnLegalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PhysicalAddress
		{
			get
			{
				return this._PhysicalAddress;
			}
			set
			{
				if ((this._PhysicalAddress != value))
				{
					this.OnPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._PhysicalAddress = value;
					this.SendPropertyChanged("PhysicalAddress");
					this.OnPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(250)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKVED", DbType="VarChar(50)")]
		public string OKVED
		{
			get
			{
				return this._OKVED;
			}
			set
			{
				if ((this._OKVED != value))
				{
					this.OnOKVEDChanging(value);
					this.SendPropertyChanging();
					this._OKVED = value;
					this.SendPropertyChanged("OKVED");
					this.OnOKVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKPO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OKPO
		{
			get
			{
				return this._OKPO;
			}
			set
			{
				if ((this._OKPO != value))
				{
					this.OnOKPOChanging(value);
					this.SendPropertyChanging();
					this._OKPO = value;
					this.SendPropertyChanged("OKPO");
					this.OnOKPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenceNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LicenceNumber
		{
			get
			{
				return this._LicenceNumber;
			}
			set
			{
				if ((this._LicenceNumber != value))
				{
					this.OnLicenceNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenceNumber = value;
					this.SendPropertyChanged("LicenceNumber");
					this.OnLicenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeryLongName", DbType="VarChar(1000)")]
		public string VeryLongName
		{
			get
			{
				return this._VeryLongName;
			}
			set
			{
				if ((this._VeryLongName != value))
				{
					this.OnVeryLongNameChanging(value);
					this.SendPropertyChanging();
					this._VeryLongName = value;
					this.SendPropertyChanged("VeryLongName");
					this.OnVeryLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Boss_TC")]
		public string Boss_TC
		{
			get
			{
				return this._Boss_TC;
			}
			set
			{
				if ((this._Boss_TC != value))
				{
					this.OnBoss_TCChanging(value);
					this.SendPropertyChanging();
					this._Boss_TC = value;
					this.SendPropertyChanged("Boss_TC");
					this.OnBoss_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefAccountant_TC", CanBeNull=false)]
		public string ChiefAccountant_TC
		{
			get
			{
				return this._ChiefAccountant_TC;
			}
			set
			{
				if ((this._ChiefAccountant_TC != value))
				{
					this.OnChiefAccountant_TCChanging(value);
					this.SendPropertyChanging();
					this._ChiefAccountant_TC = value;
					this.SendPropertyChanged("ChiefAccountant_TC");
					this.OnChiefAccountant_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tExtrasCourses")]
	public partial class ExtrasCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ExtrasCourses_ID;
		
		private decimal _Extras_ID;
		
		private string _Course_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtrasCourses_IDChanging(decimal value);
    partial void OnExtrasCourses_IDChanged();
    partial void OnExtras_IDChanging(decimal value);
    partial void OnExtras_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    #endregion
		
		public ExtrasCourse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtrasCourses_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ExtrasCourses_ID
		{
			get
			{
				return this._ExtrasCourses_ID;
			}
			set
			{
				if ((this._ExtrasCourses_ID != value))
				{
					this.OnExtrasCourses_IDChanging(value);
					this.SendPropertyChanging();
					this._ExtrasCourses_ID = value;
					this.SendPropertyChanged("ExtrasCourses_ID");
					this.OnExtrasCourses_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extras_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Extras_ID
		{
			get
			{
				return this._Extras_ID;
			}
			set
			{
				if ((this._Extras_ID != value))
				{
					this.OnExtras_IDChanging(value);
					this.SendPropertyChanging();
					this._Extras_ID = value;
					this.SendPropertyChanged("Extras_ID");
					this.OnExtras_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseGiveOutItems")]
	public partial class CourseGiveOutItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseGiveOutItem_ID;
		
		private string _ItemDescription;
		
		private bool _IsVisibleOnWeb;
		
		private string _ItemType_TC;
		
		private string _ItemNotes;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private string _Nomenclature;
		
		private string _Note;
		
		private decimal _Quantity;
		
		private EntitySet<CoursesCourseGiveOutItem> _CoursesCourseGiveOutItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseGiveOutItem_IDChanging(decimal value);
    partial void OnCourseGiveOutItem_IDChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnIsVisibleOnWebChanging(bool value);
    partial void OnIsVisibleOnWebChanged();
    partial void OnItemType_TCChanging(string value);
    partial void OnItemType_TCChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnNomenclatureChanging(string value);
    partial void OnNomenclatureChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public CourseGiveOutItem()
		{
			this._CoursesCourseGiveOutItems = new EntitySet<CoursesCourseGiveOutItem>(new Action<CoursesCourseGiveOutItem>(this.attach_CoursesCourseGiveOutItems), new Action<CoursesCourseGiveOutItem>(this.detach_CoursesCourseGiveOutItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseGiveOutItem_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CourseGiveOutItem_ID
		{
			get
			{
				return this._CourseGiveOutItem_ID;
			}
			set
			{
				if ((this._CourseGiveOutItem_ID != value))
				{
					this.OnCourseGiveOutItem_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseGiveOutItem_ID = value;
					this.SendPropertyChanged("CourseGiveOutItem_ID");
					this.OnCourseGiveOutItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisibleOnWeb", DbType="Bit NOT NULL")]
		public bool IsVisibleOnWeb
		{
			get
			{
				return this._IsVisibleOnWeb;
			}
			set
			{
				if ((this._IsVisibleOnWeb != value))
				{
					this.OnIsVisibleOnWebChanging(value);
					this.SendPropertyChanging();
					this._IsVisibleOnWeb = value;
					this.SendPropertyChanged("IsVisibleOnWeb");
					this.OnIsVisibleOnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType_TC", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string ItemType_TC
		{
			get
			{
				return this._ItemType_TC;
			}
			set
			{
				if ((this._ItemType_TC != value))
				{
					this.OnItemType_TCChanging(value);
					this.SendPropertyChanging();
					this._ItemType_TC = value;
					this.SendPropertyChanged("ItemType_TC");
					this.OnItemType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="VarChar(5000)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomenclature", DbType="VarChar(MAX)")]
		public string Nomenclature
		{
			get
			{
				return this._Nomenclature;
			}
			set
			{
				if ((this._Nomenclature != value))
				{
					this.OnNomenclatureChanging(value);
					this.SendPropertyChanging();
					this._Nomenclature = value;
					this.SendPropertyChanged("Nomenclature");
					this.OnNomenclatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseGiveOutItem_CoursesCourseGiveOutItem", Storage="_CoursesCourseGiveOutItems", ThisKey="CourseGiveOutItem_ID", OtherKey="CourseGiveOutItem_ID")]
		public EntitySet<CoursesCourseGiveOutItem> CoursesCourseGiveOutItems
		{
			get
			{
				return this._CoursesCourseGiveOutItems;
			}
			set
			{
				this._CoursesCourseGiveOutItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoursesCourseGiveOutItems(CoursesCourseGiveOutItem entity)
		{
			this.SendPropertyChanging();
			entity.CourseGiveOutItem = this;
		}
		
		private void detach_CoursesCourseGiveOutItems(CoursesCourseGiveOutItem entity)
		{
			this.SendPropertyChanging();
			entity.CourseGiveOutItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCoursesCourseGiveOutItems")]
	public partial class CoursesCourseGiveOutItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CoursesCourseGiveOutItems_ID;
		
		private string _Course_TC;
		
		private decimal _CourseGiveOutItem_ID;
		
		private int _SortOrder;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private bool _IsNotDigital;
		
		private EntityRef<CourseGiveOutItem> _CourseGiveOutItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoursesCourseGiveOutItems_IDChanging(decimal value);
    partial void OnCoursesCourseGiveOutItems_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnCourseGiveOutItem_IDChanging(decimal value);
    partial void OnCourseGiveOutItem_IDChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnIsNotDigitalChanging(bool value);
    partial void OnIsNotDigitalChanged();
    #endregion
		
		public CoursesCourseGiveOutItem()
		{
			this._CourseGiveOutItem = default(EntityRef<CourseGiveOutItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursesCourseGiveOutItems_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CoursesCourseGiveOutItems_ID
		{
			get
			{
				return this._CoursesCourseGiveOutItems_ID;
			}
			set
			{
				if ((this._CoursesCourseGiveOutItems_ID != value))
				{
					this.OnCoursesCourseGiveOutItems_IDChanging(value);
					this.SendPropertyChanging();
					this._CoursesCourseGiveOutItems_ID = value;
					this.SendPropertyChanged("CoursesCourseGiveOutItems_ID");
					this.OnCoursesCourseGiveOutItems_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseGiveOutItem_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal CourseGiveOutItem_ID
		{
			get
			{
				return this._CourseGiveOutItem_ID;
			}
			set
			{
				if ((this._CourseGiveOutItem_ID != value))
				{
					if (this._CourseGiveOutItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseGiveOutItem_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseGiveOutItem_ID = value;
					this.SendPropertyChanged("CourseGiveOutItem_ID");
					this.OnCourseGiveOutItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotDigital", DbType="Bit NOT NULL")]
		public bool IsNotDigital
		{
			get
			{
				return this._IsNotDigital;
			}
			set
			{
				if ((this._IsNotDigital != value))
				{
					this.OnIsNotDigitalChanging(value);
					this.SendPropertyChanging();
					this._IsNotDigital = value;
					this.SendPropertyChanged("IsNotDigital");
					this.OnIsNotDigitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseGiveOutItem_CoursesCourseGiveOutItem", Storage="_CourseGiveOutItem", ThisKey="CourseGiveOutItem_ID", OtherKey="CourseGiveOutItem_ID", IsForeignKey=true)]
		public CourseGiveOutItem CourseGiveOutItem
		{
			get
			{
				return this._CourseGiveOutItem.Entity;
			}
			set
			{
				CourseGiveOutItem previousValue = this._CourseGiveOutItem.Entity;
				if (((previousValue != value) 
							|| (this._CourseGiveOutItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseGiveOutItem.Entity = null;
						previousValue.CoursesCourseGiveOutItems.Remove(this);
					}
					this._CourseGiveOutItem.Entity = value;
					if ((value != null))
					{
						value.CoursesCourseGiveOutItems.Add(this);
						this._CourseGiveOutItem_ID = value.CourseGiveOutItem_ID;
					}
					else
					{
						this._CourseGiveOutItem_ID = default(decimal);
					}
					this.SendPropertyChanged("CourseGiveOutItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tWebinarLicenses")]
	public partial class WebinarLicense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _WebinarLicense_ID;
		
		private string _LicenseLogin;
		
		private string _LicensePassword;
		
		private EntitySet<Lecture> _Lectures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebinarLicense_IDChanging(decimal value);
    partial void OnWebinarLicense_IDChanged();
    partial void OnLicenseLoginChanging(string value);
    partial void OnLicenseLoginChanged();
    partial void OnLicensePasswordChanging(string value);
    partial void OnLicensePasswordChanged();
    #endregion
		
		public WebinarLicense()
		{
			this._Lectures = new EntitySet<Lecture>(new Action<Lecture>(this.attach_Lectures), new Action<Lecture>(this.detach_Lectures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebinarLicense_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal WebinarLicense_ID
		{
			get
			{
				return this._WebinarLicense_ID;
			}
			set
			{
				if ((this._WebinarLicense_ID != value))
				{
					this.OnWebinarLicense_IDChanging(value);
					this.SendPropertyChanging();
					this._WebinarLicense_ID = value;
					this.SendPropertyChanged("WebinarLicense_ID");
					this.OnWebinarLicense_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseLogin", DbType="VarChar(250)")]
		public string LicenseLogin
		{
			get
			{
				return this._LicenseLogin;
			}
			set
			{
				if ((this._LicenseLogin != value))
				{
					this.OnLicenseLoginChanging(value);
					this.SendPropertyChanging();
					this._LicenseLogin = value;
					this.SendPropertyChanged("LicenseLogin");
					this.OnLicenseLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePassword", DbType="VarChar(250)")]
		public string LicensePassword
		{
			get
			{
				return this._LicensePassword;
			}
			set
			{
				if ((this._LicensePassword != value))
				{
					this.OnLicensePasswordChanging(value);
					this.SendPropertyChanging();
					this._LicensePassword = value;
					this.SendPropertyChanged("LicensePassword");
					this.OnLicensePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebinarLicense_Lecture", Storage="_Lectures", ThisKey="WebinarLicense_ID", OtherKey="WebinarLicense_ID")]
		public EntitySet<Lecture> Lectures
		{
			get
			{
				return this._Lectures;
			}
			set
			{
				this._Lectures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.WebinarLicense = this;
		}
		
		private void detach_Lectures(Lecture entity)
		{
			this.SendPropertyChanging();
			entity.WebinarLicense = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeesAbsences")]
	public partial class EmployeesAbsence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _EmployeeAbsence_ID;
		
		private string _Employee_TC;
		
		private System.DateTime _DateFrom;
		
		private System.DateTime _DateTo;
		
		private bool _IsRestriction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeAbsence_IDChanging(decimal value);
    partial void OnEmployeeAbsence_IDChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.DateTime value);
    partial void OnDateToChanged();
    partial void OnIsRestrictionChanging(bool value);
    partial void OnIsRestrictionChanged();
    #endregion
		
		public EmployeesAbsence()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAbsence_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal EmployeeAbsence_ID
		{
			get
			{
				return this._EmployeeAbsence_ID;
			}
			set
			{
				if ((this._EmployeeAbsence_ID != value))
				{
					this.OnEmployeeAbsence_IDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAbsence_ID = value;
					this.SendPropertyChanged("EmployeeAbsence_ID");
					this.OnEmployeeAbsence_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestriction")]
		public bool IsRestriction
		{
			get
			{
				return this._IsRestriction;
			}
			set
			{
				if ((this._IsRestriction != value))
				{
					this.OnIsRestrictionChanging(value);
					this.SendPropertyChanging();
					this._IsRestriction = value;
					this.SendPropertyChanged("IsRestriction");
					this.OnIsRestrictionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeesCurators")]
	public partial class EmployeesCurator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _EmployeeСurator_ID;
		
		private string _Emp_TC;
		
		private string _Сurator_TC;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private string _Notes;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeСurator_IDChanging(decimal value);
    partial void OnEmployeeСurator_IDChanged();
    partial void OnEmp_TCChanging(string value);
    partial void OnEmp_TCChanged();
    partial void OnСurator_TCChanging(string value);
    partial void OnСurator_TCChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public EmployeesCurator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeСurator_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal EmployeeСurator_ID
		{
			get
			{
				return this._EmployeeСurator_ID;
			}
			set
			{
				if ((this._EmployeeСurator_ID != value))
				{
					this.OnEmployeeСurator_IDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeСurator_ID = value;
					this.SendPropertyChanged("EmployeeСurator_ID");
					this.OnEmployeeСurator_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Emp_TC
		{
			get
			{
				return this._Emp_TC;
			}
			set
			{
				if ((this._Emp_TC != value))
				{
					this.OnEmp_TCChanging(value);
					this.SendPropertyChanging();
					this._Emp_TC = value;
					this.SendPropertyChanged("Emp_TC");
					this.OnEmp_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сurator_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Сurator_TC
		{
			get
			{
				return this._Сurator_TC;
			}
			set
			{
				if ((this._Сurator_TC != value))
				{
					this.OnСurator_TCChanging(value);
					this.SendPropertyChanging();
					this._Сurator_TC = value;
					this.SendPropertyChanged("Сurator_TC");
					this.OnСurator_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tWorkBranches")]
	public partial class WorkBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Branch_ID;
		
		private string _BranchName;
		
		private System.Nullable<int> _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranch_IDChanging(decimal value);
    partial void OnBranch_IDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public WorkBranch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this.OnBranch_IDChanging(value);
					this.SendPropertyChanging();
					this._Branch_ID = value;
					this.SendPropertyChanged("Branch_ID");
					this.OnBranch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="VarChar(3000) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMetiers")]
	public partial class Metier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Metier_ID;
		
		private decimal _Branch_ID;
		
		private string _MetierName;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMetier_IDChanging(decimal value);
    partial void OnMetier_IDChanged();
    partial void OnBranch_IDChanging(decimal value);
    partial void OnBranch_IDChanged();
    partial void OnMetierNameChanging(string value);
    partial void OnMetierNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Metier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metier_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal Metier_ID
		{
			get
			{
				return this._Metier_ID;
			}
			set
			{
				if ((this._Metier_ID != value))
				{
					this.OnMetier_IDChanging(value);
					this.SendPropertyChanging();
					this._Metier_ID = value;
					this.SendPropertyChanged("Metier_ID");
					this.OnMetier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID", DbType="Decimal(18,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this.OnBranch_IDChanging(value);
					this.SendPropertyChanging();
					this._Branch_ID = value;
					this.SendPropertyChanged("Branch_ID");
					this.OnBranch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetierName", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MetierName
		{
			get
			{
				return this._MetierName;
			}
			set
			{
				if ((this._MetierName != value))
				{
					this.OnMetierNameChanging(value);
					this.SendPropertyChanging();
					this._MetierName = value;
					this.SendPropertyChanged("MetierName");
					this.OnMetierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseFiles")]
	public partial class SpecCourseFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CourseFile_ID;
		
		private string _Course_TC;
		
		private string _FileName;
		
		private string _FileURL;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseFile_IDChanging(decimal value);
    partial void OnCourseFile_IDChanged();
    partial void OnCourse_TCChanging(string value);
    partial void OnCourse_TCChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileURLChanging(string value);
    partial void OnFileURLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SpecCourseFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFile_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CourseFile_ID
		{
			get
			{
				return this._CourseFile_ID;
			}
			set
			{
				if ((this._CourseFile_ID != value))
				{
					this.OnCourseFile_IDChanging(value);
					this.SendPropertyChanging();
					this._CourseFile_ID = value;
					this.SendPropertyChanged("CourseFile_ID");
					this.OnCourseFile_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Course_TC
		{
			get
			{
				return this._Course_TC;
			}
			set
			{
				if ((this._Course_TC != value))
				{
					this.OnCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._Course_TC = value;
					this.SendPropertyChanged("Course_TC");
					this.OnCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileURL", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FileURL
		{
			get
			{
				return this._FileURL;
			}
			set
			{
				if ((this._FileURL != value))
				{
					this.OnFileURLChanging(value);
					this.SendPropertyChanging();
					this._FileURL = value;
					this.SendPropertyChanged("FileURL");
					this.OnFileURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tQuestionnaireClassRoomsMarks")]
	public partial class QuestionnaireClassRoomsMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _QuestionnaireClassRoomMark_ID;
		
		private decimal _Questionnaire_ID;
		
		private string _ClassRoom_TC;
		
		private System.Nullable<char> _ClassRoomLetter;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _InputDate;
		
		private string _Employee_TC;
		
		private EntityRef<Questionnaire> _Questionnaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionnaireClassRoomMark_IDChanging(decimal value);
    partial void OnQuestionnaireClassRoomMark_IDChanged();
    partial void OnQuestionnaire_IDChanging(decimal value);
    partial void OnQuestionnaire_IDChanged();
    partial void OnClassRoom_TCChanging(string value);
    partial void OnClassRoom_TCChanged();
    partial void OnClassRoomLetterChanging(System.Nullable<char> value);
    partial void OnClassRoomLetterChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    #endregion
		
		public QuestionnaireClassRoomsMark()
		{
			this._Questionnaire = default(EntityRef<Questionnaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnaireClassRoomMark_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal QuestionnaireClassRoomMark_ID
		{
			get
			{
				return this._QuestionnaireClassRoomMark_ID;
			}
			set
			{
				if ((this._QuestionnaireClassRoomMark_ID != value))
				{
					this.OnQuestionnaireClassRoomMark_IDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnaireClassRoomMark_ID = value;
					this.SendPropertyChanged("QuestionnaireClassRoomMark_ID");
					this.OnQuestionnaireClassRoomMark_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionnaire_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Questionnaire_ID
		{
			get
			{
				return this._Questionnaire_ID;
			}
			set
			{
				if ((this._Questionnaire_ID != value))
				{
					if (this._Questionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaire_IDChanging(value);
					this.SendPropertyChanging();
					this._Questionnaire_ID = value;
					this.SendPropertyChanged("Questionnaire_ID");
					this.OnQuestionnaire_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_TC", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ClassRoom_TC
		{
			get
			{
				return this._ClassRoom_TC;
			}
			set
			{
				if ((this._ClassRoom_TC != value))
				{
					this.OnClassRoom_TCChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_TC = value;
					this.SendPropertyChanged("ClassRoom_TC");
					this.OnClassRoom_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoomLetter", DbType="Char(1)")]
		public System.Nullable<char> ClassRoomLetter
		{
			get
			{
				return this._ClassRoomLetter;
			}
			set
			{
				if ((this._ClassRoomLetter != value))
				{
					this.OnClassRoomLetterChanging(value);
					this.SendPropertyChanging();
					this._ClassRoomLetter = value;
					this.SendPropertyChanged("ClassRoomLetter");
					this.OnClassRoomLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(8000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7)")]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QuestionnaireClassRoomsMark", Storage="_Questionnaire", ThisKey="Questionnaire_ID", OtherKey="Questionnaire_ID", IsForeignKey=true)]
		public Questionnaire Questionnaire
		{
			get
			{
				return this._Questionnaire.Entity;
			}
			set
			{
				Questionnaire previousValue = this._Questionnaire.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire.Entity = null;
						previousValue.QuestionnaireClassRoomsMarks.Remove(this);
					}
					this._Questionnaire.Entity = value;
					if ((value != null))
					{
						value.QuestionnaireClassRoomsMarks.Add(this);
						this._Questionnaire_ID = value.Questionnaire_ID;
					}
					else
					{
						this._Questionnaire_ID = default(decimal);
					}
					this.SendPropertyChanged("Questionnaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOrgs")]
	public partial class Org : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Org_ID;
		
		private string _FullName;
		
		private EntitySet<StudentInGroup> _StudentInGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrg_IDChanging(decimal value);
    partial void OnOrg_IDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public Org()
		{
			this._StudentInGroups = new EntitySet<StudentInGroup>(new Action<StudentInGroup>(this.attach_StudentInGroups), new Action<StudentInGroup>(this.detach_StudentInGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Org_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Org_ID
		{
			get
			{
				return this._Org_ID;
			}
			set
			{
				if ((this._Org_ID != value))
				{
					this.OnOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._Org_ID = value;
					this.SendPropertyChanged("Org_ID");
					this.OnOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Org_StudentInGroup", Storage="_StudentInGroups", ThisKey="Org_ID", OtherKey="Org_ID")]
		public EntitySet<StudentInGroup> StudentInGroups
		{
			get
			{
				return this._StudentInGroups;
			}
			set
			{
				this._StudentInGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Org = this;
		}
		
		private void detach_StudentInGroups(StudentInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Org = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCalendar")]
	public partial class Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateValue;
		
		private char _WorkDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateValueChanging(System.DateTime value);
    partial void OnDateValueChanged();
    partial void OnWorkDayChanging(char value);
    partial void OnWorkDayChanged();
    #endregion
		
		public Calendar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateValue", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateValue
		{
			get
			{
				return this._DateValue;
			}
			set
			{
				if ((this._DateValue != value))
				{
					this.OnDateValueChanging(value);
					this.SendPropertyChanging();
					this._DateValue = value;
					this.SendPropertyChanged("DateValue");
					this.OnDateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDay", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char WorkDay
		{
			get
			{
				return this._WorkDay;
			}
			set
			{
				if ((this._WorkDay != value))
				{
					this.OnWorkDayChanging(value);
					this.SendPropertyChanging();
					this._WorkDay = value;
					this.SendPropertyChanged("WorkDay");
					this.OnWorkDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStudentRatings")]
	public partial class StudentRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _StudentRating_ID;
		
		private decimal _Student_ID;
		
		private string _CourseDirection_TC;
		
		private short _CoursesSUM;
		
		private System.DateTime _CourseDateEnd;
		
		private int _Rating;
		
		private short _TopX;
		
		private System.Nullable<decimal> _Org_ID;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentRating_IDChanging(decimal value);
    partial void OnStudentRating_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnCourseDirection_TCChanging(string value);
    partial void OnCourseDirection_TCChanged();
    partial void OnCoursesSUMChanging(short value);
    partial void OnCoursesSUMChanged();
    partial void OnCourseDateEndChanging(System.DateTime value);
    partial void OnCourseDateEndChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnTopXChanging(short value);
    partial void OnTopXChanged();
    partial void OnOrg_IDChanging(System.Nullable<decimal> value);
    partial void OnOrg_IDChanged();
    #endregion
		
		public StudentRating()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRating_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal StudentRating_ID
		{
			get
			{
				return this._StudentRating_ID;
			}
			set
			{
				if ((this._StudentRating_ID != value))
				{
					this.OnStudentRating_IDChanging(value);
					this.SendPropertyChanging();
					this._StudentRating_ID = value;
					this.SendPropertyChanged("StudentRating_ID");
					this.OnStudentRating_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirection_TC", DbType="VarChar(7)")]
		public string CourseDirection_TC
		{
			get
			{
				return this._CourseDirection_TC;
			}
			set
			{
				if ((this._CourseDirection_TC != value))
				{
					this.OnCourseDirection_TCChanging(value);
					this.SendPropertyChanging();
					this._CourseDirection_TC = value;
					this.SendPropertyChanged("CourseDirection_TC");
					this.OnCourseDirection_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursesSUM", DbType="SmallInt NOT NULL")]
		public short CoursesSUM
		{
			get
			{
				return this._CoursesSUM;
			}
			set
			{
				if ((this._CoursesSUM != value))
				{
					this.OnCoursesSUMChanging(value);
					this.SendPropertyChanging();
					this._CoursesSUM = value;
					this.SendPropertyChanged("CoursesSUM");
					this.OnCoursesSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDateEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CourseDateEnd
		{
			get
			{
				return this._CourseDateEnd;
			}
			set
			{
				if ((this._CourseDateEnd != value))
				{
					this.OnCourseDateEndChanging(value);
					this.SendPropertyChanging();
					this._CourseDateEnd = value;
					this.SendPropertyChanged("CourseDateEnd");
					this.OnCourseDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopX", DbType="SmallInt NOT NULL")]
		public short TopX
		{
			get
			{
				return this._TopX;
			}
			set
			{
				if ((this._TopX != value))
				{
					this.OnTopXChanging(value);
					this.SendPropertyChanging();
					this._TopX = value;
					this.SendPropertyChanged("TopX");
					this.OnTopXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Org_ID")]
		public System.Nullable<decimal> Org_ID
		{
			get
			{
				return this._Org_ID;
			}
			set
			{
				if ((this._Org_ID != value))
				{
					this.OnOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._Org_ID = value;
					this.SendPropertyChanged("Org_ID");
					this.OnOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRating", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentRatings.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentRatings.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPromoCodes")]
	public partial class SpecPromoCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PromoCode_ID;
		
		private string _PromoCode;
		
		private System.DateTime _ValidBeg;
		
		private System.DateTime _ValidEnd;
		
		private System.Nullable<byte> _DiscountPerc;
		
		private System.Nullable<decimal> _DiscountRub;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private bool _IsSumOtherDiscounts;
		
		private byte _MaxSizeDiscountPerc;
		
		private EntitySet<SpecPromoCodeCoursesDirection> _SpecPromoCodeCoursesDirections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCode_IDChanging(decimal value);
    partial void OnPromoCode_IDChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnValidBegChanging(System.DateTime value);
    partial void OnValidBegChanged();
    partial void OnValidEndChanging(System.DateTime value);
    partial void OnValidEndChanged();
    partial void OnDiscountPercChanging(System.Nullable<byte> value);
    partial void OnDiscountPercChanged();
    partial void OnDiscountRubChanging(System.Nullable<decimal> value);
    partial void OnDiscountRubChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    partial void OnIsSumOtherDiscountsChanging(bool value);
    partial void OnIsSumOtherDiscountsChanged();
    partial void OnMaxSizeDiscountPercChanging(byte value);
    partial void OnMaxSizeDiscountPercChanged();
    #endregion
		
		public SpecPromoCode()
		{
			this._SpecPromoCodeCoursesDirections = new EntitySet<SpecPromoCodeCoursesDirection>(new Action<SpecPromoCodeCoursesDirection>(this.attach_SpecPromoCodeCoursesDirections), new Action<SpecPromoCodeCoursesDirection>(this.detach_SpecPromoCodeCoursesDirections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal PromoCode_ID
		{
			get
			{
				return this._PromoCode_ID;
			}
			set
			{
				if ((this._PromoCode_ID != value))
				{
					this.OnPromoCode_IDChanging(value);
					this.SendPropertyChanging();
					this._PromoCode_ID = value;
					this.SendPropertyChanged("PromoCode_ID");
					this.OnPromoCode_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidBeg", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ValidBeg
		{
			get
			{
				return this._ValidBeg;
			}
			set
			{
				if ((this._ValidBeg != value))
				{
					this.OnValidBegChanging(value);
					this.SendPropertyChanging();
					this._ValidBeg = value;
					this.SendPropertyChanged("ValidBeg");
					this.OnValidBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ValidEnd
		{
			get
			{
				return this._ValidEnd;
			}
			set
			{
				if ((this._ValidEnd != value))
				{
					this.OnValidEndChanging(value);
					this.SendPropertyChanging();
					this._ValidEnd = value;
					this.SendPropertyChanged("ValidEnd");
					this.OnValidEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPerc", DbType="TinyInt")]
		public System.Nullable<byte> DiscountPerc
		{
			get
			{
				return this._DiscountPerc;
			}
			set
			{
				if ((this._DiscountPerc != value))
				{
					this.OnDiscountPercChanging(value);
					this.SendPropertyChanging();
					this._DiscountPerc = value;
					this.SendPropertyChanged("DiscountPerc");
					this.OnDiscountPercChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRub", DbType="Money")]
		public System.Nullable<decimal> DiscountRub
		{
			get
			{
				return this._DiscountRub;
			}
			set
			{
				if ((this._DiscountRub != value))
				{
					this.OnDiscountRubChanging(value);
					this.SendPropertyChanging();
					this._DiscountRub = value;
					this.SendPropertyChanged("DiscountRub");
					this.OnDiscountRubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSumOtherDiscounts", DbType="Bit NOT NULL")]
		public bool IsSumOtherDiscounts
		{
			get
			{
				return this._IsSumOtherDiscounts;
			}
			set
			{
				if ((this._IsSumOtherDiscounts != value))
				{
					this.OnIsSumOtherDiscountsChanging(value);
					this.SendPropertyChanging();
					this._IsSumOtherDiscounts = value;
					this.SendPropertyChanged("IsSumOtherDiscounts");
					this.OnIsSumOtherDiscountsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSizeDiscountPerc", DbType="TinyInt NOT NULL")]
		public byte MaxSizeDiscountPerc
		{
			get
			{
				return this._MaxSizeDiscountPerc;
			}
			set
			{
				if ((this._MaxSizeDiscountPerc != value))
				{
					this.OnMaxSizeDiscountPercChanging(value);
					this.SendPropertyChanging();
					this._MaxSizeDiscountPerc = value;
					this.SendPropertyChanged("MaxSizeDiscountPerc");
					this.OnMaxSizeDiscountPercChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecPromoCode_SpecPromoCodeCoursesDirection", Storage="_SpecPromoCodeCoursesDirections", ThisKey="PromoCode_ID", OtherKey="PromoCode_ID")]
		public EntitySet<SpecPromoCodeCoursesDirection> SpecPromoCodeCoursesDirections
		{
			get
			{
				return this._SpecPromoCodeCoursesDirections;
			}
			set
			{
				this._SpecPromoCodeCoursesDirections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpecPromoCodeCoursesDirections(SpecPromoCodeCoursesDirection entity)
		{
			this.SendPropertyChanging();
			entity.SpecPromoCode = this;
		}
		
		private void detach_SpecPromoCodeCoursesDirections(SpecPromoCodeCoursesDirection entity)
		{
			this.SendPropertyChanging();
			entity.SpecPromoCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCourseDirectionsA")]
	public partial class CourseDirectionsA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseDirectionA_TC;
		
		private string _DirectionAName;
		
		private int _SortOrder;
		
		private bool _DontShow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseDirectionA_TCChanging(string value);
    partial void OnCourseDirectionA_TCChanged();
    partial void OnDirectionANameChanging(string value);
    partial void OnDirectionANameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDontShowChanging(bool value);
    partial void OnDontShowChanged();
    #endregion
		
		public CourseDirectionsA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirectionA_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string CourseDirectionA_TC
		{
			get
			{
				return this._CourseDirectionA_TC;
			}
			set
			{
				if ((this._CourseDirectionA_TC != value))
				{
					this.OnCourseDirectionA_TCChanging(value);
					this.SendPropertyChanging();
					this._CourseDirectionA_TC = value;
					this.SendPropertyChanged("CourseDirectionA_TC");
					this.OnCourseDirectionA_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionAName", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DirectionAName
		{
			get
			{
				return this._DirectionAName;
			}
			set
			{
				if ((this._DirectionAName != value))
				{
					this.OnDirectionANameChanging(value);
					this.SendPropertyChanging();
					this._DirectionAName = value;
					this.SendPropertyChanged("DirectionAName");
					this.OnDirectionANameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DontShow", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DontShow
		{
			get
			{
				return this._DontShow;
			}
			set
			{
				if ((this._DontShow != value))
				{
					this.OnDontShowChanging(value);
					this.SendPropertyChanging();
					this._DontShow = value;
					this.SendPropertyChanged("DontShow");
					this.OnDontShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPromoCodeCoursesDirections")]
	public partial class SpecPromoCodeCoursesDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PromoCodeCoursesDirections_ID;
		
		private decimal _PromoCode_ID;
		
		private string _PromoCodeType_TC;
		
		private string _CourseDirectionCourse_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
		private EntityRef<SpecPromoCode> _SpecPromoCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromoCodeCoursesDirections_IDChanging(decimal value);
    partial void OnPromoCodeCoursesDirections_IDChanged();
    partial void OnPromoCode_IDChanging(decimal value);
    partial void OnPromoCode_IDChanged();
    partial void OnPromoCodeType_TCChanging(string value);
    partial void OnPromoCodeType_TCChanged();
    partial void OnCourseDirectionCourse_TCChanging(string value);
    partial void OnCourseDirectionCourse_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public SpecPromoCodeCoursesDirection()
		{
			this._SpecPromoCode = default(EntityRef<SpecPromoCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeCoursesDirections_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal PromoCodeCoursesDirections_ID
		{
			get
			{
				return this._PromoCodeCoursesDirections_ID;
			}
			set
			{
				if ((this._PromoCodeCoursesDirections_ID != value))
				{
					this.OnPromoCodeCoursesDirections_IDChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeCoursesDirections_ID = value;
					this.SendPropertyChanged("PromoCodeCoursesDirections_ID");
					this.OnPromoCodeCoursesDirections_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal PromoCode_ID
		{
			get
			{
				return this._PromoCode_ID;
			}
			set
			{
				if ((this._PromoCode_ID != value))
				{
					if (this._SpecPromoCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromoCode_IDChanging(value);
					this.SendPropertyChanging();
					this._PromoCode_ID = value;
					this.SendPropertyChanged("PromoCode_ID");
					this.OnPromoCode_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeType_TC", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string PromoCodeType_TC
		{
			get
			{
				return this._PromoCodeType_TC;
			}
			set
			{
				if ((this._PromoCodeType_TC != value))
				{
					this.OnPromoCodeType_TCChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeType_TC = value;
					this.SendPropertyChanged("PromoCodeType_TC");
					this.OnPromoCodeType_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirectionCourse_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CourseDirectionCourse_TC
		{
			get
			{
				return this._CourseDirectionCourse_TC;
			}
			set
			{
				if ((this._CourseDirectionCourse_TC != value))
				{
					this.OnCourseDirectionCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._CourseDirectionCourse_TC = value;
					this.SendPropertyChanged("CourseDirectionCourse_TC");
					this.OnCourseDirectionCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecPromoCode_SpecPromoCodeCoursesDirection", Storage="_SpecPromoCode", ThisKey="PromoCode_ID", OtherKey="PromoCode_ID", IsForeignKey=true)]
		public SpecPromoCode SpecPromoCode
		{
			get
			{
				return this._SpecPromoCode.Entity;
			}
			set
			{
				SpecPromoCode previousValue = this._SpecPromoCode.Entity;
				if (((previousValue != value) 
							|| (this._SpecPromoCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecPromoCode.Entity = null;
						previousValue.SpecPromoCodeCoursesDirections.Remove(this);
					}
					this._SpecPromoCode.Entity = value;
					if ((value != null))
					{
						value.SpecPromoCodeCoursesDirections.Add(this);
						this._PromoCode_ID = value.PromoCode_ID;
					}
					else
					{
						this._PromoCode_ID = default(decimal);
					}
					this.SendPropertyChanged("SpecPromoCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tRatingSubtotals")]
	public partial class RatingSubtotal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _RatingSubtotal_ID;
		
		private decimal _RatingYear;
		
		private decimal _RatingMonth;
		
		private string _Teacher_TC;
		
		private string _RatingCourse_TC;
		
		private float _Score;
		
		private int _Quantity;
		
		private System.DateTime _InputDate;
		
		private string _Employee_TC;
		
		private System.DateTime _LastChangeDate;
		
		private string _LastChanger_TC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingSubtotal_IDChanging(decimal value);
    partial void OnRatingSubtotal_IDChanged();
    partial void OnRatingYearChanging(decimal value);
    partial void OnRatingYearChanged();
    partial void OnRatingMonthChanging(decimal value);
    partial void OnRatingMonthChanged();
    partial void OnTeacher_TCChanging(string value);
    partial void OnTeacher_TCChanged();
    partial void OnRatingCourse_TCChanging(string value);
    partial void OnRatingCourse_TCChanged();
    partial void OnScoreChanging(float value);
    partial void OnScoreChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnInputDateChanging(System.DateTime value);
    partial void OnInputDateChanged();
    partial void OnEmployee_TCChanging(string value);
    partial void OnEmployee_TCChanged();
    partial void OnLastChangeDateChanging(System.DateTime value);
    partial void OnLastChangeDateChanged();
    partial void OnLastChanger_TCChanging(string value);
    partial void OnLastChanger_TCChanged();
    #endregion
		
		public RatingSubtotal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingSubtotal_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal RatingSubtotal_ID
		{
			get
			{
				return this._RatingSubtotal_ID;
			}
			set
			{
				if ((this._RatingSubtotal_ID != value))
				{
					this.OnRatingSubtotal_IDChanging(value);
					this.SendPropertyChanging();
					this._RatingSubtotal_ID = value;
					this.SendPropertyChanged("RatingSubtotal_ID");
					this.OnRatingSubtotal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingYear", DbType="Decimal(4,0) NOT NULL")]
		public decimal RatingYear
		{
			get
			{
				return this._RatingYear;
			}
			set
			{
				if ((this._RatingYear != value))
				{
					this.OnRatingYearChanging(value);
					this.SendPropertyChanging();
					this._RatingYear = value;
					this.SendPropertyChanged("RatingYear");
					this.OnRatingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingMonth", DbType="Decimal(2,0) NOT NULL")]
		public decimal RatingMonth
		{
			get
			{
				return this._RatingMonth;
			}
			set
			{
				if ((this._RatingMonth != value))
				{
					this.OnRatingMonthChanging(value);
					this.SendPropertyChanging();
					this._RatingMonth = value;
					this.SendPropertyChanged("RatingMonth");
					this.OnRatingMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Teacher_TC
		{
			get
			{
				return this._Teacher_TC;
			}
			set
			{
				if ((this._Teacher_TC != value))
				{
					this.OnTeacher_TCChanging(value);
					this.SendPropertyChanging();
					this._Teacher_TC = value;
					this.SendPropertyChanged("Teacher_TC");
					this.OnTeacher_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCourse_TC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RatingCourse_TC
		{
			get
			{
				return this._RatingCourse_TC;
			}
			set
			{
				if ((this._RatingCourse_TC != value))
				{
					this.OnRatingCourse_TCChanging(value);
					this.SendPropertyChanging();
					this._RatingCourse_TC = value;
					this.SendPropertyChanged("RatingCourse_TC");
					this.OnRatingCourse_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Real NOT NULL")]
		public float Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InputDate
		{
			get
			{
				return this._InputDate;
			}
			set
			{
				if ((this._InputDate != value))
				{
					this.OnInputDateChanging(value);
					this.SendPropertyChanging();
					this._InputDate = value;
					this.SendPropertyChanged("InputDate");
					this.OnInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Employee_TC
		{
			get
			{
				return this._Employee_TC;
			}
			set
			{
				if ((this._Employee_TC != value))
				{
					this.OnEmployee_TCChanging(value);
					this.SendPropertyChanging();
					this._Employee_TC = value;
					this.SendPropertyChanged("Employee_TC");
					this.OnEmployee_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChangeDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastChangeDate
		{
			get
			{
				return this._LastChangeDate;
			}
			set
			{
				if ((this._LastChangeDate != value))
				{
					this.OnLastChangeDateChanging(value);
					this.SendPropertyChanging();
					this._LastChangeDate = value;
					this.SendPropertyChanged("LastChangeDate");
					this.OnLastChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanger_TC", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string LastChanger_TC
		{
			get
			{
				return this._LastChanger_TC;
			}
			set
			{
				if ((this._LastChanger_TC != value))
				{
					this.OnLastChanger_TCChanging(value);
					this.SendPropertyChanging();
					this._LastChanger_TC = value;
					this.SendPropertyChanged("LastChanger_TC");
					this.OnLastChanger_TCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
